{
	"format_version": "1.8.0",
	"minecraft:entity": {
		"description": {
			"identifier": "billey:anglerfish",
			"runtime_identifier": "minecraft:cod",
			"is_spawnable": true,
			"is_summonable": true,
			"is_experimental": false,
			"scripts": {
				"animate": [
					"tame"
				]
			},
			"animations": {
				"tame": "controller.animation.billeysmobs.tame"
			} /*,
      "properties": {
        "property:blue": {
          "values": [0,1]
        }
      },
      "aliases": {
        "billey:blue_anglerfish": {
          "property:blue": 1
        }
      }*/
		}, /*"permutations": [
  {
    "condition": "query.actor_property('property:blue') == 1",
    "components": { "minecraft:is_hidden_when_invisible": {},
      "minecraft:transformation": {
				"into": "billey:anglerfish<spawn_blue>"
      },
      "minecraft:scale": {
        "value": 0
      }
    }
  }
],*/
		"component_groups": {
			"kromatik": {
				"minecraft:is_illager_captain": {}
			},
			"alive": {
				"minecraft:experience_reward": {
					"on_bred": "Math.Random(1,7)",
					"on_death": "query.last_hit_by_player ? Math.Random(1,3) : 0"
				},
				"minecraft:scale": {
					"value": 0.45
				},
				"minecraft:interact": [
					{
						"interact_text": "action.interact.pet",
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"operator": "!=",
										"value": "billey:swordfish"
									},
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"operator": "!=",
										"value": "billey:golden_swordfish"
									},
									{
										"test": "is_family",
										"subject": "other",
										"value": "player"
									},
									{
										"test": "is_sleeping",
										"subject": "self",
										"value": false
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": true
									}
								]
							},
							"event": "bepetted",
							"target": "self"
						}
					},
					{
						"use_item": true,
						"play_sounds": "eat",
						"interact_text": "action.interact.feed",
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "billey:sand_banana"
									},
									{
										"test": "is_family",
										"subject": "other",
										"value": "player"
									}
								]
							},
							"event": "beenfedabanana",
							"target": "self"
						}
					},
					{
						"use_item": true,
						"play_sounds": "milk",
						"interact_text": "action.interact.use",
						"transform_to_item": "glass_bottle",
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "billey:colorful_bottle"
									},
									{
										"test": "is_family",
										"subject": "other",
										"value": "player"
									},
									{
										"test": "is_owner",
										"subject": "other",
										"value": true
									}
								]
							},
							"event": "kroma",
							"target": "self"
						}
					},
					{
						"use_item": true,
						"play_sounds": "milk",
						"interact_text": "action.interact.use",
						"transform_to_item": "glass_bottle",
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "billey:colorless_bottle"
									},
									{
										"test": "is_family",
										"subject": "other",
										"value": "player"
									},
									{
										"test": "is_owner",
										"subject": "other",
										"value": true
									}
								]
							},
							"event": "nokroma",
							"target": "self"
						}
					}
				],
				"minecraft:health": {
					"value": 14,
					"max": 14
				},
				"minecraft:damage_sensor": [
					{
						"on_damage": {
							"filters": {
								"test": "has_equipment",
								"subject": "other",
								"domain": "hand",
								"value": "billey:swordfish"
							}
						},
						"damage_multiplier": 7.0
					},
					{
						"on_damage": {
							"filters": {
								"test": "has_equipment",
								"subject": "other",
								"domain": "hand",
								"value": "billey:golden_swordfish"
							}
						},
						"damage_multiplier": 7.0
					},
					{
						"on_damage": {
							"filters": {
								"all_of": [
									{
										"any_of": [
											{
												"test": "is_family",
												"subject": "other",
												"value": "eatscod"
											},
											{
												"test": "is_family",
												"subject": "other",
												"value": "piranha"
											}
										]
									},
									{
										"test": "has_damage",
										"value": "fatal"
									}
								]
							},
							"event": "minecraft:die1"
						},
						"deals_damage": false
					},
					{
						"on_damage": {
							"filters": {
										"test": "is_family",
										"subject": "other",
										"value": "wildcod"
									}
						},
						"deals_damage": false
					}
				]
			},
			"eaten1": {
				"minecraft:scale": {
					"value": 0.53
				},
				"minecraft:health": {
					"value": 23,
					"max": 23
				},
				"minecraft:timer": {
					"time": [
						0.05,
						0.05
					],
					"looping": false,
					"time_down_event": {
						"event": "minecraft:die2",
						"target": "self"
					}
				},
				"minecraft:loot": {
					"table": "loot_tables/empty.json"
				}
			},
			"eaten2": {
				"minecraft:scale": {
					"value": 0.45
				},
				"minecraft:health": {
					"value": 23,
					"max": 23
				},
				"minecraft:timer": {
					"time": [
						0.05,
						0.05
					],
					"looping": false,
					"time_down_event": {
						"event": "minecraft:die3",
						"target": "self"
					}
				},
				"minecraft:loot": {
					"table": "loot_tables/empty.json"
				}
			},
			"eaten3": {
				"minecraft:scale": {
					"value": 0.37
				},
				"minecraft:health": {
					"value": 23,
					"max": 23
				},
				"minecraft:timer": {
					"time": [
						0.05,
						0.05
					],
					"looping": false,
					"time_down_event": {
						"event": "minecraft:die4",
						"target": "self"
					}
				},
				"minecraft:loot": {
					"table": "loot_tables/empty.json"
				}
			},
			"eaten4": {
				"minecraft:scale": {
					"value": 0.23
				},
				"minecraft:health": {
					"value": 23,
					"max": 23
				},
				"minecraft:timer": {
					"time": [
						0.05,
						0.05
					],
					"looping": false,
					"time_down_event": {
						"event": "minecraft:die5",
						"target": "self"
					}
				},
				"minecraft:loot": {
					"table": "loot_tables/empty.json"
				}
			},
			"eaten5": {
				"minecraft:scale": {
					"value": 0.14
				},
				"minecraft:health": {
					"value": 23,
					"max": 23
				},
				"minecraft:timer": {
					"time": [
						0.05,
						0.05
					],
					"looping": false,
					"time_down_event": {
						"event": "minecraft:die6",
						"target": "self"
					}
				},
				"minecraft:loot": {
					"table": "loot_tables/empty.json"
				}
			},
			"eaten6": {
				"minecraft:scale": {
					"value": 0.07
				},
				"minecraft:health": {
					"value": 23,
					"max": 23
				},
				"minecraft:timer": {
					"time": [
						0.05,
						0.05
					],
					"looping": false,
					"time_down_event": {
						"event": "minecraft:die7",
						"target": "self"
					}
				},
				"minecraft:loot": {
					"table": "loot_tables/empty.json"
				}
			},
			"die": {
				"minecraft:scale": {
					"value": 0
				},
				"minecraft:health": {
					"value": 1,
					"max": 1
				},
				"minecraft:loot": {
					"table": "loot_tables/empty.json"
				},
				"minecraft:transformation": {
					"into": "billey:despawn",
					"delay": 0.01
				}
			},
			"variant1": {
				"minecraft:variant": {
					"value": 0
				}
			},
			"variant2": {
				"minecraft:variant": {
					"value": 1
				}
			},
			"variant3": {
				"minecraft:variant": {
					"value": 2
				}
			},
			"variant4": {
				"minecraft:variant": {
					"value": 3
				},
				"minecraft:damage_sensor": [
					{
						"on_damage": {
							"event": "minecraft:goldie",
							"target": "self",
							"cause": "any"
						},
						"deals_damage": false
					}
				],
				"minecraft:loot": {
					"table": "loot_tables/entities/prizesmall.json"
				},
				"minecraft:scale": {
					"value": 0.166
				}
			},
			"golden_dead": {
				"minecraft:scale": {
					"value": 0
				},
				"minecraft:health": {
					"value": 0,
					"max": 0
				},
				"minecraft:loot": {
					"table": "loot_tables/entities/prizesmall.json"
				},
				"minecraft:transformation": {
					"into": "billey:despawn",
					"delay": 0.01
				}
			},
			"variant5": {
				"minecraft:variant": {
					"value": 4
				}
			},
			"variant6": {
				"minecraft:variant": {
					"value": 5
				}
			},
			"variant7": {
				"minecraft:variant": {
					"value": 6
				}
			},
			"variant8": {
				"minecraft:variant": {
					"value": 7
				}
			},
			"wild": {
				"minecraft:tameable": {
					"probability": 0.69420666,
					"tame_items": [
						"billey:pizzapiece"
					],
					"tame_event": {
						"event": "tamed_yay",
						"target": "self"
					}
				},
				"minecraft:behavior.nearest_attackable_target": {
					"priority": 2,
					"reselect_targets": true,
					"entity_types": [
						{
							"filters": {
								"any_of": [
									{
										"test": "is_family",
										"subject": "other",
										"value": "wildcod"
									},
									{
										"test": "is_family",
										"subject": "other",
										"value": "monster"
									}
								]
							},
							"max_dist": 5
						}
					],
					"must_see": true
				},
				"minecraft:type_family": {
					"family": [
						"wildangler",
						"angler",
						"eatscod",
						"mob"
					]
				}
			},
			"tamed": {
				"minecraft:persistent": {},
				"minecraft:leashable": {
					"soft_distance": 6.0,
					"hard_distance": 8.0,
					"max_distance": 12.0
				},
				"minecraft:healable": {
					"items": [
						{
							"item": "billey:cooked_snail",
							"heal_amount": 4,
							"effects": [
								{
									"name": "strength",
									"chance": 1.0,
									"duration": 15,
									"amplifier": 1
								}
							]
						},
						{
							"item": "billey:cooked_snail_s",
							"heal_amount": 4,
							"effects": [
								{
									"name": "speed",
									"chance": 1.0,
									"duration": 15,
									"amplifier": 1
								}
							]
						},
						{
							"item": "billey:cooked_snail_w",
							"heal_amount": 4,
							"effects": [
								{
									"name": "regeneration",
									"chance": 1.0,
									"duration": 15,
									"amplifier": 1
								}
							]
						},
						{
							"item": "billey:pizzapiece",
							"heal_amount": 4
						}
					]
				},
				"minecraft:is_tamed": {},
				"minecraft:type_family": {
					"family": [
						"angler",
						"eatscod"
					]
				},
				"minecraft:behavior.nearest_attackable_target": {
					"priority": 4,
					"reselect_targets": true,
					"entity_types": [
						{
							"filters": {
								"any_of": [
									{
										"test": "is_family",
										"subject": "other",
										"value": "monster"
									},
									{
										"test": "is_family",
										"subject": "other",
										"value": "wildcod"
									}
								]
							},
							"max_dist": 5
						}
					],
					"must_see": true
				}
			},
			"sugar": {
				"minecraft:mark_variant": {
					"value": 7
				}
			}
		},
		"components": {
			"minecraft:is_hidden_when_invisible": {},
			"minecraft:type_family": {
				"family": [
					"angler",
					"eatscod",
					"mob"
				]
			},
			"minecraft:collision_box": {
				"width": 1.3,
				"height": 1.0
			},
			"minecraft:loot": {
				"table": "loot_tables/entities/billangler.json"
			},
			"minecraft:breathable": {
				"totalSupply": 15,
				"suffocateTime": 0,
				"breathesAir": false,
				"breathesWater": true
			},
			"minecraft:underwater_movement": {
				"value": 0.075
			},
			"minecraft:movement": {
				"value": 0.15
			},
			"minecraft:physics": {
				"has_gravity": false
			},
			"minecraft:pushable": {
				"is_pushable": true,
				"is_pushable_by_piston": true
			},
			"minecraft:navigation.generic": {
				"is_amphibious": false,
				"can_path_over_water": false,
				"can_swim": true,
				"can_walk": false,
				"can_breach": false,
				"can_sink": false
			},
			"minecraft:movement.sway": {
				"sway_amplitude": 0.0
			},
			"minecraft:behavior.swim_idle": {
				"priority": 5
			},
			"minecraft:behavior.random_swim": {
				"speed_multiplier": 1.0,
				"priority": 3,
				"xz_dist": 16,
				"y_dist": 4,
				"interval": 0
			},
			"minecraft:behavior.swim_wander": {
				"priority": 4,
				"speed_multiplier": 0.014,
				"interval": 60
			},
			"minecraft:behavior.hurt_by_target": {
				"priority": 2
			},
			"minecraft:attack": {
				"damage": 10,
				"effect_name": "poison",
				"effect_duration": 30
			},
			"minecraft:nameable": {},
			"minecraft:damage_sensor": [
				{
					"on_damage": {
						"filters": {
							"test": "is_family",
							"subject": "other",
							"value": "cod"
						}
					},
					"deals_damage": false
				}
			],
			"minecraft:behavior.melee_attack": {
				"require_complete_path": true,
				"priority": 2,
				"on_attack": {
					"event": "gvdl_zpv",
					"target": "self"
				},
				"speed_multiplier": 1,
				"track_target": true
			}
		},
		"events": {
			"gvdl_zpv": {
				//v.attack_time doesn't work for fish
				"sequence": [
					{
						"run_command": {
							"command": [
								"effect @s regeneration 1 4 true"
							]
						}
					},
					{
						"randomize": [
							{
								"weight": 1,
								"run_command": {
									"command": [
										"playanimation @s animation.billangler.attack"
									]
								}
							},
							{
								"weight": 1,
								"run_command": {
									"command": [
										"playanimation @s animation.billangler.attackfront"
									]
								}
							},
							{
								"weight": 1,
								"run_command": {
									"command": [
										"playanimation @s animation.billangler.attackright"
									]
								}
							}
						]
					}
				]
			},
			"beenfedabanana": {
				"sequence": [
					{
						"run_command": {
							"command": [
								"particle billey:eatbanana ~ ~.5 ~"
							]
						}
					},
					{
						"randomize": [
							{
								"weight": 36,
								"run_command": {
									"command": [
										"effect @s regeneration 7 1"
									]
								}
							},
							{
								"weight": 4,
								"run_command": {
									"command": [
										"effect @s regeneration 10"
									]
								}
							},
							{
								"weight": 4,
								"run_command": {
									"command": [
										"effect @s speed 10"
									]
								}
							},
							{
								"weight": 4,
								"run_command": {
									"command": [
										"effect @s absorption 10"
									]
								}
							},
							{
								"weight": 4,
								"run_command": {
									"command": [
										"effect @s resistance 10"
									]
								}
							},
							{
								"weight": 4,
								"run_command": {
									"command": [
										"effect @s strength 10"
									]
								}
							},
							{
								"weight": 4,
								"run_command": {
									"command": [
										"effect @s water_breathing 10"
									]
								}
							},
							{
								"weight": 4,
								"run_command": {
									"command": [
										"effect @s fire_resistance 10"
									]
								}
							},
							{
								"weight": 1,
								"sequence": [
									{
										"run_command": {
											"command": [
												"effect @s levitation 1 0 true"
											]
										}
									},
									{
										"run_command": {
											"target": "other",
											"command": [
												"effect @s levitation 1 0 true"
											]
										}
									}
								]
							}
						]
					}
				]
			},
			"bepetted": {
				"sequence": [
					{
						"randomize": [
							{
								"weight": 13
							},
							{
								"weight": 1
							},
							{
								"weight": 1,
								"run_command": {
									"command": [
										"playanimation @s animation.billcat.petted"
									]
								}
							}
						]
					},
					{
						"run_command": {
							"target": "other",
							"command": [
								"playanimation @s animation.billeyplayer.pet"
							]
						}
					},
					{
						"randomize": [
							{
								"weight": 370
							},
							{
								"weight": 99
							},
							{
								"weight": 3,
								"run_command": {
									"command": [
										"effect @s resistance 10 1 true"
									]
								}
							},
							{
								"weight": 3,
								"run_command": {
									"command": [
										"effect @s fire_resistance 10 1 true"
									]
								}
							},
							{
								"weight": 3,
								"run_command": {
									"command": [
										"effect @s strength 10 1 true"
									]
								}
							},
							{
								"weight": 3,
								"run_command": {
									"command": [
										"effect @s water_breathing 30 0 true"
									]
								}
							},
							{
								"weight": 3,
								"run_command": {
									"command": [
										"effect @s speed 10 1 true"
									]
								}
							},
							{
								"weight": 1,
								"run_command": {
									"command": [
										"effect @s levitation 1 1 true",
										"effect @s regeneration 30 1 true"
									]
								}
							},
							{
								"weight": 1,
								"run_command": {
									"command": [
										"effect @s speed 1 0"
									]
								}
							}
						]
					}
				]
			},
			"kroma": {
				"add": {
					"component_groups": [
						"kromatik"
					]
				},
				"run_command": {
					"target": "other",
					"command": [
						"execute @s[tag=!billcoloradvancement] ~~~ function billcoloradvancement",
						"tag @s[tag=!billcoloradvancement] add billcoloradvancement"
					]
				}
			},
			"nokroma": {
				"remove": {
					"component_groups": [
						"kromatik"
					]
				}
			},
			"spawn_blue": {
				"add": {
					"component_groups": [
						"alive",
						"dry",
						"wild",
						"variant8"
					]
				}
			},
			"minecraft:entity_spawned": {
				"sequence": [
					{
						"filters": {
							"all_of": [
								{
									"test": "has_biome_tag",
									"operator": "not",
									"value": "frozen"
								},
								{
									"test": "has_biome_tag",
									"operator": "not",
									"value": "warm"
								},
								{
									"test": "has_biome_tag",
									"operator": "not",
									"value": "lukewarm"
								}
							]
						},
						"randomize": [
							{
								"weight": 90,
								"add": {
									"component_groups": [
										"alive",
										"dry",
										"wild",
										"variant1"
									]
								}
							},
							{
								"weight": 30,
								"add": {
									"component_groups": [
										"alive",
										"dry",
										"wild",
										"variant2"
									]
								}
							},
							{
								"weight": 30,
								"add": {
									"component_groups": [
										"alive",
										"dry",
										"wild",
										"variant3"
									]
								}
							},
							{
								"weight": 5,
								"add": {
									"component_groups": [
										"dry",
										"wild",
										"variant4"
									]
								}
							},
							{
								"weight": 30,
								"add": {
									"component_groups": [
										"alive",
										"dry",
										"wild",
										"variant5"
									]
								}
							},
							{
								"weight": 30,
								"add": {
									"component_groups": [
										"alive",
										"dry",
										"wild",
										"variant6"
									]
								}
							},
							{
								"weight": 30,
								"add": {
									"component_groups": [
										"alive",
										"dry",
										"wild",
										"variant7"
									]
								}
							},
							{
								"weight": 30,
								"add": {
									"component_groups": [
										"alive",
										"dry",
										"wild",
										"variant8"
									]
								}
							}
						]
					},
					{
						"filters": {
							"all_of": [
								{
									"test": "has_biome_tag",
									"value": "frozen"
								},
								{
									"test": "has_biome_tag",
									"operator": "not",
									"value": "warm"
								},
								{
									"test": "has_biome_tag",
									"operator": "not",
									"value": "lukewarm"
								}
							]
						},
						"randomize": [
							{
								"weight": 10,
								"add": {
									"component_groups": [
										"alive",
										"dry",
										"wild",
										"variant1"
									]
								}
							},
							{
								"weight": 40,
								"add": {
									"component_groups": [
										"alive",
										"dry",
										"wild",
										"variant2"
									]
								}
							},
							{
								"weight": 5,
								"add": {
									"component_groups": [
										"alive",
										"dry",
										"wild",
										"variant3"
									]
								}
							},
							{
								"weight": 2,
								"add": {
									"component_groups": [
										"dry",
										"wild",
										"variant4"
									]
								}
							},
							{
								"weight": 40,
								"add": {
									"component_groups": [
										"alive",
										"dry",
										"wild",
										"variant5"
									]
								}
							},
							{
								"weight": 5,
								"add": {
									"component_groups": [
										"alive",
										"dry",
										"wild",
										"variant6"
									]
								}
							},
							{
								"weight": 5,
								"add": {
									"component_groups": [
										"alive",
										"dry",
										"wild",
										"variant7"
									]
								}
							},
							{
								"weight": 25,
								"add": {
									"component_groups": [
										"alive",
										"dry",
										"wild",
										"variant7"
									]
								}
							}
						]
					},
					{
						"filters": {
							"any_of": [
								{
									"test": "has_biome_tag",
									"value": "warm"
								},
								{
									"test": "has_biome_tag",
									"value": "lukewarm"
								}
							]
						},
						"randomize": [
							{
								"weight": 10,
								"add": {
									"component_groups": [
										"alive",
										"dry",
										"wild",
										"variant1"
									]
								}
							},
							{
								"weight": 500,
								"add": {
									"component_groups": [
										"alive",
										"dry",
										"wild",
										"variant2"
									]
								}
							},
							{
								"weight": 500,
								"add": {
									"component_groups": [
										"alive",
										"dry",
										"wild",
										"variant3"
									]
								}
							},
							{
								"weight": 100,
								"add": {
									"component_groups": [
										"dry",
										"wild",
										"variant4"
									]
								}
							},
							{
								"weight": 500,
								"add": {
									"component_groups": [
										"alive",
										"dry",
										"wild",
										"variant5"
									]
								}
							},
							{
								"weight": 500,
								"add": {
									"component_groups": [
										"alive",
										"dry",
										"wild",
										"variant6"
									]
								}
							},
							{
								"weight": 500,
								"add": {
									"component_groups": [
										"alive",
										"dry",
										"wild",
										"variant7"
									]
								}
							},
							{
								"weight": 500,
								"add": {
									"component_groups": [
										"alive",
										"dry",
										"wild",
										"variant8"
									]
								}
							}
						]
					}
				]
			},
			"become_wet": {
				"add": {
					"component_groups": [
						"wet"
					]
				},
				"remove": {
					"component_groups": [
						"dry"
					]
				}
			},
			"become_dry": {
				"add": {
					"component_groups": [
						"dry"
					]
				},
				"remove": {
					"component_groups": [
						"wet"
					]
				}
			},
			"minecraft:die1": {
				"add": {
					"component_groups": [
						"eaten1"
					]
				},
				"remove": {
					"component_groups": [
						"alive"
					]
				}
			},
			"minecraft:die2": {
				"add": {
					"component_groups": [
						"eaten2"
					]
				},
				"remove": {
					"component_groups": [
						"eaten1"
					]
				}
			},
			"dotheboom": {
				"add": {
					"component_groups": [
						"theboom"
					]
				}
			},
			"minecraft:die3": {
				"add": {
					"component_groups": [
						"eaten3"
					]
				},
				"remove": {
					"component_groups": [
						"eaten2"
					]
				}
			},
			"minecraft:die4": {
				"add": {
					"component_groups": [
						"eaten4"
					]
				},
				"remove": {
					"component_groups": [
						"eaten3"
					]
				}
			},
			"minecraft:die5": {
				"add": {
					"component_groups": [
						"eaten5"
					]
				},
				"remove": {
					"component_groups": [
						"eaten4"
					]
				}
			},
			"minecraft:die6": {
				"add": {
					"component_groups": [
						"eaten6"
					]
				},
				"remove": {
					"component_groups": [
						"eaten5"
					]
				}
			},
			"minecraft:die7": {
				"add": {
					"component_groups": [
						"die"
					]
				},
				"remove": {
					"component_groups": [
						"eaten6"
					]
				}
			},
			"minecraft:goldie": {
				"add": {
					"component_groups": [
						"golden_dead"
					]
				}
			},
			"tamed_yay": {
				"add": {
					"component_groups": [
						"tamed"
					]
				},
				"remove": {
					"component_groups": [
						"wild"
					]
				}
			},
			"minecraft:start_exploding": {
				"sequence": [
					{
						"filters": {
							"test": "has_component",
							"operator": "!=",
							"value": "minecraft:is_charged"
						},
						"add": {
							"component_groups": [
								"minecraft:exploding"
							]
						}
					},
					{
						"filters": {
							"test": "has_component",
							"value": "minecraft:is_charged"
						},
						"add": {
							"component_groups": [
								"minecraft:charged_exploding"
							]
						}
					}
				]
			},
			"minecraft:stop_exploding": {
				"remove": {
					"component_groups": [
						"minecraft:exploding"
					]
				}
			}
		}
	}
}