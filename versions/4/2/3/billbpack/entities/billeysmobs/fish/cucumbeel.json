{
  "format_version": "1.16.0",
  "minecraft:entity": {
    "description": {
      "identifier": "billey:cucumbeel",
      "is_spawnable": true,
      "is_summonable": true,
      "is_experimental": false,
      "scripts": {
        "animate": [
          "tame",
          "fix",
          "cucumba",
          {
            "goup": "query.has_rider && query.is_moving && query.is_in_water"
          },
          {
            "slow": "query.has_rider && query.is_in_water"
          },
          {
            "waterbreth": "query.has_rider"
          }
        ]
      },
      "animations": {
        "fix": "controller.animation.billcucumbeel.fix",
        "tame": "controller.animation.billeysmobs.tame",
        "cucumba": "controller.animation.cucumba.vitamin",
        "mineral": "controller.animation.cucumba.veryhighnumba",
        "waterbreth": "controller.animation.cucumba.bacteria",
        "goup": "animation.cucumba.goup",
        "slow": "animation.cucumba.slow"
      }
    },
    "component_groups": {
            "following": {
                "minecraft:behavior.follow_owner": {
                    "priority": 0,
                    "speed_multiplier": 1.25,
                    "start_distance": 10,
                    "stop_distance": 2
                }
            },
      "kromatik": {
        "minecraft:is_illager_captain": {}
      },
      "wild": {
        "minecraft:despawn": {
          "despawn_from_distance": {}
        }
      },
      "minecraft:tameable": {
        "probability": 0.69420666,
        "tame_items": [
          "billey:pizzapiece"
        ],
        "tame_event": {
          "event": "tamed_yay",
          "target": "self"
        }
      },
      "minecraft:rideable": {
        "seat_count": 1,
        "family_types": [
          "picklepet"
        ],
        "interact_text": "action.interact.ride.horse",
        "seats": {
          "position": [
            0.0,
            0.0,
            0.0
          ]
        }
      }
    },
    "tamed": {
      "minecraft:persistent": {},
      "minecraft:leashable": {
        "soft_distance": 6.0,
        "hard_distance": 8.0,
        "max_distance": 12.0
      },
      "minecraft:healable": {
        "items": [
          {
            "item": "billey:cooked_snail",
            "heal_amount": 4,
            "effects": [
              {
                "name": "strength",
                "chance": 1.0,
                "duration": 15,
                "amplifier": 1
              }
            ]
          },
          {
            "item": "billey:cooked_snail_s",
            "heal_amount": 4,
            "effects": [
              {
                "name": "speed",
                "chance": 1.0,
                "duration": 15,
                "amplifier": 1
              }
            ]
          },
          {
            "item": "billey:cooked_snail_w",
            "heal_amount": 4,
            "effects": [
              {
                "name": "regeneration",
                "chance": 1.0,
                "duration": 15,
                "amplifier": 1
              }
            ]
          },
          {
            "item": "billey:pizzapiece",
            "heal_amount": 4
          }
        ]
      },
      "minecraft:rideable": {
        "seat_count": 1,
        "rider_can_interact": true,
        "family_types": [
          "player"
        ],
        "interact_text": "action.interact.ride.horse",
        "seats": {
          "position": [
            0.0,
            0.0,
            0.0
          ]
        }
      }
    },
    "fishmovement": {
      "minecraft:navigation.generic": {
        "is_amphibious": false,
        "can_path_over_water": false,
        "can_swim": true,
        "can_walk": false,
        "can_breach": false,
        "can_sink": false
      },
      "minecraft:physics": {
        "has_gravity": false
      },
      "minecraft:pushable": {
        "is_pushable": true,
        "is_pushable_by_piston": true
      },
      "minecraft:movement.sway": {
        "sway_amplitude": 0.0
      },
      "minecraft:behavior.swim_idle": {
        "priority": 5,
        "idle_time": 5.0,
        "success_rate": 0.1
      },
      "minecraft:behavior.random_swim": {
        "priority": 3,
        "speed_multiplier": 1.0,
        "xz_dist": 16,
        "y_dist": 4,
        "interval": 0
      },
      "minecraft:behavior.swim_wander": {
        "priority": 4,
        "interval": 0.1,
        "look_ahead": 2.0,
        "speed_multiplier": 1.0,
        "wander_time": 5.0
      }
    },
    "dead": {
      "minecraft:transformation": {
        "into": "billey:despawn",
        "delay": 0.01
      }
    },
    "horsemovement": {
      "minecraft:underwater_movement": {
        "value": 0.11
      },
      "minecraft:behavior.move_to_water": {
        "priority": 0,
        "search_range": 100,
        "search_height": 5
      },
      "minecraft:physics": {},
      "minecraft:navigation.walk": {
        "is_amphibious": true,
        "avoid_water": true
      },
      "minecraft:movement.basic": {},
      "minecraft:jump.static": {},
      "minecraft:behavior.player_ride_tamed": {},
      "minecraft:input_ground_controlled": {},
      "minecraft:can_power_jump": {}
    }
  },
  "components": {
    "minecraft:is_hidden_when_invisible": {},
    "minecraft:experience_reward": {
      "on_death": "query.last_hit_by_player ? Math.Random(1,3) : 0"
    },
    "minecraft:type_family": {
      "family": [
        "cod",
        "fish"
      ]
    },
    "minecraft:collision_box": {
      "width": 0.6,
      "height": 0.5
    },
    "minecraft:health": {
      "value": 6,
      "max": 6
    },
    "minecraft:damage_sensor": {
      "triggers": [
        {
          "on_damage": {
            "filters": {
              "test": "has_equipment",
              "subject": "other",
              "domain": "hand",
              "value": "billey:golden_swordfish"
            }
          },
          "damage_multiplier": 2.333
        },
        {
          "on_damage": {
            "filters": {
              "test": "has_equipment",
              "subject": "other",
              "domain": "hand",
              "value": "billey:swordfish"
            }
          },
          "damage_multiplier": 2.333
        },
        {
          "on_damage": {
            "filters": {
              "all_of": [
                {
                  "any_of": [
                    {
                      "test": "is_family",
                      "subject": "other",
                      "value": "eatscod"
                    },
                    {
                      "test": "is_family",
                      "subject": "other",
                      "value": "piranha"
                    }
                  ]
                },
                {
                  "test": "has_damage",
                  "value": "fatal"
                }
              ]
            },
            "event": "die"
          },
          "deals_damage": false
        }
      ]
    },
    "minecraft:hurt_on_condition": {
      "damage_conditions": [
        {
          "filters": {
            "test": "in_lava",
            "subject": "self",
            "operator": "==",
            "value": true
          },
          "cause": "lava",
          "damage_per_tick": 4
        }
      ]
    },
    "minecraft:loot": {
      "table": "loot_tables/entities/fish.json"
    },
    "minecraft:scale": {
      "value": 1.0
    },
    "minecraft:breathable": {
      "total_supply": 15,
      "suffocate_time": 0,
      "breathes_air": false,
      "breathes_water": true
    },
    "minecraft:movement": {
      "value": 0.1
    },
    "minecraft:underwater_movement": {
      "value": 0.2
    },
    "minecraft:interact": {
      "interactions": [
        {
          "use_item": true,
          "play_sounds": "milk",
          "interact_text": "action.interact.use",
          "transform_to_item": "billey:pickle_juice",
          "on_interact": {
            "filters": {
              "all_of": [
                {
                  "test": "has_equipment",
                  "subject": "other",
                  "domain": "hand",
                  "value": "glass_bottle"
                },
                {
                  "test": "is_family",
                  "subject": "other",
                  "value": "player"
                }
              ]
            }
          }
        },
        {
          "interact_text": "action.interact.pet",
          "on_interact": {
            "filters": {
              "all_of": [
                {
                  "test": "has_equipment",
                  "subject": "other",
                  "domain": "hand",
                  "operator": "!=",
                  "value": "billey:swordfish"
                },
                {
                  "test": "has_equipment",
                  "subject": "other",
                  "domain": "hand",
                  "operator": "!=",
                  "value": "billey:golden_swordfish"
                },
                {
                  "test": "is_family",
                  "subject": "other",
                  "value": "player"
                },
                {
                  "test": "is_sleeping",
                  "subject": "self",
                  "value": false
                },
                {
                  "test": "is_sneaking",
                  "subject": "other",
                  "value": true
                }
              ]
            },
            "event": "bepetted",
            "target": "self"
          }
        },
        {
          "use_item": true,
          "play_sounds": "eat",
          "interact_text": "action.interact.feed",
          "on_interact": {
            "filters": {
              "all_of": [
                {
                  "test": "has_equipment",
                  "subject": "other",
                  "domain": "hand",
                  "value": "billey:sand_banana"
                },
                {
                  "test": "is_family",
                  "subject": "other",
                  "value": "player"
                }
              ]
            },
            "event": "beenfedabanana",
            "target": "self"
          }
        },
        {
          "use_item": true,
          "play_sounds": "milk",
          "interact_text": "action.interact.use",
          "transform_to_item": "glass_bottle",
          "on_interact": {
            "filters": {
              "all_of": [
                {
                  "test": "has_equipment",
                  "subject": "other",
                  "domain": "hand",
                  "value": "billey:colorful_bottle"
                },
                {
                  "test": "is_family",
                  "subject": "other",
                  "value": "player"
                },
                {
                  "test": "is_owner",
                  "subject": "other",
                  "value": true
                }
              ]
            },
            "event": "kroma",
            "target": "self"
          }
        },
        {
          "use_item": true,
          "play_sounds": "milk",
          "interact_text": "action.interact.use",
          "transform_to_item": "glass_bottle",
          "on_interact": {
            "filters": {
              "all_of": [
                {
                  "test": "has_equipment",
                  "subject": "other",
                  "domain": "hand",
                  "value": "billey:colorless_bottle"
                },
                {
                  "test": "is_family",
                  "subject": "other",
                  "value": "player"
                },
                {
                  "test": "is_owner",
                  "subject": "other",
                  "value": true
                }
              ]
            },
            "event": "nokroma",
            "target": "self"
          }
        },
        {
          "play_sounds": "plop",
          "swing": true,
          "interact_text": "action.interact.wander",
          "on_interact": {
            "filters": {
              "all_of": [
                {
                  "test": "has_component",
                  "subject": "self",
                  "value": "minecraft:behavior.follow_owner"
                },
                {
                  "test": "is_family",
                  "subject": "other",
                  "value": "player"
                },
                {
                  "test": "is_owner",
                  "subject": "other",
                  "value": true
                }
              ]
            },
            "event": "eventwander",
            "target": "self"
          }
        },
        {
          "play_sounds": "plop",
          "swing": true,
          "interact_text": "action.interact.follow",
          "on_interact": {
            "filters": {
              "all_of": [
                {
                  "test": "has_component",
                  "subject": "self",
                  "operator": "not",
                  "value": "minecraft:behavior.follow_owner"
                },
                {
                  "test": "is_family",
                  "subject": "other",
                  "value": "player"
                },
                {
                  "test": "is_owner",
                  "subject": "other",
                  "value": true
                }
              ]
            },
            "event": "eventfollow",
            "target": "self"
          }
        }
      ]
    },
    "minecraft:flocking": {
      "in_water": true,
      "match_variants": false,
      "use_center_of_mass": true,
      "low_flock_limit": 4,
      "high_flock_limit": 8,
      "goal_weight": 2.0,
      "loner_chance": 0.1,
      "influence_radius": 3.0,
      "breach_influence": 7.0,
      "separation_weight": 1.75,
      "separation_threshold": 0.95,
      "cohesion_weight": 2.0,
      "cohesion_threshold": 1.95,
      "innner_cohesion_threshold": 1.25,
      "min_height": 1.5,
      "max_height": 6.0,
      "block_distance": 2.0,
      "block_weight": 0.85
    },
    "minecraft:nameable": {},
    "minecraft:conditional_bandwidth_optimization": {}
  },
  "events": {
            "eventwander": {
                "sequence": [
                    {
                        "remove": {
                            "component_groups": [
                                "following"
                            ]
                        }
                    },
                    {
                        "run_command": {
                            "command": [
                                "tellraw @a[r=5] {\"rawtext\": [{\"translate\": \"billmobs.wander\"},{\"selector\": \"@s\"}, {\"translate\": \"billmobs.wander2\"}] }"
                            ]
                        }
                    }
                ]
            },
            "eventfollow": {
                "sequence": [
                    {
                        "add": {
                            "component_groups": [
                                "following"
                            ]
                        }
                    },
                    {
                        "run_command": {
                            "command": [
                                "tellraw @a[r=5] {\"rawtext\": [{\"translate\": \"billmobs.follow\"},{\"selector\": \"@s\"}, {\"translate\": \"billmobs.follow2\"}] }"
                            ]
                        }
                    }
                ]
            },
    "beenfedabanana": {
      "sequence": [
        {
          "run_command": {
            "command": [
              "particle billey:eatbanana ~ ~.5 ~"
            ]
          }
        },
        {
          "randomize": [
            {
              "weight": 36,
              "run_command": {
                "command": [
                  "effect @s regeneration 7 1"
                ]
              }
            },
            {
              "weight": 4,
              "run_command": {
                "command": [
                  "effect @s regeneration 10"
                ]
              }
            },
            {
              "weight": 4,
              "run_command": {
                "command": [
                  "effect @s speed 10"
                ]
              }
            },
            {
              "weight": 4,
              "run_command": {
                "command": [
                  "effect @s absorption 10"
                ]
              }
            },
            {
              "weight": 4,
              "run_command": {
                "command": [
                  "effect @s resistance 10"
                ]
              }
            },
            {
              "weight": 4,
              "run_command": {
                "command": [
                  "effect @s strength 10"
                ]
              }
            },
            {
              "weight": 4,
              "run_command": {
                "command": [
                  "effect @s water_breathing 10"
                ]
              }
            },
            {
              "weight": 4,
              "run_command": {
                "command": [
                  "effect @s fire_resistance 10"
                ]
              }
            },
            {
              "weight": 1,
              "sequence": [
                {
                  "run_command": {
                    "command": [
                      "effect @s levitation 1 0 true"
                    ]
                  }
                },
                {
                  "run_command": {
                    "target": "other",
                    "command": [
                      "effect @s levitation 1 0 true"
                    ]
                  }
                }
              ]
            }
          ]
        }
      ]
    },
    "bepetted": {
      "sequence": [
        {
          "randomize": [
            {
              "weight": 13
            },
            {
              "weight": 1
            },
            {
              "weight": 1,
              "run_command": {
                "command": [
                  "playanimation @s animation.billcat.petted"
                ]
              }
            }
          ]
        },
        {
          "run_command": {
            "target": "other",
            "command": [
              "playanimation @s animation.billeyplayer.pet"
            ]
          }
        },
        {
          "randomize": [
            {
              "weight": 370
            },
            {
              "weight": 99
            },
            {
              "weight": 3,
              "run_command": {
                "command": [
                  "effect @s resistance 10 1 true"
                ]
              }
            },
            {
              "weight": 3,
              "run_command": {
                "command": [
                  "effect @s fire_resistance 10 1 true"
                ]
              }
            },
            {
              "weight": 3,
              "run_command": {
                "command": [
                  "effect @s strength 10 1 true"
                ]
              }
            },
            {
              "weight": 3,
              "run_command": {
                "command": [
                  "effect @s water_breathing 30 0 true"
                ]
              }
            },
            {
              "weight": 3,
              "run_command": {
                "command": [
                  "effect @s speed 10 1 true"
                ]
              }
            },
            {
              "weight": 1,
              "run_command": {
                "command": [
                  "effect @s levitation 1 1 true",
                  "effect @s regeneration 30 1 true"
                ]
              }
            },
            {
              "weight": 1,
              "run_command": {
                "command": [
                  "effect @s speed 1 0"
                ]
              }
            }
          ]
        }
      ]
    },
    "kroma": {
      "add": {
        "component_groups": [
          "kromatik"
        ]
      },
      "run_command": {
        "target": "other",
        "command": [
          "execute @s[tag=!billcoloradvancement] ~~~ function billcoloradvancement",
          "tag @s[tag=!billcoloradvancement] add billcoloradvancement"
        ]
      }
    },
    "nokroma": {
      "remove": {
        "component_groups": [
          "kromatik"
        ]
      }
    },
    "die": {
      "add": {
        "component_groups": [
          "dead"
        ]
      }
    },
    "tamed_yay": {
      "add": {
        "component_groups": [
          "tamed"
        ]
      },
      "remove": {
        "component_groups": [
          "wild"
        ]
      }
    },
    "fish": {
      "add": {
        "component_groups": [
          "fishmovement"
        ]
      },
      "remove": {
        "component_groups": [
          "horsemovement"
        ]
      }
    },
    "horse": {
      "add": {
        "component_groups": [
          "horsemovement"
        ]
      },
      "remove": {
        "component_groups": [
          "fishmovement"
        ]
      }
    },
    "minecraft:entity_spawned": {
      "sequence": [
        {
          "add": {
            "component_groups": [
              "wild",
              "horsemovement"
            ]
          }
        }
      ]
    }
  }
}