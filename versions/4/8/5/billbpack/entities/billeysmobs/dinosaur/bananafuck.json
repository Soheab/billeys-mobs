//this file has a lot of unused stuff
//and a lot of weird code left over from 2020
{
    "format_version": "1.16.0",
    "minecraft:entity": {
        "description": {
            "identifier": "billey:banana_duck",
            "runtime_identifier": "minecraft:cat", //for sleeping with owner animation
            "is_spawnable": true,
            "is_summonable": true,
            "scripts": {
                "animate": [ "check_beta_apis",
                    {
                        "rainbow_effects": "q.is_illager_captain"
                    },
                    {
                        "stand_up_when_hit": "q.is_tamed"
                    },
                    {
                        "info": "!q.is_tamed"
                    },
                    "tame",
                    "gold",
                    "bananafire",
                    {
                        "flyfuck": "!(q.is_sitting&&q.is_alive&&!q.has_rider&&!q.is_avoiding_mobs&&!(q.is_moving&&q.has_target)) && !q.is_sleeping"
                    },
                    {
                        "ornithologist": "q.is_sheared && q.is_tamed"
                    },
                    "can_sleep"
                ]
            },
            "animations": {
                "check_beta_apis": "animation.billey.check_beta_apis",
                "rainbow_effects": "animation.billey.rainbow_effects",
                "stand_up_when_hit": "controller.animation.billey.stand_up_when_hit",
                "info": "animation.billeyinfo.banana_duck",
                "tame": "controller.animation.billeysmobs.tame",
                "bananafire": "controller.animation.bill.bananafire",
                "gold": "controller.animation.billduck.gold",
                "flyfuck": "controller.animation.fuck.fly",
                "ornithologist": "animation.bananaduck.ornithologist",
                "can_sleep": "controller.animation.billey.can_sleep"
            },
            "properties": {
                "billey:xp": {
                    "type": "float",
                    "range": [
                        0.0,
                        1000000.0
                    ],
                    "default": 0.0
                },
                "billey:level": {
                    "type": "int",
                    "range": [
                        1,
                        12
                    ],
                    "default": 1
                }
            }
        },
        "component_groups": {
            "sittable": {
                "minecraft:sittable": {}
            },
            "level1": {
                //this component group isn't used unless the mob is brought back to level 1
                //through commands or the creative item
                "minecraft:health": {
                    "max": 10,
                    "value": 10
                },
                "minecraft:attack": {
                    "damage": 2
                },
                "minecraft:behavior.melee_attack": {
                    "priority": 4,
                    "speed_multiplier": 1.3,
                    "reach_multiplier": 2,
                    "on_attack": {
                        "event": "on_attack",
                        "target": "self"
                    },
                    "on_kill": {
                        "event": "on_kill",
                        "target": "self"
                    }
                }
            },
            "level2": {
                "minecraft:health": {
                    "max": 20,
                    "value": 20
                },
                "minecraft:attack": {
                    "damage": 4
                },
                "minecraft:behavior.melee_attack": {
                    "priority": 4,
                    "speed_multiplier": 1.4,
                    "reach_multiplier": 2.05,
                    "on_attack": {
                        "event": "on_attack",
                        "target": "self"
                    },
                    "on_kill": {
                        "event": "on_kill",
                        "target": "self"
                    }
                }
            },
            "level3": {
                "minecraft:health": {
                    "max": 30,
                    "value": 30
                },
                "minecraft:attack": {
                    "damage": 6
                },
                "minecraft:behavior.melee_attack": {
                    "priority": 4,
                    "speed_multiplier": 1.5,
                    "reach_multiplier": 2.1,
                    "on_attack": {
                        "event": "on_attack",
                        "target": "self"
                    },
                    "on_kill": {
                        "event": "on_kill",
                        "target": "self"
                    }
                }
            },
            "level4": {
                "minecraft:health": {
                    "max": 40,
                    "value": 40
                },
                "minecraft:attack": {
                    "damage": 8
                },
                "minecraft:behavior.melee_attack": {
                    "priority": 4,
                    "speed_multiplier": 1.6,
                    "reach_multiplier": 2.15,
                    "on_attack": {
                        "event": "on_attack",
                        "target": "self"
                    },
                    "on_kill": {
                        "event": "on_kill",
                        "target": "self"
                    }
                }
            },
            "level5": {
                "minecraft:health": {
                    "max": 50,
                    "value": 50
                },
                "minecraft:attack": {
                    "damage": 10
                },
                "minecraft:behavior.melee_attack": {
                    "priority": 4,
                    "speed_multiplier": 1.7,
                    "reach_multiplier": 2.2,
                    "on_attack": {
                        "event": "on_attack",
                        "target": "self"
                    },
                    "on_kill": {
                        "event": "on_kill",
                        "target": "self"
                    }
                }
            },
            "level6": {
                "minecraft:health": {
                    "max": 60,
                    "value": 60
                },
                "minecraft:attack": {
                    "damage": 12
                },
                "minecraft:behavior.melee_attack": {
                    "priority": 4,
                    "speed_multiplier": 1.75,
                    "reach_multiplier": 2.25,
                    "on_attack": {
                        "event": "on_attack",
                        "target": "self"
                    },
                    "on_kill": {
                        "event": "on_kill",
                        "target": "self"
                    }
                }
            },
            "level7": {
                "minecraft:health": {
                    "max": 70,
                    "value": 70
                },
                "minecraft:attack": {
                    "damage": 17
                },
                "minecraft:behavior.melee_attack": {
                    "priority": 4,
                    "speed_multiplier": 1.8,
                    "reach_multiplier": 2.3,
                    "on_attack": {
                        "event": "on_attack",
                        "target": "self"
                    },
                    "on_kill": {
                        "event": "on_kill",
                        "target": "self"
                    }
                }
            },
            "level8": {
                "minecraft:health": {
                    "max": 80,
                    "value": 80
                },
                "minecraft:attack": {
                    "damage": 22
                },
                "minecraft:behavior.melee_attack": {
                    "priority": 4,
                    "speed_multiplier": 1.9,
                    "reach_multiplier": 2.35,
                    "on_attack": {
                        "event": "on_attack",
                        "target": "self"
                    },
                    "on_kill": {
                        "event": "on_kill",
                        "target": "self"
                    }
                }
            },
            "level9": {
                "minecraft:health": {
                    "max": 90,
                    "value": 90
                },
                "minecraft:attack": {
                    "damage": 27
                },
                "minecraft:behavior.melee_attack": {
                    "priority": 4,
                    "speed_multiplier": 1.95,
                    "reach_multiplier": 2.4,
                    "on_attack": {
                        "event": "on_attack",
                        "target": "self"
                    },
                    "on_kill": {
                        "event": "on_kill",
                        "target": "self"
                    }
                }
            },
            "level10": {
                "minecraft:health": {
                    "max": 100,
                    "value": 100
                },
                "minecraft:attack": {
                    "damage": 34
                },
                "minecraft:movement": {
                    "value": 0.25
                },
                "minecraft:scale": {
                    "value": 1
                },
                "minecraft:behavior.melee_attack": {
                    "priority": 4,
                    "speed_multiplier": 2,
                    "reach_multiplier": 2.5,
                    "on_attack": {
                        "event": "on_attack",
                        "target": "self"
                    },
                    "on_kill": {
                        "event": "on_kill",
                        "target": "self"
                    }
                }
            },
            "big_and_slow": {
                "minecraft:health": {
                    "max": 200,
                    "value": 200
                },
                "minecraft:attack": {
                    "damage": 68
                },
                "minecraft:movement": {
                    "value": 0.15
                },
                "minecraft:scale": {
                    "value": 3
                }
            },
            "small_and_quick": {
                "minecraft:health": {
                    "max": 50,
                    "value": 50
                },
                "minecraft:attack": {
                    "damage": 20
                },
                "minecraft:movement": {
                    "value": 0.5
                },
                "minecraft:scale": {
                    "value": 0.5
                },
                "minecraft:behavior.melee_attack": {
                    "priority": 4,
                    "speed_multiplier": 1.75,
                    "reach_multiplier": 6.0,
                    "on_attack": {
                        "event": "on_attack",
                        "target": "self"
                    },
                    "on_kill": {
                        "event": "on_kill",
                        "target": "self"
                    }
                }
            },
            "tamed_component": {
                "minecraft:is_tamed": {}
            },
            "untamed": {
                "minecraft:tameable": {
                    "probability": 1.0,
                    "tame_event": {
                        "event": "ontame"
                    },
                    "tame_items": [
                        "billey:power_banana",
                        "billey:raw_catfish",
                        "billey:bettafish",
                        "billey:pizzapiece",
                        "salmon",
                        "fish",
                        "clownfish",
                        "sweet_berries",
                        "rotten_flesh",
                        "wheat_seeds",
                        "melon_seeds",
                        "carrot",
                        "beetroot_seeds",
                        "pumpkin_seeds",
                        "chicken",
                        "billey:raw_hamster",
                        "billey:poultry_orange",
                        "billey:raw_snail",
                        "billey:raw_snail_s",
                        "billey:raw_snail_w",
                        "billey:raw_piranha",
                        "bread",
                        "apple",
                        "fermented_spider_eye",
                        "spider_eye",
                        "string"
                    ]
                }
            },
            "electrocuted": {
                "minecraft:loot": {
                    "table": "loot_tables/entities/billey_electrocuted.json"
                }
            },
            "tiddies": {
                "minecraft:is_shaking": {},
                "minecraft:transformation": {
                    "into": "billey:duck",
                    "delay": 7,
                    "keep_owner": true
                }
            },
            "zero": {
                "minecraft:color": {
                    "value": 0
                }
            },
            "one": {
                "minecraft:color": {
                    "value": 1
                }
            },
            "two": {
                "minecraft:color": {
                    "value": 2
                }
            },
            "three": {
                "minecraft:color": {
                    "value": 3
                }
            },
            "four": {
                "minecraft:color": {
                    "value": 4
                }
            },
            "five": {
                "minecraft:color": {
                    "value": 5
                }
            },
            "six": {
                "minecraft:color": {
                    "value": 6
                }
            },
            "seven": {
                "minecraft:color": {
                    "value": 7
                }
            },
            "eight": {
                "minecraft:color": {
                    "value": 8
                }
            },
            "nine": {
                "minecraft:color": {
                    "value": 9
                }
            },
            "ten": {
                "minecraft:color": {
                    "value": 10
                }
            },
            "eleven": {
                "minecraft:color": {
                    "value": 11
                }
            },
            "tweleve": {
                "minecraft:color": {
                    "value": 12
                }
            },
            "thirteen": {
                "minecraft:color": {
                    "value": 13
                }
            },
            "fourteen": {
                "minecraft:color": {
                    "value": 14
                }
            },
            "fifteen": {
                "minecraft:color": {
                    "value": 15
                }
            },
            "sixteen": {
                "minecraft:color": {
                    "value": 16
                }
            },
            "seventeen": {
                "minecraft:color": {
                    "value": 17
                }
            },
            "eighteen": {
                "minecraft:color": {
                    "value": 18
                }
            },
            "nineteen": {
                "minecraft:color": {
                    "value": 19
                }
            },
            "kromatik": {
                "minecraft:is_illager_captain": {},
                "minecraft:color": {
                    "value": 0
                }
            },
            "hat": {
                "minecraft:is_charged": {},
                "minecraft:color": {
                    "value": 12
                }
            },
            "no_armor": {
                "minecraft:damage_sensor": {
                    "triggers": [
                        {
                            "cause": "all",
                            "on_damage": {
                                "filters": {
                                    "test": "has_component",
                                    "operator": "not",
                                    "value": "minecraft:is_charged"
                                }
                            },
                            "damage_multiplier": 1.0
                        },
                        {
                            "cause": "fall",
                            "deals_damage": false
                        },
                        {
                            "cause": "all",
                            "deals_damage": false,
                            "on_damage_sound_event": "armor.equip_generic",
                            "on_damage": {
                                "event": "nohat",
                                "target": "self",
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_damage",
                                            "operator": "not",
                                            "value": "magic"
                                        },
                                        {
                                            "test": "has_component",
                                            "value": "minecraft:is_charged"
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "on_damage": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "is_owner",
                                            "subject": "other"
                                        },
                                        {
                                            "test": "has_damage",
                                            "value": "projectile"
                                        }
                                    ]
                                }
                            },
                            "deals_damage": false
                        }
                    ]
                },
                "minecraft:mark_variant": {
                    "value": 0
                }
            },
            "leather_armor": {
                "minecraft:color": {
                    "value": 12
                },
                "minecraft:damage_sensor": {
                    "triggers": [
                        {
                            "cause": "all",
                            "on_damage": {
                                "filters": {
                                    "test": "has_component",
                                    "operator": "not",
                                    "value": "minecraft:is_charged"
                                }
                            },
                            "damage_multiplier": 0.7
                        },
                        {
                            "cause": "fall",
                            "deals_damage": false
                        },
                        {
                            "cause": "all",
                            "deals_damage": false,
                            "on_damage_sound_event": "armor.equip_generic",
                            "on_damage": {
                                "event": "nohat",
                                "target": "self",
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_damage",
                                            "operator": "not",
                                            "value": "magic"
                                        },
                                        {
                                            "test": "has_component",
                                            "value": "minecraft:is_charged"
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "on_damage": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "is_owner",
                                            "subject": "other"
                                        },
                                        {
                                            "test": "has_damage",
                                            "value": "projectile"
                                        }
                                    ]
                                }
                            },
                            "deals_damage": false
                        }
                    ]
                },
                "minecraft:mark_variant": {
                    "value": 1
                }
            },
            "golden_armor": {
                "minecraft:fire_immune": {},
                "minecraft:damage_sensor": {
                    "triggers": [
                        {
                            "cause": "all",
                            "on_damage": {
                                "filters": {
                                    "test": "has_component",
                                    "operator": "not",
                                    "value": "minecraft:is_charged"
                                }
                            },
                            "damage_multiplier": 0.7
                        },
                        {
                            "on_damage": {
                                "cause": "fire"
                            },
                            "damage_multiplier": 0.01
                        },
                        {
                            "on_damage": {
                                "cause": "fire_tick"
                            },
                            "damage_multiplier": 0.01
                        },
                        {
                            "on_damage": {
                                "cause": "lava"
                            },
                            "damage_multiplier": 0.01
                        },
                        {
                            "on_damage": {
                                "cause": "magma"
                            },
                            "damage_multiplier": 0.01
                        },
                        {
                            "cause": "fall",
                            "deals_damage": false
                        },
                        {
                            "cause": "all",
                            "deals_damage": false,
                            "on_damage_sound_event": "armor.equip_generic",
                            "on_damage": {
                                "event": "nohat",
                                "target": "self",
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_damage",
                                            "operator": "not",
                                            "value": "magic"
                                        },
                                        {
                                            "test": "has_component",
                                            "value": "minecraft:is_charged"
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "on_damage": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "is_owner",
                                            "subject": "other"
                                        },
                                        {
                                            "test": "has_damage",
                                            "value": "projectile"
                                        }
                                    ]
                                }
                            },
                            "deals_damage": false
                        }
                    ]
                },
                "minecraft:mark_variant": {
                    "value": 2
                }
            },
            "chain_armor": {
                "minecraft:damage_sensor": {
                    "triggers": [
                        {
                            "cause": "all",
                            "on_damage": {
                                "filters": {
                                    "test": "has_component",
                                    "operator": "not",
                                    "value": "minecraft:is_charged"
                                }
                            },
                            "damage_multiplier": 0.65
                        },
                        {
                            "cause": "fall",
                            "deals_damage": false
                        },
                        {
                            "cause": "all",
                            "on_damage_sound_event": "armor.equip_generic",
                            "deals_damage": false,
                            "on_damage": {
                                "event": "nohat",
                                "target": "self",
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_damage",
                                            "operator": "not",
                                            "value": "magic"
                                        },
                                        {
                                            "test": "has_component",
                                            "value": "minecraft:is_charged"
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "on_damage": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "is_owner",
                                            "subject": "other"
                                        },
                                        {
                                            "test": "has_damage",
                                            "value": "projectile"
                                        }
                                    ]
                                }
                            },
                            "deals_damage": false
                        }
                    ]
                },
                "minecraft:mark_variant": {
                    "value": 3
                }
            },
            "iron_armor": {
                "minecraft:damage_sensor": {
                    "triggers": [
                        {
                            "cause": "all",
                            "on_damage": {
                                "filters": {
                                    "test": "has_component",
                                    "operator": "not",
                                    "value": "minecraft:is_charged"
                                }
                            },
                            "damage_multiplier": 0.6
                        },
                        {
                            "cause": "fall",
                            "deals_damage": false
                        },
                        {
                            "cause": "all",
                            "on_damage_sound_event": "armor.equip_generic",
                            "deals_damage": false,
                            "on_damage": {
                                "event": "nohat",
                                "target": "self",
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_damage",
                                            "operator": "not",
                                            "value": "magic"
                                        },
                                        {
                                            "test": "has_component",
                                            "value": "minecraft:is_charged"
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "on_damage": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "is_owner",
                                            "subject": "other"
                                        },
                                        {
                                            "test": "has_damage",
                                            "value": "projectile"
                                        }
                                    ]
                                }
                            },
                            "deals_damage": false
                        }
                    ]
                },
                "minecraft:mark_variant": {
                    "value": 4
                }
            },
            "diamond_armor": {
                "minecraft:damage_sensor": {
                    "triggers": [
                        {
                            "cause": "all",
                            "on_damage": {
                                "filters": {
                                    "test": "has_component",
                                    "operator": "not",
                                    "value": "minecraft:is_charged"
                                }
                            },
                            "damage_multiplier": 0.5
                        },
                        {
                            "cause": "fall",
                            "deals_damage": false
                        },
                        {
                            "cause": "all",
                            "deals_damage": false,
                            "on_damage_sound_event": "armor.equip_generic",
                            "on_damage": {
                                "event": "nohat",
                                "target": "self",
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_damage",
                                            "operator": "not",
                                            "value": "magic"
                                        },
                                        {
                                            "test": "has_component",
                                            "value": "minecraft:is_charged"
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "on_damage": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "is_owner",
                                            "subject": "other"
                                        },
                                        {
                                            "test": "has_damage",
                                            "value": "projectile"
                                        }
                                    ]
                                }
                            },
                            "deals_damage": false
                        }
                    ]
                },
                "minecraft:mark_variant": {
                    "value": 5
                }
            },
            "netherite_armor": {
                "minecraft:damage_sensor": {
                    "triggers": [
                        {
                            "cause": "all",
                            "on_damage": {
                                "filters": {
                                    "test": "has_component",
                                    "operator": "not",
                                    "value": "minecraft:is_charged"
                                }
                            },
                            "damage_multiplier": 0.4
                        },
                        {
                            "cause": "fall",
                            "deals_damage": false
                        },
                        {
                            "cause": "all",
                            "deals_damage": false,
                            "on_damage_sound_event": "armor.equip_generic",
                            "on_damage": {
                                "event": "nohat",
                                "target": "self",
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_damage",
                                            "operator": "not",
                                            "value": "magic"
                                        },
                                        {
                                            "test": "has_component",
                                            "value": "minecraft:is_charged"
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "on_damage": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "is_owner",
                                            "subject": "other"
                                        },
                                        {
                                            "test": "has_damage",
                                            "value": "projectile"
                                        }
                                    ]
                                }
                            },
                            "deals_damage": false
                        }
                    ]
                },
                "minecraft:mark_variant": {
                    "value": 6
                },
                "minecraft:knockback_resistance": {
                    "value": 0.5
                }
            },
            "endrod_armor": {
                "minecraft:shooter": {
                    "def": "billey:end_rod_projectile"
                },
                "minecraft:knockback_resistance": {
                    "value": 0.25
                },
                "minecraft:behavior.ranged_attack": {
                    "priority": 0,
                    "attack_interval_min": 1.0,
                    "attack_interval_max": 2,
                    "attack_radius": 20.0
                },
                "minecraft:color": {
                    "value": 0
                },
                "minecraft:damage_sensor": {
                    "triggers": [
                        {
                            "cause": "all",
                            "on_damage": {
                                "filters": {
                                    "test": "has_component",
                                    "operator": "not",
                                    "value": "minecraft:is_charged"
                                }
                            },
                            "damage_multiplier": 0.3
                        },
                        {
                            "cause": "fall",
                            "deals_damage": false
                        },
                        {
                            "cause": "all",
                            "deals_damage": false,
                            "on_damage_sound_event": "armor.equip_generic",
                            "on_damage": {
                                "event": "nohat",
                                "target": "self",
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_damage",
                                            "operator": "not",
                                            "value": "magic"
                                        },
                                        {
                                            "test": "has_component",
                                            "value": "minecraft:is_charged"
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "on_damage": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "is_owner",
                                            "subject": "other"
                                        },
                                        {
                                            "test": "has_damage",
                                            "value": "projectile"
                                        }
                                    ]
                                }
                            },
                            "deals_damage": false
                        }
                    ]
                },
                "minecraft:mark_variant": {
                    "value": 7
                }
            },
            "red": {
                "minecraft:fire_immune": {},
                "minecraft:variant": {
                    "value": 1
                }
            },
            "blue": {
                "minecraft:variant": {
                    "value": 4
                }
            },
            "green": {
                "minecraft:variant": {
                    "value": 3
                }
            },
            "purple": {
                "minecraft:variant": {
                    "value": 2
                }
            },
            "white": {
                "minecraft:variant": {
                    "value": 5
                },
                "minecraft:color": {
                    "value": 0
                }
            },
            "inverted": {
                "minecraft:variant": {
                    "value": 6
                }
            },
            "fromblackduck": {
                "minecraft:variant": {
                    "value": 7
                }
            },
            "minecraft:banana_duck_baby": {
                "minecraft:is_baby": {},
                "minecraft:behavior.panic": {
                    "priority": 1,
                    "speed_multiplier": 1.5
                },
                "minecraft:scale_by_age": {
                    "start_scale": 0.5,
                    "end_scale": 0.8
                },
                "minecraft:ageable": {
                    "duration": 4800,
                    "feed_items": [
                        "billey:picklepet_fertilizer",
                        "billey:swordmeat",
                        "bread",
                        "billey:swordcooked"
                    ],
                    "grow_up": {
                        "event": "minecraft:ageable_grow_up",
                        "target": "self"
                    }
                },
                "minecraft:behavior.follow_parent": {
                    "priority": 5,
                    "speed_multiplier": 1.1
                }
            },
            "duckage": {},
            "minecraft:banana_duck_adult": {
                "minecraft:experience_reward": {
                    "on_bred": "Math.Random(1,7)",
                    "on_death": "q.last_hit_by_player ? Math.Random(1,3) : 0"
                },
                "minecraft:loot": {
                    "table": "loot_tables/entities/banana_duck.json"
                },
                "minecraft:breedable": {
                    "require_tame": true,
                    "allow_sitting": true,
                    "breeds_with": [
                        {
                            "mate_type": "billey:banana_duck",
                            "baby_type": "billey:banana_duck",
                            "breed_event": {
                                "event": "minecraft:entity_born",
                                "target": "baby"
                            }
                        },
                        {
                            "mate_type": "billey:kiwi",
                            "baby_type": "billey:kiwi",
                            "breed_event": {
                                "event": "minecraft:entity_born_green",
                                "target": "baby"
                            }
                        },
                        {
                            "mate_type": "billey:duck",
                            "baby_type": "billey:banana_duck",
                            "breed_event": {
                                "event": "minecraft:entity_born_green",
                                "target": "baby"
                            }
                        },
                        {
                            "mate_type": "billey:penguin",
                            "baby_type": "billey:banana_duck",
                            "breed_event": {
                                "event": "minecraft:entity_born_purple",
                                "target": "baby"
                            }
                        },
                        {
                            "mate_type": "billey:pigeon",
                            "baby_type": "billey:banana_duck",
                            "breed_event": {
                                "event": "minecraft:entity_born_white",
                                "target": "baby"
                            }
                        },
                        {
                            "mate_type": "billey:orange_penguin",
                            "baby_type": "billey:duck",
                            "breed_event": {
                                "event": "minecraft:entity_born_golden",
                                "target": "baby"
                            }
                        }
                    ],
                    "breed_items": [
                        "billey:poultry_orange",
                        "billey:picklepet_fertilizer",
                        "billey:swordmeat",
                        "bread",
                        "billey:swordcooked"
                    ]
                },
                "minecraft:behavior.breed": {
                    "priority": 3,
                    "speed_multiplier": 1.0
                },
                "minecraft:scale": {
                    "value": 1.0
                }
            },
            "gold": {
                "minecraft:experience_reward": {
                    "on_bred": "Math.Random(1,7)",
                    "on_death": "q.life_time / 30"
                },
                "minecraft:behavior.mount_pathing": {
                    "priority": 1,
                    "speed_multiplier": 1.25,
                    "target_dist": 0.0,
                    "track_target": true
                },
                "minecraft:behavior.controlled_by_player": {
                    "priority": 0
                },
                "minecraft:item_controllable": {
                    "control_items": [
                        "billey:swordfish",
                        "billey:golden_swordfish"
                    ]
                },
                "minecraft:boostable": {
                    "speed_multiplier": 4.0,
                    "duration": 5.0,
                    "boost_items": [
                        {
                            "item": "billey:swordfish",
                            "damage": 1,
                            "replace_item": "billey:swordcooked"
                        },
                        {
                            "item": "billey:golden_swordfish",
                            "damage": 1,
                            "replace_item": "gold_ingot"
                        }
                    ]
                },
                "minecraft:rideable": {
                    "seat_count": 1,
                    "family_types": [
                        "player"
                    ],
                    "seats": {
                        "position": [
                            0,
                            0.2,
                            -0.3
                        ]
                    }
                }
            },
            "wild": {
                "minecraft:despawn": {
                    "despawn_from_distance": {}
                },
                "minecraft:tameable": {
                    "probability": 0.33,
                    "tame_items": [
                        "billey:power_banana",
                        "billey:picklepet_fertilizer",
                        "billey:swordmeat",
                        "bread",
                        "billey:swordcooked"
                    ],
                    "tame_event": {
                        "event": "ontame",
                        "target": "self"
                    }
                }
            },
            "tamed": {
                "minecraft:is_dyeable": {
                    "interact_text": "action.interact.dye"
                },
                "minecraft:behavior.avoid_mob_type": {
                    "priority": 0,
                    "max_flee": 16,
                    "entity_types": [
                        {
                            "filters": {
                                "test": "has_component",
                                "subject": "other",
                                "value": "minecraft:explode"
                            },
                            "max_dist": 12,
                            "walk_speed_multiplier": 1.4,
                            "sprint_speed_multiplier": 1.4
                        }
                    ]
                },
                "minecraft:behavior.tempt": {
                    "priority": 5,
                    "speed_multiplier": 1.0,
                    "items": [
                        "billey:picklepet_fertilizer",
                        "apple",
                        "billey:swordmeat",
                        "bread",
                        "billey:swordcooked"
                    ]
                },
                "minecraft:persistent": {},
                "minecraft:behavior.pet_sleep_with_owner": {
                    "priority": 2,
                    "speed_multiplier": 1.2,
                    "search_radius": 10,
                    "search_height": 10,
                    "goal_radius": 1
                },
                "minecraft:is_tamed": {},
                "minecraft:tameable": {}, //for the script to be able to get the mob's owner
                "minecraft:behavior.stay_while_sitting": {
                    "priority": 2
                },
                "minecraft:interact": {
                    "interactions": [
                        {
                            "play_sounds": "plop",
                            "swing": true,
                            "interact_text": "action.interact.get_info",
                            "on_interact": {
                                "filters": {
                                    "any_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "feather"
                                        },
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "book"
                                        },
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:info_book"
                                        }
                                    ]
                                },
                                "event": "send_info",
                                "target": "self"
                            }
                        },
                        {
                            "play_sounds": "plop",
                            "swing": true,
                            "interact_text": "action.interact.wander",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "stick"
                                        },
                                        {
                                            "test": "is_sneaking",
                                            "subject": "other",
                                            "value": false
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "value": "minecraft:behavior.follow_owner"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "eventwander",
                                "target": "self"
                            }
                        },
                        {
                            "play_sounds": "plop",
                            "swing": true,
                            "interact_text": "action.interact.untame",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:untaming_stick"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "untame",
                                "target": "self"
                            }
                        },
                        {
                            "play_sounds": "plop",
                            "swing": true,
                            "interact_text": "action.interact.follow",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "stick"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "operator": "not",
                                            "value": "minecraft:behavior.follow_owner"
                                        },
                                        {
                                            "test": "is_sneaking",
                                            "subject": "other",
                                            "value": false
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "eventfollow",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "transform_to_item": "billey:sand_banana",
                            "play_sounds": "eat",
                            "interact_text": "action.interact.feed",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "operator": "not",
                                            "value": "minecraft:is_baby"
                                        },
                                        {
                                            "test": "is_sleeping",
                                            "subject": "self",
                                            "value": false
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "any_of": [
                                                {
                                                    "test": "has_equipment",
                                                    "subject": "other",
                                                    "domain": "hand",
                                                    "value": "apple"
                                                },
                                                {
                                                    "all_of": [
                                                        {
                                                            "test": "has_equipment",
                                                            "subject": "other",
                                                            "domain": "hand",
                                                            "value": "sweet_berries"
                                                        },
                                                        {
                                                            "test": "int_property",
                                                            "domain": "billey:level",
                                                            "operator": ">=",
                                                            "value": 5
                                                        }
                                                    ]
                                                },
                                                {
                                                    "all_of": [
                                                        {
                                                            "test": "has_equipment",
                                                            "subject": "other",
                                                            "domain": "hand",
                                                            "value": "billey:poultry_orange"
                                                        },
                                                        {
                                                            "test": "int_property",
                                                            "domain": "billey:level",
                                                            "operator": ">=",
                                                            "value": 7
                                                        }
                                                    ]
                                                },
                                                {
                                                    "all_of": [
                                                        {
                                                            "test": "has_equipment",
                                                            "subject": "other",
                                                            "domain": "hand",
                                                            "value": "melon"
                                                        },
                                                        {
                                                            "test": "int_property",
                                                            "domain": "billey:level",
                                                            "operator": ">=",
                                                            "value": 10
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "event": "vomit",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "armor.equip_generic",
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:pet_hat"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "operator": "not",
                                            "value": "minecraft:is_saddled"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "wearhat",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": false,
                            "play_sounds": "armor.equip_generic",
                            "spawn_items": {
                                "table": "loot_tables/entities/billeyhat.json"
                            },
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:pet_hat"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "value": "minecraft:is_saddled"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "nohat",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": false,
                            "play_sounds": "armor.equip_generic",
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "any_of": [
                                                {
                                                    "test": "has_equipment",
                                                    "subject": "other",
                                                    "domain": "hand",
                                                    "value": "billey:leather_pet_armor"
                                                },
                                                {
                                                    "test": "has_equipment",
                                                    "subject": "other",
                                                    "domain": "hand",
                                                    "value": "billey:golden_pet_armor"
                                                },
                                                {
                                                    "test": "has_equipment",
                                                    "subject": "other",
                                                    "domain": "hand",
                                                    "value": "billey:chain_pet_armor"
                                                },
                                                {
                                                    "test": "has_equipment",
                                                    "subject": "other",
                                                    "domain": "hand",
                                                    "value": "billey:iron_pet_armor"
                                                },
                                                {
                                                    "test": "has_equipment",
                                                    "subject": "other",
                                                    "domain": "hand",
                                                    "value": "billey:diamond_pet_armor"
                                                },
                                                {
                                                    "test": "has_equipment",
                                                    "subject": "other",
                                                    "domain": "hand",
                                                    "value": "billey:netherite_pet_armor"
                                                }
                                            ]
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "wear_armor",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "armor.equip_generic",
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:endrod_pet_armor"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "value": "minecraft:shooter",
                                            "operator": "not"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "beendrod2",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": false,
                            "play_sounds": "armor.equip_generic",
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "dirt"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        },
                                        {
                                            "test": "is_mark_variant",
                                            "subject": "self",
                                            "operator": "not",
                                            "value": 0
                                        }
                                    ]
                                },
                                "event": "beno2",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "milk",
                            "interact_text": "action.interact.use",
                            "transform_to_item": "glass_bottle",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:colorful_bottle"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "kroma",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "milk",
                            "interact_text": "action.interact.use",
                            "transform_to_item": "glass_bottle",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:colorless_bottle"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "nokroma",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "milk",
                            "interact_text": "action.interact.use",
                            "transform_to_item": "glass_bottle",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:wcat_bottle"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "bebananaduck",
                                "target": "self"
                            }
                        }
                    ]
                },
                "minecraft:behavior.owner_hurt_by_target": {
                    "priority": 1,
                    "entity_types": {
                        "filters": {
                            "all_of": [
                                {
                                    "test": "is_owner",
                                    "subject": "other",
                                    "operator": "not"
                                },
                                {
                                    "test": "is_mark_variant",
                                    "subject": "self",
                                    "operator": "not",
                                    "value": 0
                                }
                            ]
                        }
                    }
                },
                "minecraft:behavior.owner_hurt_target": {
                    "priority": 2,
                    "entity_types": {
                        "max_dist": 127,
                        "filters": {
                            "all_of": [
                                {
                                    "test": "is_owner",
                                    "subject": "other",
                                    "operator": "not"
                                },
                                {
                                    "test": "is_mark_variant",
                                    "subject": "self",
                                    "operator": "not",
                                    "value": 0
                                }
                            ]
                        }
                    }
                },
                "minecraft:sittable": {},
                "minecraft:behavior.follow_owner": {
                    "priority": 4,
                    "speed_multiplier": 1.25,
                    "start_distance": 7,
                    "stop_distance": 5
                }
            },
            "following": {
                "minecraft:behavior.follow_owner": {
                    "priority": 4,
                    "speed_multiplier": 1.25,
                    "start_distance": 7,
                    "stop_distance": 5
                }
            },
            "timer": {
                "minecraft:timer": {
                    "time": [
                        3,
                        9
                    ],
                    "looping": true,
                    "time_down_event": {
                        "event": "do_timer",
                        "target": "self"
                    }
                }
            },
            "quacking": {
                "minecraft:is_sheared": {},
                "minecraft:timer": {
                    "time": [
                        1.25,
                        1.25
                    ],
                    "looping": true,
                    "time_down_event": {
                        "event": "stop_quack",
                        "target": "self"
                    }
                }
            },
            "flying": {
                "minecraft:is_saddled": {},
                "minecraft:timer": {
                    "time": [
                        0.75,
                        1.0
                    ],
                    "looping": true,
                    "time_down_event": {
                        "event": "stop_flying",
                        "target": "self"
                    }
                }
            },
            "angry": {
                "minecraft:follow_range": {
                    "value": 30,
                    "max": 40
                },
                "minecraft:angry": {
                    "duration": 30,
                    "broadcast_anger": true,
                    "broadcast_range": 20,
                    "calm_event": {
                        "event": "calmery",
                        "target": "self"
                    },
                    "broadcast_filters": {
                        "test": "is_family",
                        "value": "duck",
                        "subject": "self"
                    },
                    "broadcast_targets": [
                        "duck"
                    ]
                }
            },
            "firemovement": {
                "minecraft:navigation.walk": {
                    "can_path_over_water": true,
                    "avoid_damage_blocks": true,
                    "avoid_water": false
                }
            },
            "nofiremovement": {
                "minecraft:navigation.walk": {
                    "can_path_over_water": true,
                    "avoid_damage_blocks": true,
                    "avoid_water": true
                }
            }
        },
        "components": {
            "minecraft:interact": {
                "interactions": [
                    {
                        "play_sounds": "plop",
                        "swing": true,
                        "interact_text": "action.interact.get_info",
                        "on_interact": {
                            "filters": {
                                "any_of": [
                                    {
                                        "test": "has_equipment",
                                        "subject": "other",
                                        "domain": "hand",
                                        "value": "feather"
                                    },
                                    {
                                        "test": "has_equipment",
                                        "subject": "other",
                                        "domain": "hand",
                                        "value": "book"
                                    },
                                    {
                                        "test": "has_equipment",
                                        "subject": "other",
                                        "domain": "hand",
                                        "value": "billey:info_book"
                                    }
                                ]
                            },
                            "event": "send_info",
                            "target": "self"
                        }
                    }
                ]
            },
            "minecraft:is_hidden_when_invisible": {},
            "minecraft:type_family": {
                "family": [
                    "banana_duck",
                    "mob",
                    "strider",
                    "duck",
                    "dinosaur"
                ]
            },
            "minecraft:breathable": {
                "total_supply": 15,
                "suffocate_time": 0
            },
            "minecraft:collision_box": {
                "width": 0.4,
                "height": 0.6
            },
            "minecraft:healable": {
                "items": [
                    {
                        "item": "billey:poultry_orange",
                        "heal_amount": 7
                    },
                    {
                        "item": "billey:cooked_snail",
                        "heal_amount": 4,
                        "effects": [
                            {
                                "name": "strength",
                                "chance": 1.0,
                                "duration": 15,
                                "amplifier": 1
                            }
                        ]
                    },
                    {
                        "item": "billey:cooked_snail_s",
                        "heal_amount": 4,
                        "effects": [
                            {
                                "name": "speed",
                                "chance": 1.0,
                                "duration": 15,
                                "amplifier": 1
                            }
                        ]
                    },
                    {
                        "item": "billey:cooked_snail_w",
                        "heal_amount": 4,
                        "effects": [
                            {
                                "name": "regeneration",
                                "chance": 1.0,
                                "duration": 15,
                                "amplifier": 1
                            }
                        ]
                    },
                    {
                        "item": "billey:picklepet_fertilizer",
                        "heal_amount": 3
                    },
                    {
                        "item": "billey:swordmeat",
                        "heal_amount": 3
                    },
                    {
                        "item": "billey:swordcooked",
                        "heal_amount": 6
                    },
                    {
                        "item": "bread",
                        "heal_amount": 6
                    }
                ]
            },
            "minecraft:nameable": {},
            "minecraft:health": {
                "value": 10,
                "max": 10
            },
            "minecraft:hurt_on_condition": {
                "damage_conditions": [
                    {
                        "filters": {
                            "test": "in_lava",
                            "subject": "self",
                            "operator": "==",
                            "value": true
                        },
                        "cause": "lava",
                        "damage_per_tick": 4
                    }
                ]
            },
            "minecraft:movement": {
                "value": 0.25
            },
            "minecraft:damage_sensor": {
                "triggers": [
                    {
                        "cause": "all",
                        "on_damage": {
                            "filters": {
                                "test": "has_component",
                                "operator": "not",
                                "value": "minecraft:is_charged"
                            }
                        },
                        "damage_multiplier": 1.0
                    },
                    {
                        "cause": "fall",
                        "deals_damage": false
                    },
                    {
                        "cause": "all",
                        "deals_damage": false,
                        "on_damage_sound_event": "armor.equip_generic",
                        "on_damage": {
                            "event": "nohat",
                            "target": "self",
                            "filters": {
                                "all_of": [
                                    {
                                        "test": "has_damage",
                                        "operator": "not",
                                        "value": "magic"
                                    },
                                    {
                                        "test": "has_component",
                                        "value": "minecraft:is_charged"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "on_damage": {
                            "filters": {
                                "test": "is_family",
                                "subject": "other",
                                "value": "endrodprojectilexd"
                            }
                        },
                        "deals_damage": false
                    }
                ]
            },
            "minecraft:leashable": {
                "soft_distance": 4.0,
                "hard_distance": 6.0,
                "max_distance": 10.0
            },
            "minecraft:balloonable": {
                "mass": 0.5
            },
            "minecraft:navigation.walk": {
                "can_path_over_water": true,
                "avoid_damage_blocks": true,
                "avoid_water": true
            },
            "minecraft:movement.basic": {},
            "minecraft:jump.static": {},
            "minecraft:can_climb": {},
            "minecraft:behavior.float": {
                "priority": 0
            },
            "minecraft:behavior.mount_pathing": {
                "priority": 2,
                "speed_multiplier": 1.5,
                "target_dist": 0.0,
                "track_target": true
            },
            "minecraft:behavior.nap": {
                "priority": 0,
                "cooldown_min": 20.0,
                "cooldown_max": 45.0,
                "mob_detect_dist": 3,
                "mob_detect_height": 3,
                "can_nap_filters": {
                    "all_of": [
                        {
                            "test": "in_water_or_rain",
                            "subject": "self",
                            "operator": "==",
                            "value": false
                        },
                        {
                            "test": "light_level",
                            "operator": "<",
                            "value": 10
                        },
                        {
                            "test": "is_daytime",
                            "operator": "==",
                            "value": false
                        },
                        {
                            "any_of": [
                                {
                                    "test": "has_tag",
                                    "subject": "self",
                                    "value": "cantsleep",
                                    "operator": "not"
                                },
                                {
                                    "test": "has_component",
                                    "subject": "self",
                                    "value": "minecraft:behavior.follow_owner",
                                    "operator": "not"
                                }
                            ]
                        },
                        {
                            "test": "distance_to_nearest_player",
                            "operator": ">",
                            "value": 2
                        },
                        {
                            "test": "on_ground",
                            "subject": "self",
                            "operator": "==",
                            "value": true
                        }
                    ]
                },
                "wake_mob_exceptions": {
                    "test": "is_sneaking",
                    "subject": "other",
                    "operator": "==",
                    "value": true
                }
            },
            "minecraft:behavior.tempt": {
                "priority": 5,
                "speed_multiplier": 1.0,
                "items": [
                    "billey:picklepet_fertilizer",
                    "billey:swordmeat",
                    "bread",
                    "billey:swordcooked"
                ]
            },
            "minecraft:behavior.beg": {
                "priority": 9,
                "look_distance": 3,
                "look_time": 0,
                "items": [
                    "billey:picklepet_fertilizer",
                    "billey:swordmeat",
                    "bread",
                    "billey:swordcooked"
                ]
            },
            "minecraft:behavior.random_stroll": {
                "priority": 6,
                "speed_multiplier": 1.0
            },
            "minecraft:behavior.look_at_player": {
                "probability": 0.01,
                "priority": 7,
                "look_distance": 6.0
            },
            "minecraft:behavior.random_look_around": {
                "priority": 8
            },
            "minecraft:physics": {},
            "minecraft:pushable": {
                "is_pushable": true,
                "is_pushable_by_piston": true
            },
            "minecraft:behavior.melee_attack": {
                "priority": 4,
                "speed_multiplier": 1.3,
                "reach_multiplier": 2,
                "on_attack": {
                    "event": "on_attack",
                    "target": "self"
                },
                "on_kill": {
                    "event": "on_kill",
                    "target": "self"
                }
            },
            "minecraft:attack": {
                "damage": 2
            },
            "minecraft:on_target_acquired": {
                "event": "angery",
                "target": "self"
            },
            "minecraft:behavior.hurt_by_target": {
                "priority": 2,
                "entity_types": {
                    "filters": {
                        "none_of": [
                            {
                                "test": "is_owner",
                                "subject": "other"
                            }
                        ]
                    }
                }
            },
            "minecraft:on_hurt": {
                "event": "hurtanim",
                "target": "self"
            },
            "minecraft:conditional_bandwidth_optimization": {}
        },
        "events": {
            "wear_armor": {
                "sequence": [
                    {
                        "queue_command": {
                            "target": "other",
                            "command": "scriptevent billey:set_duck_armor"
                        }
                    },
                    {
                        "queue_command": {
                            //"target": "self", is assumed when not providing one
                            "command": "scriptevent billey:duck_equip_armor"
                        }
                    }
                ]
            },
            "add_sittable": {
                "add": {
                    "component_groups": [
                        "sittable"
                    ]
                }
            },
            "remove_sittable": {
                "remove": {
                    "component_groups": [
                        "sittable"
                    ]
                }
            },
            "on_attack": {
                "sequence": [
                    {
                        "filters": {
                            "none_of": [
                                {
                                    "test": "is_family",
                                    "subject": "target",
                                    "value": "player"
                                },
                                {
                                    "test": "is_family",
                                    "subject": "target",
                                    "value": "inanimate"
                                }
                            ]
                        },
                        "set_property": {
                            "billey:xp": "q.property('billey:xp') + 0.6"
                        }
                    },
                    {
                        "filters": {
                            "test": "int_property",
                            "domain": "billey:level",
                            "operator": ">=",
                            "value": 3
                        },
                        "queue_command": {
                            "target": "target",
                            "command": "effect @s wither 7 0"
                        }
                    },
                    {
                        "trigger": "check_level"
                    }
                ]
            },
            "on_kill": {
                "sequence": [
                    {
                        "filters": {
                            "none_of": [
                                {
                                    "test": "is_family",
                                    "subject": "target",
                                    "value": "player"
                                },
                                {
                                    "test": "is_family",
                                    "subject": "target",
                                    "value": "inanimate"
                                }
                            ]
                        },
                        "set_property": {
                            "billey:xp": "q.property('billey:xp') + 1"
                        }
                    }
                ]
            },
            "check_level": {
                "filters": {
                    "all_of": [
                        {
                            "test": "has_component",
                            "value": "minecraft:is_tamed"
                        },
                        {
                            "test": "has_component",
                            "operator": "not",
                            "value": "minecraft:is_baby"
                        }
                    ]
                },
                "sequence": [
                    {
                        "filters": {
                            "all_of": [
                                {
                                    "test": "int_property",
                                    "domain": "billey:level",
                                    "operator": "<",
                                    "value": 2
                                },
                                {
                                    "test": "float_property",
                                    "domain": "billey:xp",
                                    "operator": ">=",
                                    "value": 30.0 //xp_level_2
                                }
                            ]
                        },
                        "trigger": "to_level2"
                    },
                    {
                        "filters": {
                            "all_of": [
                                {
                                    "test": "int_property",
                                    "domain": "billey:level",
                                    "operator": "<",
                                    "value": 3
                                },
                                {
                                    "test": "float_property",
                                    "domain": "billey:xp",
                                    "operator": ">=",
                                    "value": 80.0 //xp_level_3
                                }
                            ]
                        },
                        "trigger": "to_level3"
                    },
                    {
                        "filters": {
                            "all_of": [
                                {
                                    "test": "int_property",
                                    "domain": "billey:level",
                                    "operator": "<",
                                    "value": 4
                                },
                                {
                                    "test": "float_property",
                                    "domain": "billey:xp",
                                    "operator": ">=",
                                    "value": 150.0 //xp_level_4
                                }
                            ]
                        },
                        "trigger": "to_level4"
                    },
                    {
                        "filters": {
                            "all_of": [
                                {
                                    "test": "int_property",
                                    "domain": "billey:level",
                                    "operator": "<",
                                    "value": 5
                                },
                                {
                                    "test": "float_property",
                                    "domain": "billey:xp",
                                    "operator": ">=",
                                    "value": 240.0 //xp_level_5
                                }
                            ]
                        },
                        "trigger": "to_level5"
                    },
                    {
                        "filters": {
                            "all_of": [
                                {
                                    "test": "int_property",
                                    "domain": "billey:level",
                                    "operator": "<",
                                    "value": 6
                                },
                                {
                                    "test": "float_property",
                                    "domain": "billey:xp",
                                    "operator": ">=",
                                    "value": 330.0 //xp_level_6
                                }
                            ]
                        },
                        "trigger": "to_level6"
                    },
                    {
                        "filters": {
                            "all_of": [
                                {
                                    "test": "int_property",
                                    "domain": "billey:level",
                                    "operator": "<",
                                    "value": 7
                                },
                                {
                                    "test": "float_property",
                                    "domain": "billey:xp",
                                    "operator": ">=",
                                    "value": 440.0 //xp_level_7
                                }
                            ]
                        },
                        "trigger": "to_level7"
                    },
                    {
                        "filters": {
                            "all_of": [
                                {
                                    "test": "int_property",
                                    "domain": "billey:level",
                                    "operator": "<",
                                    "value": 8
                                },
                                {
                                    "test": "float_property",
                                    "domain": "billey:xp",
                                    "operator": ">=",
                                    "value": 550.0 //xp_level_8
                                }
                            ]
                        },
                        "trigger": "to_level8"
                    },
                    {
                        "filters": {
                            "all_of": [
                                {
                                    "test": "int_property",
                                    "domain": "billey:level",
                                    "operator": "<",
                                    "value": 9
                                },
                                {
                                    "test": "float_property",
                                    "domain": "billey:xp",
                                    "operator": ">=",
                                    "value": 670.0 //xp_level_9
                                }
                            ]
                        },
                        "trigger": "to_level9"
                    },
                    {
                        "filters": {
                            "all_of": [
                                {
                                    "test": "int_property",
                                    "domain": "billey:level",
                                    "operator": "<",
                                    "value": 10
                                },
                                {
                                    "test": "float_property",
                                    "domain": "billey:xp",
                                    "operator": ">=",
                                    "value": 810.0 //xp_level_10
                                }
                            ]
                        },
                        "trigger": "to_level10"
                    }
                ]
            },
            "to_level1": {
                "sequence": [
                    {
                        "add": {
                            "component_groups": [
                                "level1"
                            ]
                        },
                        "set_property": {
                            "billey:level": "1",
                            "billey:xp": "0"
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "tellraw @a[r=30] {\"rawtext\":[{\"translate\":\"chat.billeylevelup.reset\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
                                "playsound random.levelup @a[r=30] ~~~ 1.0 1.1 0.5"
                            ]
                        }
                    }
                ]
            },
            "to_level2": {
                "sequence": [
                    {
                        "add": {
                            "component_groups": [
                                "level2"
                            ]
                        },
                        "set_property": {
                            "billey:level": "2",
                            "billey:xp": "30" //xp_level_2
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "tellraw @p {\"rawtext\":[{\"translate\":\"chat.billeylevelup\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"2\"}]}}]}",
                                "tellraw @p {\"rawtext\":[{\"translate\":\"chat.billeylevelup.info\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
                                "tag @p add got_lvl_msg",
                                "tellraw @a[r=30,tag=!got_lvl_msg] {\"rawtext\":[{\"translate\":\"chat.billeylevelup\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"2\"}]}}]}",
                                "tellraw @a[r=30,tag=!got_lvl_msg] {\"rawtext\":[{\"translate\":\"chat.billeylevelup.info\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
                                "tag @a remove got_lvl_msg",
                                "effect @s instant_health 1 255 true",
                                "playsound random.levelup @a[r=30] ~~~ 1.0 1.1 0.5"
                            ]
                        }
                    }
                ]
            },
            "to_level3": {
                "sequence": [
                    {
                        "add": {
                            "component_groups": [
                                "level3"
                            ]
                        },
                        "set_property": {
                            "billey:level": "3",
                            "billey:xp": "80" //xp_level_3
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "tellraw @p {\"rawtext\":[{\"translate\":\"chat.billeylevelup\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"3\"}]}}]}",
                                "tellraw @p {\"rawtext\":[{\"translate\":\"chat.billeylevelup.info\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
                                "tag @p add got_lvl_msg",
                                "tellraw @a[r=30,tag=!got_lvl_msg] {\"rawtext\":[{\"translate\":\"chat.billeylevelup\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"3\"}]}}]}",
                                "tellraw @a[r=30,tag=!got_lvl_msg] {\"rawtext\":[{\"translate\":\"chat.billeylevelup.info\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
                                "tag @a remove got_lvl_msg",
                                "effect @s instant_health 1 255 true",
                                "playsound random.levelup @a[r=30] ~~~ 1.0 1.1 0.5",
                                "tellraw @a[r=30] {\"rawtext\":[{\"translate\":\"chat.billeylevelup.withering\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}"
                            ]
                        }
                    }
                ]
            },
            "to_level4": {
                "sequence": [
                    {
                        "add": {
                            "component_groups": [
                                "level4"
                            ]
                        },
                        "set_property": {
                            "billey:level": "4",
                            "billey:xp": "150" //xp_level_4
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "tellraw @p {\"rawtext\":[{\"translate\":\"chat.billeylevelup\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"4\"}]}}]}",
                                "tellraw @p {\"rawtext\":[{\"translate\":\"chat.billeylevelup.info\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
                                "tag @p add got_lvl_msg",
                                "tellraw @a[r=30,tag=!got_lvl_msg] {\"rawtext\":[{\"translate\":\"chat.billeylevelup\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"4\"}]}}]}",
                                "tellraw @a[r=30,tag=!got_lvl_msg] {\"rawtext\":[{\"translate\":\"chat.billeylevelup.info\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
                                "tag @a remove got_lvl_msg",
                                "effect @s instant_health 1 255 true",
                                "playsound random.levelup @a[r=30] ~~~ 1.0 1.1 0.5"
                            ]
                        }
                    }
                ]
            },
            "to_level5": {
                "sequence": [
                    {
                        "add": {
                            "component_groups": [
                                "level5"
                            ]
                        },
                        "set_property": {
                            "billey:level": "5",
                            "billey:xp": "240" //xp_level_5
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "tellraw @p {\"rawtext\":[{\"translate\":\"chat.billeylevelup\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"5\"}]}}]}",
                                "tellraw @p {\"rawtext\":[{\"translate\":\"chat.billeylevelup.info\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
                                "tag @p add got_lvl_msg",
                                "tellraw @a[r=30,tag=!got_lvl_msg] {\"rawtext\":[{\"translate\":\"chat.billeylevelup\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"5\"}]}}]}",
                                "tellraw @a[r=30,tag=!got_lvl_msg] {\"rawtext\":[{\"translate\":\"chat.billeylevelup.info\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
                                "tag @a remove got_lvl_msg",
                                "effect @s instant_health 1 255 true",
                                "playsound random.levelup @a[r=30] ~~~ 1.0 1.1 0.5"
                            ]
                        }
                    }
                ]
            },
            "to_level6": {
                "sequence": [
                    {
                        "add": {
                            "component_groups": [
                                "level6"
                            ]
                        },
                        "set_property": {
                            "billey:level": "6",
                            "billey:xp": "330" //xp_level_6
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "tellraw @p {\"rawtext\":[{\"translate\":\"chat.billeylevelup\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"6\"}]}}]}",
                                "tellraw @p {\"rawtext\":[{\"translate\":\"chat.billeylevelup.info\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
                                "tag @p add got_lvl_msg",
                                "tellraw @a[r=30,tag=!got_lvl_msg] {\"rawtext\":[{\"translate\":\"chat.billeylevelup\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"6\"}]}}]}",
                                "tellraw @a[r=30,tag=!got_lvl_msg] {\"rawtext\":[{\"translate\":\"chat.billeylevelup.info\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
                                "tag @a remove got_lvl_msg",
                                "effect @s instant_health 1 255 true",
                                "playsound random.levelup @a[r=30] ~~~ 1.0 1.1 0.5"
                            ]
                        }
                    }
                ]
            },
            "to_level7": {
                "sequence": [
                    {
                        "add": {
                            "component_groups": [
                                "level7"
                            ]
                        },
                        "set_property": {
                            "billey:level": "7",
                            "billey:xp": "440" //xp_level_7
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "tellraw @p {\"rawtext\":[{\"translate\":\"chat.billeylevelup\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"7\"}]}}]}",
                                "tellraw @p {\"rawtext\":[{\"translate\":\"chat.billeylevelup.info\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
                                "tag @p add got_lvl_msg",
                                "tellraw @a[r=30,tag=!got_lvl_msg] {\"rawtext\":[{\"translate\":\"chat.billeylevelup\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"7\"}]}}]}",
                                "tellraw @a[r=30,tag=!got_lvl_msg] {\"rawtext\":[{\"translate\":\"chat.billeylevelup.info\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
                                "tag @a remove got_lvl_msg",
                                "effect @s instant_health 1 255 true",
                                "playsound random.levelup @a[r=30] ~~~ 1.0 1.1 0.5"
                            ]
                        }
                    }
                ]
            },
            "to_level8": {
                "sequence": [
                    {
                        "add": {
                            "component_groups": [
                                "level8"
                            ]
                        },
                        "set_property": {
                            "billey:level": "8",
                            "billey:xp": "550" //xp_level_8
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "tellraw @p {\"rawtext\":[{\"translate\":\"chat.billeylevelup\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"8\"}]}}]}",
                                "tellraw @p {\"rawtext\":[{\"translate\":\"chat.billeylevelup.info\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
                                "tag @p add got_lvl_msg",
                                "tellraw @a[r=30,tag=!got_lvl_msg] {\"rawtext\":[{\"translate\":\"chat.billeylevelup\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"8\"}]}}]}",
                                "tellraw @a[r=30,tag=!got_lvl_msg] {\"rawtext\":[{\"translate\":\"chat.billeylevelup.info\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
                                "tag @a remove got_lvl_msg",
                                "effect @s instant_health 1 255 true",
                                "playsound random.levelup @a[r=30] ~~~ 1.0 1.1 0.5",
                                "tellraw @a[r=30] {\"rawtext\":[{\"translate\":\"chat.billeylevelup.oneshot\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}"
                            ]
                        }
                    }
                ]
            },
            "to_level9": {
                "sequence": [
                    {
                        "add": {
                            "component_groups": [
                                "level9"
                            ]
                        },
                        "set_property": {
                            "billey:level": "9",
                            "billey:xp": "670" //xp_level_9
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "tellraw @p {\"rawtext\":[{\"translate\":\"chat.billeylevelup\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"9\"}]}}]}",
                                "tellraw @p {\"rawtext\":[{\"translate\":\"chat.billeylevelup.info\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
                                "tag @p add got_lvl_msg",
                                "tellraw @a[r=30,tag=!got_lvl_msg] {\"rawtext\":[{\"translate\":\"chat.billeylevelup\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"9\"}]}}]}",
                                "tellraw @a[r=30,tag=!got_lvl_msg] {\"rawtext\":[{\"translate\":\"chat.billeylevelup.info\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
                                "tag @a remove got_lvl_msg",
                                "effect @s instant_health 1 255 true",
                                "playsound random.levelup @a[r=30] ~~~ 1.0 1.1 0.5"
                            ]
                        }
                    }
                ]
            },
            "to_level10": {
                "sequence": [
                    {
                        "add": {
                            "component_groups": [
                                "level10"
                            ]
                        },
                        "set_property": {
                            "billey:level": "10",
                            "billey:xp": "810" //xp_level_10
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "tellraw @p {\"rawtext\":[{\"translate\":\"chat.billeylevelup\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"10\"}]}}]}",
                                "tellraw @p {\"rawtext\":[{\"translate\":\"chat.billeylevelup.info\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
                                "tag @p add got_lvl_msg",
                                "tellraw @a[r=30,tag=!got_lvl_msg] {\"rawtext\":[{\"translate\":\"chat.billeylevelup\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"10\"}]}}]}",
                                "tellraw @a[r=30,tag=!got_lvl_msg] {\"rawtext\":[{\"translate\":\"chat.billeylevelup.info\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
                                "tag @a remove got_lvl_msg",
                                "effect @s instant_health 1 255 true",
                                "playsound random.levelup @a[r=30] ~~~ 1.0 1.1 0.5"
                            ]
                        }
                    }
                ]
            },
            "big_stone": {
                "sequence": [
                    {
                        "add": {
                            "component_groups": [
                                "big_and_slow"
                            ]
                        },
                        "set_property": {
                            "billey:level": "11",
                            "billey:xp": "810" //xp_level_10
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "tellraw @a[r=10] {\"rawtext\":[{\"translate\":\"chat.billeylevelup.big_stone\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"\\n\"}]}}]}",
                                "effect @s instant_health 1 255 true",
                                "playsound random.levelup @a[r=10] ~~~ 1.0 1.1 0.5"
                            ]
                        }
                    }
                ]
            },
            "small_stone": {
                "sequence": [
                    {
                        "add": {
                            "component_groups": [
                                "small_and_quick"
                            ]
                        },
                        "set_property": {
                            "billey:level": "12",
                            "billey:xp": "810" //xp_level_10
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "tellraw @a[r=10] {\"rawtext\":[{\"translate\":\"chat.billeylevelup.small_stone\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"\\n\"}]}}]}",
                                "effect @s instant_health 1 255 true",
                                "playsound random.levelup @a[r=10] ~~~ 1.0 1.1 0.5"
                            ]
                        }
                    }
                ]
            },
            "normal_stone": {
                "sequence": [
                    {
                        "add": {
                            "component_groups": [
                                "level10"
                            ]
                        },
                        "set_property": {
                            "billey:level": "10",
                            "billey:xp": "810" //xp_level_10
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "tellraw @a[r=10] {\"rawtext\":[{\"translate\":\"chat.billeylevelup.normal_stone\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"\\n\"}]}}]}",
                                "effect @s instant_health 1 255 true",
                                "playsound random.levelup @a[r=10] ~~~ 1.0 1.1 0.5"
                            ]
                        }
                    }
                ]
            },
            "send_info": {
                "sequence": [
                    {
                        "filters": {
                            "test": "is_variant",
                            "value": 2,
                            "operator": "not"
                        },
                        "queue_command": {
                            "target": "other",
                            "command": [
                                "tellraw @s {\"rawtext\":[{\"text\":\"\\n\"}]}",
                                "tellraw @s {\"rawtext\":[{\"text\":\"\\n\"}]}",
                                "tellraw @s {\"rawtext\":[{\"translate\":\"chat.billeyinfo.banana_duck\",\"with\":[\"\\n\"]}]}",
                                "tellraw @s {\"rawtext\":[{\"text\":\"\\n\"}]}"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_variant",
                            "value": 2
                        },
                        "queue_command": {
                            "target": "other",
                            "command": [
                                "tellraw @s {\"rawtext\":[{\"text\":\"\\n\"}]}",
                                "tellraw @s {\"rawtext\":[{\"translate\":\"chat.billeyinfo.rideable_duck\"}]}",
                                "tellraw @s {\"rawtext\":[{\"text\":\"\\n\"}]}"
                            ]
                        }
                    },
                    {
                        "queue_command": {
                            "target": "other",
                            "command": [
                                "tellraw @s {\"rawtext\":[{\"translate\":\"chat.billeyinfo.tip3\"}]}",
                                "tellraw @s {\"rawtext\":[{\"text\":\"\\n\"}]}"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "has_tag",
                            "subject": "other",
                            "operator": "not",
                            "value": "billeyadv_feathered_army"
                        },
                        "queue_command": {
                            "target": "other",
                            "command": [
                                "tellraw @s {\"rawtext\":[{\"translate\":\"chat.billeyduckarmyinfo2\"}]}",
                                "tellraw @s {\"rawtext\":[{\"text\":\"§f(§e\"},{\"score\":{\"name\":\"@s\",\"objective\":\"billeyducksarmored\"}},{\"text\":\"§f/§e50§f)\"}]}",
                                "tellraw @s {\"rawtext\":[{\"text\":\"\\n\"}]}"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "has_tag",
                            "subject": "other",
                            "operator": "not",
                            "value": "billeyadv_ornithologist"
                        },
                        "queue_command": {
                            "target": "other",
                            "command": [
                                "tellraw @s {\"rawtext\":[{\"translate\":\"chat.billeyornithologistinfo2\"}]}",
                                "tellraw @s {\"rawtext\":[{\"text\":\"§f(§e\"},{\"score\":{\"name\":\"@s\",\"objective\":\"bdvarsfound\"}},{\"text\":\"§f/§e5§f)\"}]}",
                                "tellraw @s {\"rawtext\":[{\"text\":\"\\n\"}]}"
                            ]
                        }
                    }
                ]
            },
            "get_electrocuted": {
                "add": {
                    "component_groups": [
                        "electrocuted"
                    ]
                }
            },
            "blackstripehat": {
                "queue_command": {
                    "command": [
                        "replaceitem entity @s slot.armor.head 0 minecraft:dried_kelp"
                    ]
                }
            },
            "toduck": {
                "add": {
                    "component_groups": [
                        "tiddies"
                    ]
                }
            },
            "minecraft:entity_transformed": {
                "sequence": [
                    //normal red purple green blue white inverted fromblackduck
                    {
                        "filters": {
                            "test": "is_variant",
                            "subject": "other",
                            "value": 1
                        },
                        "add": {
                            "component_groups": [
                                "red"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_variant",
                            "subject": "other",
                            "value": 2
                        },
                        "add": {
                            "component_groups": [
                                "purple"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_variant",
                            "subject": "other",
                            "value": 3
                        },
                        "add": {
                            "component_groups": [
                                "green"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_variant",
                            "subject": "other",
                            "value": 4
                        },
                        "add": {
                            "component_groups": [
                                "blue"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_variant",
                            "subject": "other",
                            "value": 5
                        },
                        "add": {
                            "component_groups": [
                                "white"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_variant",
                            "subject": "other",
                            "value": 6
                        },
                        "add": {
                            "component_groups": [
                                "inverted"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_variant",
                            "subject": "other",
                            "value": 7
                        },
                        "add": {
                            "component_groups": [
                                "fromblackduck"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "has_component",
                            "subject": "other",
                            "value": "minecraft:is_chested"
                        },
                        "queue_command": {
                            "command": [
                                "loot spawn ~~~ loot \"entities/billeychest\""
                            ]
                        }
                    },
                    {
                        "add": {
                            "component_groups": [
                                "tamed",
                                "quacking"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_mark_variant",
                            "subject": "other",
                            "value": 1
                        },
                        "add": {
                            "component_groups": [
                                "leather_armor"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_mark_variant",
                            "subject": "other",
                            "value": 2
                        },
                        "add": {
                            "component_groups": [
                                "golden_armor"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_mark_variant",
                            "subject": "other",
                            "value": 3
                        },
                        "add": {
                            "component_groups": [
                                "chain_armor"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_mark_variant",
                            "subject": "other",
                            "value": 4
                        },
                        "add": {
                            "component_groups": [
                                "iron_armor"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_mark_variant",
                            "subject": "other",
                            "value": 5
                        },
                        "add": {
                            "component_groups": [
                                "diamond_armor"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_mark_variant",
                            "subject": "other",
                            "value": 6
                        },
                        "add": {
                            "component_groups": [
                                "netherite_armor"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_mark_variant",
                            "subject": "other",
                            "value": 7
                        },
                        "add": {
                            "component_groups": [
                                "endrod_armor"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_mark_variant",
                            "subject": "other",
                            "value": 0
                        },
                        "add": {
                            "component_groups": [
                                "no_armor"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "has_component",
                            "subject": "other",
                            "value": "minecraft:is_baby",
                            "operator": "not"
                        },
                        "add": {
                            "component_groups": [
                                "minecraft:banana_duck_adult"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "has_component",
                            "subject": "other",
                            "value": "minecraft:is_baby"
                        },
                        "add": {
                            "component_groups": [
                                "minecraft:banana_duck_baby",
                                "duckage"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "has_component",
                            "subject": "other",
                            "value": "minecraft:is_illager_captain"
                        },
                        "add": {
                            "component_groups": [
                                "kromatik"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "has_component",
                            "subject": "other",
                            "value": "minecraft:is_saddled"
                        },
                        "add": {
                            "component_groups": [
                                "hat"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_color",
                            "subject": "other",
                            "value": 0
                        },
                        "add": {
                            "component_groups": [
                                "zero"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_color",
                            "subject": "other",
                            "value": 1
                        },
                        "add": {
                            "component_groups": [
                                "one"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_color",
                            "subject": "other",
                            "value": 2
                        },
                        "add": {
                            "component_groups": [
                                "two"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_color",
                            "subject": "other",
                            "value": 3
                        },
                        "add": {
                            "component_groups": [
                                "three"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_color",
                            "subject": "other",
                            "value": 4
                        },
                        "add": {
                            "component_groups": [
                                "four"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_color",
                            "subject": "other",
                            "value": 5
                        },
                        "add": {
                            "component_groups": [
                                "five"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_color",
                            "subject": "other",
                            "value": 6
                        },
                        "add": {
                            "component_groups": [
                                "six"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_color",
                            "subject": "other",
                            "value": 7
                        },
                        "add": {
                            "component_groups": [
                                "seven"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_color",
                            "subject": "other",
                            "value": 8
                        },
                        "add": {
                            "component_groups": [
                                "eight"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_color",
                            "subject": "other",
                            "value": 9
                        },
                        "add": {
                            "component_groups": [
                                "nine"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_color",
                            "subject": "other",
                            "value": 10
                        },
                        "add": {
                            "component_groups": [
                                "ten"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_color",
                            "subject": "other",
                            "value": 12
                        },
                        "add": {
                            "component_groups": [
                                "twelve"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_color",
                            "subject": "other",
                            "value": 11
                        },
                        "add": {
                            "component_groups": [
                                "eleven"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_color",
                            "subject": "other",
                            "value": 13
                        },
                        "add": {
                            "component_groups": [
                                "thirteen"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_color",
                            "subject": "other",
                            "value": 14
                        },
                        "add": {
                            "component_groups": [
                                "fourteen"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_color",
                            "subject": "other",
                            "value": 15
                        },
                        "add": {
                            "component_groups": [
                                "fifteen"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_color",
                            "subject": "other",
                            "value": 16
                        },
                        "add": {
                            "component_groups": [
                                "sixteen"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_color",
                            "subject": "other",
                            "value": 17
                        },
                        "add": {
                            "component_groups": [
                                "seventeen"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_color",
                            "subject": "other",
                            "value": 18
                        },
                        "add": {
                            "component_groups": [
                                "eighteen"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_color",
                            "subject": "other",
                            "value": 19
                        },
                        "add": {
                            "component_groups": [
                                "nineteen"
                            ]
                        }
                    }
                ]
            },
            "eventwander": {
                "sequence": [
                    {
                        "remove": {
                            "component_groups": [
                                "following"
                            ]
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "tellraw @a[r=5] {\"rawtext\": [{\"translate\": \"billmobs.wander\"},{\"selector\": \"@s\"}, {\"translate\": \"billmobs.wander2\"}] }"
                            ]
                        }
                    }
                ]
            },
            "eventfollow": {
                "sequence": [
                    {
                        "add": {
                            "component_groups": [
                                "following"
                            ]
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "tellraw @a[r=5] {\"rawtext\": [{\"translate\": \"billmobs.follow\"},{\"selector\": \"@s\"}, {\"translate\": \"billmobs.follow2\"}] }"
                            ]
                        }
                    }
                ]
            },
            "bepetted": {
                "sequence": [
                    {
                        "randomize": [
                            {
                                "weight": 13
                            },
                            {
                                "weight": 1
                            },
                            {
                                "weight": 1,
                                "queue_command": {
                                    "command": [
                                        "playanimation @s animation.billcat.petted dghfgf 0 q.is_sleeping"
                                    ]
                                }
                            }
                        ]
                    },
                    {
                        "queue_command": {
                            "target": "other",
                            "command": [
                                "playanimation @s animation.billeyplayer.pet"
                            ]
                        }
                    },
                    {
                        "randomize": [
                            {
                                "weight": 1
                            },
                            {
                                "weight": 99
                            },
                            {
                                "weight": 3,
                                "queue_command": {
                                    "command": [
                                        "effect @s resistance 10 1 true"
                                    ]
                                }
                            },
                            {
                                "weight": 3,
                                "queue_command": {
                                    "command": [
                                        "effect @s fire_resistance 10 1 true"
                                    ]
                                }
                            },
                            {
                                "weight": 3,
                                "queue_command": {
                                    "command": [
                                        "effect @s strength 10 1 true"
                                    ]
                                }
                            },
                            {
                                "weight": 3,
                                "queue_command": {
                                    "command": [
                                        "effect @s water_breathing 30 0 true"
                                    ]
                                }
                            },
                            {
                                "weight": 3,
                                "queue_command": {
                                    "command": [
                                        "effect @s speed 10 1 true"
                                    ]
                                }
                            },
                            {
                                "weight": 1,
                                "queue_command": {
                                    "command": [
                                        "effect @s levitation 1 1 true",
                                        "effect @s regeneration 30 1 true"
                                    ]
                                }
                            },
                            {
                                "weight": 1,
                                "queue_command": {
                                    "command": [
                                        "effect @s speed 1 0"
                                    ]
                                }
                            }
                        ]
                    }
                ]
            },
            "vomit": {
                "sequence": [
                    {
                        "queue_command": {
                            "command": [
                                "scoreboard objectives add billbanana dummy billbanana"
                            ]
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "effect @s[m=!c,l=0] wither 1 4 true",
                                "scoreboard players add @s[m=!c] billbanana 1",
                                "xp -1L @s[m=!c,scores={billbanana=10}]",
                                "playsound random.orb @s[m=!c,scores={billbanana=10}] ~~~ 1.00 0.8 0.5",
                                "scoreboard players set @s[m=!c,scores={billbanana=10}] billbanana 0"
                            ],
                            "target": "other"
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "playanimation @s animation.billbananaduck.pugehenis"
                            ]
                        }
                    },
                    {
                        "sequence": [
                            {
                                "randomize": [
                                    {
                                        "weight": 4,
                                        "queue_command": {
                                            "command": [
                                                "effect @s speed 10"
                                            ]
                                        }
                                    },
                                    {
                                        "weight": 4,
                                        "queue_command": {
                                            "command": [
                                                "effect @s absorption 10"
                                            ]
                                        }
                                    },
                                    {
                                        "weight": 4,
                                        "queue_command": {
                                            "command": [
                                                "effect @s resistance 10"
                                            ]
                                        }
                                    },
                                    {
                                        "weight": 4,
                                        "queue_command": {
                                            "command": [
                                                "effect @s strength 10"
                                            ]
                                        }
                                    },
                                    {
                                        "weight": 4,
                                        "queue_command": {
                                            "command": [
                                                "effect @s water_breathing 10"
                                            ]
                                        }
                                    },
                                    {
                                        "weight": 4,
                                        "queue_command": {
                                            "command": [
                                                "effect @s fire_resistance 10"
                                            ]
                                        }
                                    },
                                    {
                                        "weight": 1,
                                        "sequence": [
                                            {
                                                "queue_command": {
                                                    "command": [
                                                        "effect @s levitation 1 0 true"
                                                    ]
                                                }
                                            },
                                            {
                                                "queue_command": {
                                                    "target": "other",
                                                    "command": [
                                                        "effect @s levitation 1 0 true"
                                                    ]
                                                }
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "givefire": {
                "add": {
                    "component_groups": [
                        "firemovement"
                    ]
                },
                "remove": {
                    "component_groups": [
                        "nofiremovement"
                    ]
                }
            },
            "nofire": {
                "remove": {
                    "component_groups": [
                        "firemovement"
                    ]
                },
                "add": {
                    "component_groups": [
                        "nofiremovement"
                    ]
                }
            },
            "spawnvariant": {
                "randomize": [
                    {
                        "weight": 3,
                        "trigger": "minecraft:entity_spawned"
                    },
                    {
                        "weight": 3,
                        "trigger": "minecraft:entity_spawned",
                        "add": {
                            "component_groups": [
                                "red"
                            ]
                        }
                    },
                    {
                        "weight": 3,
                        "trigger": "minecraft:entity_spawned",
                        "add": {
                            "component_groups": [
                                "fromblackduck"
                            ]
                        }
                    },
                    {
                        "weight": 3,
                        "trigger": "minecraft:entity_spawned",
                        "add": {
                            "component_groups": [
                                "blue"
                            ]
                        }
                    },
                    {
                        "weight": 3,
                        "trigger": "minecraft:entity_spawned",
                        "add": {
                            "component_groups": [
                                "green"
                            ]
                        }
                    },
                    {
                        "weight": 3,
                        "trigger": "minecraft:entity_spawned",
                        "add": {
                            "component_groups": [
                                "purple"
                            ]
                        }
                    },
                    {
                        "weight": 3,
                        "trigger": "minecraft:entity_spawned",
                        "add": {
                            "component_groups": [
                                "white"
                            ]
                        }
                    },
                    {
                        "weight": 3,
                        "trigger": "minecraft:entity_spawned",
                        "add": {
                            "component_groups": [
                                "inverted"
                            ]
                        }
                    }
                ]
            },
            "beno2": {
                //there was probably a better way to do this
                "sequence": [
                    {
                        "queue_command": {
                            "target": "other",
                            "command": "scriptevent billey:set_duck_armor"
                            //only to see whether or not player was in creative
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "scriptevent billey:duck_drop_armor",
                                "event entity @s beno"
                            ]
                        }
                    }
                ]
            },
            "beno": {
                "add": {
                    "component_groups": [
                        "no_armor"
                    ]
                },
                "remove": {
                    "component_groups": [
                        "leather_armor",
                        "golden_armor",
                        "chain_armor",
                        "iron_armor",
                        "diamond_armor",
                        "netherite_armor",
                        "endrod_armor"
                    ]
                }
            },
            "beleather": {
                "sequence": [
                    {
                        "add": {
                            "component_groups": [
                                "leather_armor"
                            ]
                        },
                        "remove": {
                            "component_groups": [
                                "endrod_armor",
                                "golden_armor"
                            ]
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "execute @p[r=5,tag=!billeyadv_feathered_warrior] ~~~ scriptevent billey:advancement feathered_warrior",
                                "tag @p[r=5] add justarmoredaduck"
                            ]
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "execute @s[tag=!hasbeenarmored] ~~~ scoreboard players add @p[tag=justarmoredaduck] billeyducksarmored 1",
                                "execute @s[tag=!hasbeenarmored] ~~~ titleraw @p[tag=justarmoredaduck,scores={billeyducksarmored=..50}] actionbar {\"rawtext\":[{\"text\":\"§7\"},{\"score\":{\"name\":\"@p[tag=justarmoredaduck]\",\"objective\":\"billeyducksarmored\"}},{\"text\":\"/50\"}]}",
                                "tag @s[tag=!hasbeenarmored] add hasbeenarmored"
                            ]
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "tag @p[r=5] remove justarmoredaduck",
                                "execute @p[r=5,tag=!billeyadv_feathered_army,scores={billeyducksarmored=50..}] ~~~ scriptevent billey:advancement feathered_army"
                            ]
                        }
                    }
                ]
            },
            "begolden": {
                "sequence": [
                    {
                        "add": {
                            "component_groups": [
                                "golden_armor"
                            ]
                        },
                        "remove": {
                            "component_groups": [
                                "golden_armor"
                            ]
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "execute @p[r=5,tag=!billeyadv_feathered_warrior] ~~~ scriptevent billey:advancement feathered_warrior",
                                "tag @p[r=5] add justarmoredaduck"
                            ]
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "execute @s[tag=!hasbeenarmored] ~~~ scoreboard players add @p[tag=justarmoredaduck] billeyducksarmored 1",
                                "execute @s[tag=!hasbeenarmored] ~~~ titleraw @p[tag=justarmoredaduck,scores={billeyducksarmored=..50}] actionbar {\"rawtext\":[{\"text\":\"§7\"},{\"score\":{\"name\":\"@p[tag=justarmoredaduck]\",\"objective\":\"billeyducksarmored\"}},{\"text\":\"/50\"}]}",
                                "tag @s[tag=!hasbeenarmored] add hasbeenarmored"
                            ]
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "tag @p[r=5] remove justarmoredaduck",
                                "execute @p[r=5,tag=!billeyadv_feathered_army,scores={billeyducksarmored=50..}] ~~~ scriptevent billey:advancement feathered_army"
                            ]
                        }
                    }
                ]
            },
            "bechain": {
                "sequence": [
                    {
                        "add": {
                            "component_groups": [
                                "chain_armor"
                            ]
                        },
                        "remove": {
                            "component_groups": [
                                "endrod_armor",
                                "golden_armor"
                            ]
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "execute @p[r=5,tag=!billeyadv_feathered_warrior] ~~~ scriptevent billey:advancement feathered_warrior",
                                "tag @p[r=5] add justarmoredaduck"
                            ]
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "execute @s[tag=!hasbeenarmored] ~~~ scoreboard players add @p[tag=justarmoredaduck] billeyducksarmored 1",
                                "execute @s[tag=!hasbeenarmored] ~~~ titleraw @p[tag=justarmoredaduck,scores={billeyducksarmored=..50}] actionbar {\"rawtext\":[{\"text\":\"§7\"},{\"score\":{\"name\":\"@p[tag=justarmoredaduck]\",\"objective\":\"billeyducksarmored\"}},{\"text\":\"/50\"}]}",
                                "tag @s[tag=!hasbeenarmored] add hasbeenarmored"
                            ]
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "tag @p[r=5] remove justarmoredaduck",
                                "execute @p[r=5,tag=!billeyadv_feathered_army,scores={billeyducksarmored=50..}] ~~~ scriptevent billey:advancement feathered_army"
                            ]
                        }
                    }
                ]
            },
            "beiron": {
                "sequence": [
                    {
                        "add": {
                            "component_groups": [
                                "iron_armor"
                            ]
                        },
                        "remove": {
                            "component_groups": [
                                "endrod_armor",
                                "golden_armor"
                            ]
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "execute @p[r=5,tag=!billeyadv_feathered_warrior] ~~~ scriptevent billey:advancement feathered_warrior",
                                "tag @p[r=5] add justarmoredaduck"
                            ]
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "execute @s[tag=!hasbeenarmored] ~~~ scoreboard players add @p[tag=justarmoredaduck] billeyducksarmored 1",
                                "execute @s[tag=!hasbeenarmored] ~~~ titleraw @p[tag=justarmoredaduck,scores={billeyducksarmored=..50}] actionbar {\"rawtext\":[{\"text\":\"§7\"},{\"score\":{\"name\":\"@p[tag=justarmoredaduck]\",\"objective\":\"billeyducksarmored\"}},{\"text\":\"/50\"}]}",
                                "tag @s[tag=!hasbeenarmored] add hasbeenarmored"
                            ]
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "tag @p[r=5] remove justarmoredaduck",
                                "execute @p[r=5,tag=!billeyadv_feathered_army,scores={billeyducksarmored=50..}] ~~~ scriptevent billey:advancement feathered_army"
                            ]
                        }
                    }
                ]
            },
            "bediamond": {
                "sequence": [
                    {
                        "add": {
                            "component_groups": [
                                "diamond_armor"
                            ]
                        },
                        "remove": {
                            "component_groups": [
                                "endrod_armor",
                                "golden_armor"
                            ]
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "execute @p[r=5,tag=!billeyadv_feathered_warrior] ~~~ scriptevent billey:advancement feathered_warrior",
                                "tag @p[r=5] add justarmoredaduck"
                            ]
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "execute @s[tag=!hasbeenarmored] ~~~ scoreboard players add @p[tag=justarmoredaduck] billeyducksarmored 1",
                                "execute @s[tag=!hasbeenarmored] ~~~ titleraw @p[tag=justarmoredaduck,scores={billeyducksarmored=..50}] actionbar {\"rawtext\":[{\"text\":\"§7\"},{\"score\":{\"name\":\"@p[tag=justarmoredaduck]\",\"objective\":\"billeyducksarmored\"}},{\"text\":\"/50\"}]}",
                                "tag @s[tag=!hasbeenarmored] add hasbeenarmored"
                            ]
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "tag @p[r=5] remove justarmoredaduck",
                                "execute @p[r=5,tag=!billeyadv_feathered_army,scores={billeyducksarmored=50..}] ~~~ scriptevent billey:advancement feathered_army"
                            ]
                        }
                    }
                ]
            },
            "benetherite": {
                "sequence": [
                    {
                        "add": {
                            "component_groups": [
                                "netherite_armor"
                            ]
                        },
                        "remove": {
                            "component_groups": [
                                "endrod_armor",
                                "golden_armor"
                            ]
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "execute @p[r=5,tag=!billeyadv_feathered_warrior] ~~~ scriptevent billey:advancement feathered_warrior",
                                "tag @p[r=5] add justarmoredaduck"
                            ]
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "execute @s[tag=!hasbeenarmored] ~~~ scoreboard players add @p[tag=justarmoredaduck] billeyducksarmored 1",
                                "execute @s[tag=!hasbeenarmored] ~~~ titleraw @p[tag=justarmoredaduck,scores={billeyducksarmored=..50}] actionbar {\"rawtext\":[{\"text\":\"§7\"},{\"score\":{\"name\":\"@p[tag=justarmoredaduck]\",\"objective\":\"billeyducksarmored\"}},{\"text\":\"/50\"}]}",
                                "tag @s[tag=!hasbeenarmored] add hasbeenarmored"
                            ]
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "tag @p[r=5] remove justarmoredaduck",
                                "execute @p[r=5,tag=!billeyadv_feathered_army,scores={billeyducksarmored=50..}] ~~~ scriptevent billey:advancement feathered_army"
                            ]
                        }
                    }
                ]
            },
            "beendrod2": {
                "sequence": [
                    {
                        "queue_command": {
                            "target": "other",
                            "command": "scriptevent billey:set_duck_armor"
                            //only to see whether or not player was in creative
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "scriptevent billey:duck_drop_armor",
                                "event entity @s beendrod"
                            ]
                        }
                    }
                ]
            },
            "beendrod": {
                "sequence": [
                    {
                        "add": {
                            "component_groups": [
                                "endrod_armor"
                            ]
                        },
                        "remove": {
                            "component_groups": [
                                "golden_armor"
                            ]
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "execute @p[r=5,tag=!billeyadv_feathered_warrior] ~~~ scriptevent billey:advancement feathered_warrior",
                                "tag @p[r=5] add justarmoredaduck"
                            ]
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "execute @s[tag=!hasbeenarmored] ~~~ scoreboard players add @p[tag=justarmoredaduck] billeyducksarmored 1",
                                "execute @s[tag=!hasbeenarmored] ~~~ titleraw @p[tag=justarmoredaduck,scores={billeyducksarmored=..50}] actionbar {\"rawtext\":[{\"text\":\"§7\"},{\"score\":{\"name\":\"@p[tag=justarmoredaduck]\",\"objective\":\"billeyducksarmored\"}},{\"text\":\"/50\"}]}",
                                "tag @s[tag=!hasbeenarmored] add hasbeenarmored"
                            ]
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "tag @p[r=5] remove justarmoredaduck",
                                "execute @p[r=5,tag=!billeyadv_feathered_army,scores={billeyducksarmored=50..}] ~~~ scriptevent billey:advancement feathered_army"
                            ]
                        }
                    }
                ]
            },
            "wearhat": {
                "add": {
                    "component_groups": [
                        "hat"
                    ]
                }
            },
            "nohat": {
                "remove": {
                    "component_groups": [
                        "hat"
                    ]
                },
                "queue_command": {
                    "command": [
                        "replaceitem entity @s slot.armor.head 0 feather"
                    ]
                }
            },
            "angery": {
                "sequence": [
                    {
                        "add": {
                            "component_groups": [
                                "angry"
                            ]
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "event entity @e[type=billey:velvet_worm,r=7] dropcentiegg"
                            ]
                        }
                    }
                ]
            },
            "calmery": {
                "remove": {
                    "component_groups": [
                        "angry"
                    ]
                }
            },
            "kroma": {
                "add": {
                    "component_groups": [
                        "kromatik"
                    ]
                }
            },
            "nokroma": {
                "remove": {
                    "component_groups": [
                        "kromatik"
                    ]
                }
            },
            "minecraft:entity_spawned": {
                "sequence": [
                    {
                        "randomize": [
                            {
                                "weight": 95,
                                "remove": {},
                                "add": {
                                    "component_groups": [
                                        "minecraft:banana_duck_adult"
                                    ]
                                }
                            },
                            {
                                "weight": 5,
                                "remove": {},
                                "add": {
                                    "component_groups": [
                                        "minecraft:banana_duck_baby"
                                    ]
                                }
                            }
                        ]
                    },
                    {
                        "add": {
                            "component_groups": [
                                "quacking",
                                "wild"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "has_biome_tag",
                            "value": "nether"
                        },
                        "add": {
                            "component_groups": [
                                "red"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "has_biome_tag",
                            "value": "the_end"
                        },
                        "add": {
                            "component_groups": [
                                "blue"
                            ]
                        }
                    },
                    {
                        "randomize": [
                            {
                                "weight": 292
                            },
                            {
                                "weight": 1,
                                "remove": {},
                                "add": {
                                    "component_groups": [
                                        "leather_armor"
                                    ]
                                }
                            },
                            {
                                "weight": 1,
                                "remove": {},
                                "add": {
                                    "component_groups": [
                                        "golden_armor"
                                    ]
                                }
                            },
                            {
                                "weight": 1,
                                "remove": {},
                                "add": {
                                    "component_groups": [
                                        "chain_armor"
                                    ]
                                }
                            },
                            {
                                "weight": 1,
                                "remove": {},
                                "add": {
                                    "component_groups": [
                                        "iron_armor"
                                    ]
                                }
                            },
                            {
                                "weight": 1,
                                "remove": {},
                                "add": {
                                    "component_groups": [
                                        "diamond_armor"
                                    ]
                                }
                            },
                            {
                                "filters": {
                                    "test": "has_biome_tag",
                                    "value": "the_end"
                                },
                                "weight": 200,
                                "remove": {},
                                "add": {
                                    "component_groups": [
                                        "diamond_armor"
                                    ]
                                }
                            },
                            {
                                "weight": 1,
                                "remove": {},
                                "add": {
                                    "component_groups": [
                                        "netherite_armor"
                                    ]
                                }
                            },
                            {
                                "weight": 1,
                                "remove": {},
                                "add": {
                                    "component_groups": [
                                        "endrod_armor"
                                    ]
                                }
                            },
                            {
                                "weight": 1,
                                "remove": {},
                                "add": {
                                    "component_groups": [
                                        "kromatik"
                                    ]
                                }
                            }
                        ]
                    }
                ]
            },
            "do_timer": {
                "randomize": [
                    {
                        "weight": 8,
                        "remove": {},
                        "add": {
                            "component_groups": [
                                "quacking"
                            ]
                        }
                    },
                    {
                        "weight": 3,
                        "remove": {},
                        "add": {
                            "component_groups": [
                                "flying"
                            ]
                        }
                    }
                ]
            },
            "stop_quack": {
                "remove": {
                    "component_groups": [
                        "quacking"
                    ]
                },
                "add": {
                    "component_groups": [
                        "timer"
                    ]
                }
            },
            "stop_flying": {
                "remove": {
                    "component_groups": [
                        "flying"
                    ]
                },
                "add": {
                    "component_groups": [
                        "timer"
                    ]
                }
            },
            "minecraft:entity_born": {
                "sequence": [
                    {
                        "remove": {},
                        "add": {
                            "component_groups": [
                                "minecraft:banana_duck_baby",
                                "duckage",
                                "no_armor",
                                "flying",
                                "tamed"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "has_component",
                            "value": "minecraft:is_illager_captain",
                            "subject": "parent"
                        },
                        "add": {
                            "component_groups": [
                                "kromatik"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "any_of": [
                                {
                                    "test": "has_biome_tag",
                                    "value": "nether"
                                },
                                {
                                    "test": "is_variant",
                                    "value": 1
                                }
                            ]
                        },
                        "add": {
                            "component_groups": [
                                "red"
                            ]
                        },
                        "queue_command": {
                            "command": [
                                "execute @p[r=5,tag=!billeyadv_bduckbreeder] ~~~ scriptevent billey:advancement bduckbreeder",
                                "scoreboard players add @p[r=5,tag=!onebduck] bdvarsfound 1",
                                "titleraw @p[r=5,tag=!onebduck,scores={bdvarsfound=..5}] actionbar {\"rawtext\":[{\"text\":\"§7\"},{\"score\":{\"name\":\"@p[r=5,tag=!onebduck]\",\"objective\":\"bdvarsfound\"}},{\"text\":\"/5\"}]}",
                                "tag @p[r=5,tag=!onebduck] add onebduck"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "any_of": [
                                {
                                    "test": "has_biome_tag",
                                    "value": "the_end"
                                },
                                {
                                    "test": "is_variant",
                                    "value": 4
                                }
                            ]
                        },
                        "add": {
                            "component_groups": [
                                "blue"
                            ]
                        },
                        "queue_command": {
                            "command": [
                                "execute @p[r=5,tag=!billeybduckbreeder] ~~~ function billeybduckbreeder",
                                "tag @p[r=5,tag=!billeybduckbreeder] add billeybduckbreeder",
                                "scoreboard players add @p[r=5,tag=!fourbduck] bdvarsfound 1",
                                "titleraw @p[r=5,tag=!fourbduck,scores={bdvarsfound=..5}] actionbar {\"rawtext\":[{\"text\":\"§7\"},{\"score\":{\"name\":\"@p[r=5,tag=!fourbduck]\",\"objective\":\"bdvarsfound\"}},{\"text\":\"/5\"}]}",
                                "tag @p[r=5,tag=!fourbduck] add fourbduck"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_variant",
                            "value": 2
                        },
                        "queue_command": {
                            "command": [
                                "execute @p[r=5,tag=!billeybduckbreeder] ~~~ function billeybduckbreeder",
                                "tag @p[r=5,tag=!billeybduckbreeder] add billeybduckbreeder",
                                "scoreboard players add @p[r=5,tag=!twobduck] bdvarsfound 1",
                                "titleraw @p[r=5,tag=!twobduck,scores={bdvarsfound=..5}] actionbar {\"rawtext\":[{\"text\":\"§7\"},{\"score\":{\"name\":\"@p[r=5,tag=!twobduck]\",\"objective\":\"bdvarsfound\"}},{\"text\":\"/5\"}]}",
                                "tag @p[r=5,tag=!twobduck] add twobduck"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_variant",
                            "value": 3
                        },
                        "queue_command": {
                            "command": [
                                "execute @p[r=5,tag=!billeybduckbreeder] ~~~ function billeybduckbreeder",
                                "tag @p[r=5,tag=!billeybduckbreeder] add billeybduckbreeder",
                                "scoreboard players add @p[r=5,tag=!threebduck] bdvarsfound 1",
                                "titleraw @p[r=5,tag=!threebduck,scores={bdvarsfound=..5}] actionbar {\"rawtext\":[{\"text\":\"§7\"},{\"score\":{\"name\":\"@p[r=5,tag=!threebduck]\",\"objective\":\"bdvarsfound\"}},{\"text\":\"/5\"}]}",
                                "tag @p[r=5,tag=!threebduck] add threebduck"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_variant",
                            "value": 5
                        },
                        "queue_command": {
                            "command": [
                                "execute @p[r=5,tag=!billeybduckbreeder] ~~~ function billeybduckbreeder",
                                "tag @p[r=5,tag=!billeybduckbreeder] add billeybduckbreeder",
                                "scoreboard players add @p[r=5,tag=!fivebduck] bdvarsfound 1",
                                "titleraw @p[r=5,tag=!fivebduck,scores={bdvarsfound=..5}] actionbar {\"rawtext\":[{\"text\":\"§7\"},{\"score\":{\"name\":\"@p[r=5,tag=!fivebduck]\",\"objective\":\"bdvarsfound\"}},{\"text\":\"/5\"}]}",
                                "tag @p[r=5,tag=!fivebduck] add fivebduck"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_variant",
                            "value": 6
                        },
                        "queue_command": {
                            "command": [
                                "execute @p[r=5,tag=!billeybduckbreeder] ~~~ function billeybduckbreeder",
                                "tag @p[r=5,tag=!billeybduckbreeder] add billeybduckbreeder",
                                "scoreboard players add @p[r=5,tag=!fivebduck] bdvarsfound 1",
                                "titleraw @p[r=5,tag=!fivebduck,scores={bdvarsfound=..5}] actionbar {\"rawtext\":[{\"text\":\"§7\"},{\"score\":{\"name\":\"@p[r=5,tag=!fivebduck]\",\"objective\":\"bdvarsfound\"}},{\"text\":\"/5\"}]}",
                                "tag @p[r=5,tag=!fivebduck] add fivebduck"
                            ]
                        }
                    }
                ]
            },
            "minecraft:entity_born_green": {
                "sequence": [
                    {
                        "remove": {},
                        "add": {
                            "component_groups": [
                                "minecraft:banana_duck_baby",
                                "duckage",
                                "no_armor",
                                "flying",
                                "tamed",
                                "green"
                            ]
                        },
                        "queue_command": {
                            "command": [
                                "execute @p[r=5,tag=!billeybduckbreeder] ~~~ function billeybduckbreeder",
                                "tag @p[r=5,tag=!billeybduckbreeder] add billeybduckbreeder",
                                "scoreboard players add @p[r=5,tag=!threebduck] bdvarsfound 1",
                                "titleraw @p[r=5,tag=!threebduck,scores={bdvarsfound=..5}] actionbar {\"rawtext\":[{\"text\":\"§7\"},{\"score\":{\"name\":\"@p[r=5,tag=!threebduck]\",\"objective\":\"bdvarsfound\"}},{\"text\":\"/5\"}]}",
                                "tag @p[r=5,tag=!threebduck] add threebduck"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "has_component",
                            "value": "minecraft:is_illager_captain",
                            "subject": "parent"
                        },
                        "add": {
                            "component_groups": [
                                "kromatik"
                            ]
                        }
                    },
                    {
                        "add": {
                            "component_groups": [
                                "green"
                            ]
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "effect @s regeneration 1 255 true"
                            ]
                        }
                    }
                ]
            },
            "minecraft:entity_born_purple": {
                "sequence": [
                    {
                        "remove": {},
                        "add": {
                            "component_groups": [
                                "minecraft:banana_duck_baby",
                                "duckage",
                                "no_armor",
                                "flying",
                                "tamed",
                                "purple"
                            ]
                        },
                        "queue_command": {
                            "command": [
                                "execute @p[r=5,tag=!billeybduckbreeder] ~~~ function billeybduckbreeder",
                                "tag @p[r=5,tag=!billeybduckbreeder] add billeybduckbreeder",
                                "scoreboard players add @p[r=5,tag=!twobduck] bdvarsfound 1",
                                "titleraw @p[r=5,tag=!twobduck,scores={bdvarsfound=..5}] actionbar {\"rawtext\":[{\"text\":\"§7\"},{\"score\":{\"name\":\"@p[r=5,tag=!twobduck]\",\"objective\":\"bdvarsfound\"}},{\"text\":\"/5\"}]}",
                                "tag @p[r=5,tag=!twobduck] add twobduck"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "has_component",
                            "value": "minecraft:is_illager_captain",
                            "subject": "parent"
                        },
                        "add": {
                            "component_groups": [
                                "kromatik"
                            ]
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "execute @a[r=10,tag=!billeyinforideable_bduck] ~~~ tellraw @s {\"rawtext\":[{\"translate\":\"chat.billeyinfo.rideable_duck\"}]}",
                                "tag @a[r=10,tag=!billeyinforideable_bduck] add billeyinforideable_bduck"
                            ]
                        }
                    },
                    {
                        "add": {
                            "component_groups": [
                                "purple"
                            ]
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "effect @s regeneration 1 255 true"
                            ]
                        }
                    }
                ]
            },
            "minecraft:entity_born_white": {
                "sequence": [
                    {
                        "remove": {},
                        "add": {
                            "component_groups": [
                                "minecraft:banana_duck_baby",
                                "duckage",
                                "no_armor",
                                "flying",
                                "tamed",
                                "white"
                            ]
                        },
                        "queue_command": {
                            "command": [
                                "execute @p[r=5,tag=!billeybduckbreeder] ~~~ function billeybduckbreeder",
                                "tag @p[r=5,tag=!billeybduckbreeder] add billeybduckbreeder",
                                "scoreboard players add @p[r=5,tag=!fivebduck] bdvarsfound 1",
                                "titleraw @p[r=5,tag=!fivebduck,scores={bdvarsfound=..5}] actionbar {\"rawtext\":[{\"text\":\"§7\"},{\"score\":{\"name\":\"@p[r=5,tag=!fivebduck]\",\"objective\":\"bdvarsfound\"}},{\"text\":\"/5\"}]}",
                                "tag @p[r=5,tag=!fivebduck] add fivebduck"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "has_component",
                            "value": "minecraft:is_illager_captain",
                            "subject": "parent"
                        },
                        "add": {
                            "component_groups": [
                                "kromatik"
                            ]
                        }
                    },
                    {
                        "add": {
                            "component_groups": [
                                "white"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "has_biome_tag",
                            "value": "the_end"
                        },
                        "add": {
                            "component_groups": [
                                "inverted"
                            ]
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "effect @s regeneration 1 255 true"
                            ]
                        }
                    }
                ]
            },
            "untame": {
                "sequence": [
                    {
                        "queue_command": {
                            "command": [
                                "playsound random.orb @a ~~~ 1.00 0.8 0.5",
                                "tellraw @a[r=5] {\"rawtext\": [{\"translate\": \"billmobs.untame\"},{\"selector\": \"@s\"}, {\"translate\": \"billmobs.untame2\"}] }"
                            ]
                        }
                    },
                    {
                        "remove": {
                            "component_groups": [
                                "tamed_component"
                            ]
                        }
                    },
                    {
                        "add": {
                            "component_groups": [
                                "untamed"
                            ]
                        }
                    }
                ]
            },
            "ontame": {
                "sequence": [
                    {
                        "queue_command": {
                            "command": [
                                "tellraw @a[r=6,tag=!billeyinfolevelbduck,tag=billeyinfotip3v_2] {\"rawtext\":[{\"translate\":\"chat.billeyshortinfo.leveling\"}]}",
                                "tag @a[r=6,tag=!billeyinfolevelbduck,tag=billeyinfotip3v_2] add billeyinfolevelbduck"
                            ]
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "tellraw @s {\"rawtext\":[{\"text\":\"\\n\"}]}",
                                "tellraw @a[r=6,tag=!billeyinfotip3v_2] {\"rawtext\":[{\"translate\":\"chat.billeyinfo.tip3\"}]}",
                                "tellraw @s {\"rawtext\":[{\"text\":\"\\n\"}]}",
                                "tag @a[r=6,tag=!billeyinfotip3v_2] add billeyinfotip3v_2"
                            ]
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "scoreboard objectives add billeyducksarmored dummy \"Ducks Armored\""
                            ]
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "scoreboard objectives add bdvarsfound dummy \"Banana Duck Variants Found\""
                            ]
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "tellraw @s {\"rawtext\":[{\"text\":\"\\n\"}]}",
                                "tellraw @a[r=6,tag=!billeyinfotip3v_2] {\"rawtext\":[{\"translate\":\"chat.billeyinfo.tip3\"}]}",
                                "tellraw @s {\"rawtext\":[{\"text\":\"\\n\"}]}",
                                "tag @a[r=6,tag=!billeyinfotip3v_2] add billeyinfotip3v_2"
                            ]
                        }
                    },
                    {
                        "remove": {
                            "component_groups": [
                                "wild",
                                "timer",
                                "flying"
                            ]
                        }
                    },
                    {
                        "add": {
                            "component_groups": [
                                "tamed",
                                "quacking"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "has_component",
                            "value": "minecraft:is_baby"
                        },
                        "add": {
                            "component_groups": [
                                "duckage"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_variant",
                            "value": 0
                        },
                        "queue_command": {
                            "command": [
                                "tag @p[r=5,tag=!zerobduck] add zerobduck"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_variant",
                            "value": 1
                        },
                        "add": {
                            "component_groups": [
                                "red"
                            ]
                        },
                        "queue_command": {
                            "command": [
                                "execute @p[r=5,tag=!billeybduckbreeder] ~~~ function billeybduckbreeder",
                                "tag @p[r=5,tag=!billeybduckbreeder] add billeybduckbreeder",
                                "scoreboard players add @p[r=5,tag=!onebduck] bdvarsfound 1",
                                "titleraw @p[r=5,tag=!onebduck,scores={bdvarsfound=..5}] actionbar {\"rawtext\":[{\"text\":\"§7\"},{\"score\":{\"name\":\"@p[r=5,tag=!onebduck]\",\"objective\":\"bdvarsfound\"}},{\"text\":\"/5\"}]}",
                                "tag @p[r=5,tag=!onebduck] add onebduck"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_variant",
                            "value": 4
                        },
                        "add": {
                            "component_groups": [
                                "blue"
                            ]
                        },
                        "queue_command": {
                            "command": [
                                "execute @p[r=5,tag=!billeybduckbreeder] ~~~ function billeybduckbreeder",
                                "tag @p[r=5,tag=!billeybduckbreeder] add billeybduckbreeder",
                                "scoreboard players add @p[r=5,tag=!fourbduck] bdvarsfound 1",
                                "titleraw @p[r=5,tag=!fourbduck,scores={bdvarsfound=..5}] actionbar {\"rawtext\":[{\"text\":\"§7\"},{\"score\":{\"name\":\"@p[r=5,tag=!fourbduck]\",\"objective\":\"bdvarsfound\"}},{\"text\":\"/5\"}]}",
                                "tag @p[r=5,tag=!fourbduck] add fourbduck"
                            ]
                        }
                    }
                ]
            },
            "minecraft:ageable_grow_up": {
                "remove": {
                    "component_groups": [
                        "minecraft:banana_duck_baby",
                        "duckage"
                    ]
                },
                "add": {
                    "component_groups": [
                        "minecraft:banana_duck_adult"
                    ]
                }
            },
            "addgold": {
                "add": {
                    "component_groups": [
                        "gold"
                    ]
                }
            }
        }
    }
}