{
	//this file was originally coded in late 2019,
	//lots of weird stuff in here
	"format_version": "1.16.0",
	"minecraft:entity": {
		"description": {
			"identifier": "billey:penguin",
			"is_spawnable": true,
			"is_summonable": true,
			"is_experimental": false,
			"scripts": {
				"animate": [
                    {
                        "set_follow_state": "q.is_tamed && q.property('billey:follow_owner_state') == 'unknown'"
                    },
                    {
                        "set_sitting_property": "q.is_tamed"
                    },
					"check_beta_apis",
					{
						"rainbow_effects": "q.is_illager_captain"
					},
					{
						"stand_up_when_hit": "q.is_tamed"
					},
					{
						"info": "!q.is_tamed"
					},
					{
						"water": "q.is_powered"
					},
					{
						"land": "q.is_sheared"
					},
					"tame"
				]
			},
			"animations": {
                "check_beta_apis": "animation.billey.check_beta_apis",
                "set_follow_state": "animation.billey.set_follow_state",
                "set_sitting_property": "controller.animation.billey.set_sitting_property",
				"rainbow_effects": "animation.billey.rainbow_effects",
				"stand_up_when_hit": "controller.animation.billey.stand_up_when_hit",
				"info": "animation.billeyinfo.penguin",
				"water": "animation.billey.penguin.water",
				"land": "animation.billey.penguin.land",
				"tame": "controller.animation.billeysmobs.tame"
			},
            "properties": {
                "billey:follow_owner_state": {
                    //only used so scripts can know whether it's following or wandering
                    "type": "enum",
                    "default": "unknown",
                    "values": [
                        "unknown",
                        "following",
                        "wandering"
                    ]
                },
                "billey:is_sitting": {
                    //only used so scripts can know whether or not it's sitting
                    "type": "bool",
                    "default": false
                }
            }
		},
		"component_groups": {
			"sittable": {
				"minecraft:sittable": {}
			},
			"tamed_component": {
				"minecraft:is_tamed": {}
			},
			"untamed": {
				"minecraft:tameable": {
					"probability": 1.0,
					"tame_event": {
						"event": "get_tamed_after_untame"
					},
					"tame_items": [
						"billey:power_banana",
						"billey:raw_catfish",
						"clownfish",
						"salmon",
						"billey:pizzapiece",
						"fish"
					]
				}
			},
			"electrocuted": {
				"minecraft:loot": {
					"table": "loot_tables/entities/billey_electrocuted.json"
				}
			},
			"leucistic": {
				"minecraft:variant": {
					"value": 0
				}
			},
			"adelie": {
				"minecraft:mark_variant": {
					"value": 0
				}
			},
			"emperor": {
				"minecraft:mark_variant": {
					"value": 1
				}
			},
			"humboldt": {
				"minecraft:mark_variant": {
					"value": 2
				}
			},
			"little": {
				"minecraft:mark_variant": {
					"value": 3
				}
			},
			"following": {
				"minecraft:behavior.follow_owner": {
					"priority": 2,
					"speed_multiplier": 1,
					"start_distance": 7,
					"stop_distance": 5
				}
			},
			"kromatik": {
				"minecraft:color": {
					"value": 0
				},
				"minecraft:is_illager_captain": {}
			},
			"hat": {
				"minecraft:is_saddled": {},
				"minecraft:is_dyeable": {
					"interact_text": "action.interact.dye"
				},
				"minecraft:equip_item": {},
				"minecraft:admire_item": {
					"duration": 10,
					"cooldown_after_being_attacked": 2
				},
				"minecraft:behavior.admire_item": {
					"priority": 0,
					"on_admire_item_stop": {
						"event": "stop_cooking",
						"target": "self"
					}
				},
				"minecraft:shareables": {
					"items": [
						{
							"item": "minecraft:sugar",
							"priority": 1,
							"pickup_limit": 1,
							"admire": true
						}
					]
				},
				"minecraft:behavior.equip_item": {
					"priority": 0
				},
				"minecraft:behavior.pickup_items": {
					"priority": 5,
					"max_dist": 10,
					"goal_radius": 2,
					"speed_multiplier": 1.0,
					"pickup_based_on_chance": false,
					"can_pickup_any_item": false,
					"cooldown_after_being_attacked": 2
				}
			},
			"billey:penguin_baby": {
				"minecraft:is_baby": {},
				"minecraft:scale": {
					"value": 0.5
				},
				"minecraft:on_target_acquired": {
					"event": "angerybaby",
					"target": "self"
				},
				"minecraft:behavior.follow_parent": {
					"priority": 5,
					"speed_multiplier": 1.1
				}
			},
			"billey:penguin_age": {
				"minecraft:ageable": {
					"duration": 4800,
					"feed_items": [
						"fish",
						"salmon",
						"billey:pizzapiece",
						"billey:raw_catfish"
					],
					"grow_up": {
						"event": "minecraft:ageable_grow_up",
						"target": "self"
					}
				},
				"minecraft:scale_by_age": {
					"start_scale": 0.5,
					"end_scale": 0.7
				}
			},
			"billey:penguin_adult": {
				"minecraft:experience_reward": {
					"on_bred": "Math.Random(1,7)",
					"on_death": "q.last_hit_by_player ? Math.Random(1,3) : 0"
				},
				"minecraft:loot": {
					"table": "loot_tables/entities/penguin.json"
				},
				"minecraft:scale": {
					"value": 1.0
				},
				"minecraft:on_target_acquired": {
					"event": "angery",
					"target": "self"
				},
				"minecraft:breedable": {
					"require_tame": true,
					"allow_sitting": true,
					"require_full_health": true,
					"breeds_with": [
						{
							"mateType": "billey:penguin",
							"babyType": "billey:penguin",
							"breed_event": {
								"event": "minecraft:entity_born",
								"target": "baby"
							}
						},
						{
							"mate_type": "billey:orange_penguin",
							"baby_type": "billey:orange_penguin",
							"breed_event": {
								"event": "minecraft:entity_born_red",
								"target": "baby"
							}
						},
						{
							"mateType": "billey:pigeon",
							"babyType": "billey:kiwi",
							"breed_event": {
								"event": "minecraft:entity_born",
								"target": "baby"
							}
						},
						{
							"mateType": "billey:duck",
							"babyType": "billey:duck",
							"breed_event": {
								"event": "minecraft:entity_born_golden",
								"target": "baby"
							}
						},
						{
							"mateType": "billey:banana_duck",
							"babyType": "billey:banana_duck",
							"breed_event": {
								"event": "minecraft:entity_born_purple",
								"target": "baby"
							}
						}
					],
					"breed_items": [
						"billey:poultry_orange",
						"fish",
						"salmon",
						"billey:pizzapiece",
						"billey:raw_catfish",
						"clownfish"
					]
				},
				"minecraft:behavior.breed": {
					"priority": 3,
					"speed_multiplier": 1
				},
				"minecraft:rideable": {
					"seat_count": 1,
					"family_types": [
						"skeleton"
					],
					"seats": {
						"position": [
							0,
							0.8,
							0
						]
					}
				}
			},
			"billey:penguin_leashed": {
				"minecraft:behavior.move_towards_restriction": {
					"priority": 2,
					"speed_multiplier": 1
				}
			},
			"angry": {
				"minecraft:follow_range": {
					"value": 40,
					"max": 50
				},
				"minecraft:angry": {
					"duration": 60,
					"broadcast_anger": true,
					"broadcast_range": 40,
					"calm_event": {
						"event": "calmery",
						"target": "self"
					},
					"broadcast_filters": {
						"test": "is_family",
						"value": "penguin",
						"subject": "self"
					},
					"broadcast_targets": [
						"penguin"
					]
				}
			}, //20??: go to the add-on's mcpedl page right now and comment potato i dare you
			//2024: what
			"angrybaby": {
				"minecraft:follow_range": {
					"value": 40,
					"max": 50
				},
				"minecraft:angry": {
					"duration": 1,
					"broadcast_anger": true,
					"broadcast_range": 40,
					"calm_event": {
						"event": "calmery",
						"target": "self"
					},
					"broadcast_filters": {
						"test": "is_family",
						"value": "penguin",
						"subject": "self"
					},
					"broadcast_targets": [
						"penguin"
					]
				}
			},
			"tameable": {
				"minecraft:shareables": {
					"all_items": false,
					"all_items_max_amount": 1,
					"items": [
						{
							"item": "minecraft:chicken",
							"priority": 0,
							"max_amount": 1
						},
						{
							"item": "minecraft:clownfish",
							"priority": 0,
							"max_amount": 1
						},
						{
							"item": "minecraft:fish",
							"priority": 0,
							"max_amount": 1
						},
						{
							"item": "minecraft:rotten_flesh",
							"priority": 0,
							"max_amount": 1
						},
						{
							"item": "minecraft:salmon",
							"priority": 0,
							"max_amount": 1
						},
						{
							"item": "billey:swordmeat",
							"priority": 0,
							"max_amount": 1
						},
						{
							"item": "billey:swordcooked",
							"priority": 0,
							"max_amount": 1
						},
						{
							"item": "minecraft:bone",
							"priority": 1,
							"max_amount": 1
						},
						{
							"item": "minecraft:feather",
							"priority": 1,
							"max_amount": 1
						},
						{
							"item": "minecraft:dye", //ink sac
							"priority": 1,
							"max_amount": 1
						},
						{
							"item": "billey:shark_tooth",
							"priority": 1,
							"max_amount": 1
						},
						{
							"item": "billey:shark_scales",
							"priority": 1,
							"max_amount": 1
						},
						{
							"item": "billey:swordfin",
							"priority": 1,
							"max_amount": 1
						},
						{
							"item": "billey:swordtail",
							"priority": 1,
							"max_amount": 1
						},
						{
							"item": "billey:mergoose_spikes",
							"priority": 1,
							"max_amount": 1
						},
						{
							"item": "billey:swordstick",
							"priority": 1,
							"max_amount": 1
						},
						{
							"item": "billey:anglerlight",
							"priority": 1,
							"max_amount": 1
						},
						{
							"item": "billey:betta_fish",
							"priority": 0,
							"max_amount": 1
						},
						{
							"item": "billey:raw_catfish",
							"priority": 0,
							"max_amount": 1
						},
						{
							"item": "billey:pizzapiece",
							"priority": 0,
							"max_amount": 1
						},
						{
							"item": "billey:raw_piranha",
							"priority": 0,
							"max_amount": 1
						}
					]
				},
				"minecraft:behavior.eat_carried_item": {
					"priority": 4,
					"delay_before_eating": 0
				},
				"minecraft:behavior.pickup_items": {
					"priority": 0,
					"max_dist": 10,
					"goal_radius": 2,
					"speed_multiplier": 1.1
				},
				"minecraft:behavior.equip_item": {
					"priority": 2
				},
				"minecraft:behavior.tempt": {
					"priority": 2,
					"within_radius": 7,
					"items": [
						"billey:pizzapiece"
					]
				},
				"minecraft:behavior.beg": {
					"priority": 9,
					"look_distance": 3,
					"look_time": 0,
					"items": [
						"billey:pizzapiece"
					]
				},
				"minecraft:despawn": {
					"despawn_from_distance": {}
				},
				"minecraft:tameable": {
					"probability": 0.8,
					"tame_items": [
						"billey:pizzapiece",
						"billey:power_banana"
					],
					"tame_event": {
						"event": "get_tamed_boi"
					}
				}
			},
			"donotgoogleporn": {
				"minecraft:shareables": {
					"all_items": false,
					"all_items_max_amount": 1,
					"items": [
						{
							"item": "minecraft:chicken",
							"priority": 0,
							"max_amount": 1
						},
						{
							"item": "minecraft:clownfish",
							"priority": 0,
							"max_amount": 1
						},
						{
							"item": "minecraft:fish",
							"priority": 0,
							"max_amount": 1
						},
						{
							"item": "minecraft:rotten_flesh",
							"priority": 0,
							"max_amount": 1
						},
						{
							"item": "minecraft:salmon",
							"priority": 0,
							"max_amount": 1
						},
						{
							"item": "billey:swordmeat",
							"priority": 0,
							"max_amount": 1
						},
						{
							"item": "billey:swordcooked",
							"priority": 0,
							"max_amount": 1
						},
						{
							"item": "minecraft:bone",
							"priority": 1,
							"max_amount": 1
						},
						{
							"item": "minecraft:feather",
							"priority": 1,
							"max_amount": 1
						},
						{
							"item": "minecraft:dye", //ink sac
							"priority": 1,
							"max_amount": 1
						},
						{
							"item": "billey:shark_tooth",
							"priority": 1,
							"max_amount": 1
						},
						{
							"item": "billey:shark_scales",
							"priority": 1,
							"max_amount": 1
						},
						{
							"item": "billey:swordfin",
							"priority": 1,
							"max_amount": 1
						},
						{
							"item": "billey:swordtail",
							"priority": 1,
							"max_amount": 1
						},
						{
							"item": "billey:mergoose_spikes",
							"priority": 1,
							"max_amount": 1
						},
						{
							"item": "billey:swordstick",
							"priority": 1,
							"max_amount": 1
						},
						{
							"item": "billey:anglerlight",
							"priority": 1,
							"max_amount": 1
						},
						{
							"item": "billey:betta_fish",
							"priority": 0,
							"max_amount": 1
						},
						{
							"item": "billey:raw_catfish",
							"priority": 0,
							"max_amount": 1
						},
						{
							"item": "billey:pizzapiece",
							"priority": 0,
							"max_amount": 1
						},
						{
							"item": "billey:raw_piranha",
							"priority": 0,
							"max_amount": 1
						}
					]
				},
				"minecraft:behavior.eat_carried_item": {
					"priority": 4,
					"delay_before_eating": 0
				},
				"minecraft:behavior.pickup_items": {
					"priority": 0,
					"max_dist": 10,
					"goal_radius": 2,
					"speed_multiplier": 1.1
				},
				"minecraft:behavior.equip_item": {
					"priority": 2
				},
				"minecraft:behavior.nearest_attackable_target": {
					"priority": 3,
					"attack_interval": 60,
					"must_reach": true,
					"entity_types": [
						{
							"filters": {
								"all_of": [
									{
										"test": "is_family",
										"subject": "other",
										"value": "wildcod"
									},
									{
										"test": "in_water",
										"subject": "self"
									}
								]
							},
							"max_dist": 64
						}
					]
				},
				"minecraft:behavior.tempt": {
					"priority": 2,
					"within_radius": 7,
					"items": [
						"billey:pizzapiece"
					]
				},
				"minecraft:behavior.beg": {
					"priority": 9,
					"look_distance": 3,
					"look_time": 0,
					"items": [
						"billey:pizzapiece"
					]
				},
				"minecraft:despawn": {
					"despawn_from_distance": {}
				},
				"minecraft:tameable": {
					"probability": 0.67,
					"tame_items": [
						"billey:power_banana",
						"billey:pizzapiece"
					],
					"tame_event": {
						"event": "get_tamed_fucker"
					}
				}
			},
			"tamed": {
				"minecraft:spawn_entity": {
					"entities": [
						{
							"single_use": false,
							"spawn_item": "billey:penguin_feather",
							"min_wait_time": 600,
							"max_wait_time": 1200
						}
					]
				},
				"minecraft:behavior.avoid_mob_type": {
					"priority": 0,
					"max_flee": 16,
					"entity_types": [
						{
							"filters": {
								"test": "has_component",
								"subject": "other",
								"value": "minecraft:explode"
							},
							"max_dist": 12,
							"walk_speed_multiplier": 1.4,
							"sprint_speed_multiplier": 1.4
						}
					]
				},
				"minecraft:behavior.tempt": {
					"priority": 2,
					"within_radius": 7,
					"items": [
						"fish",
						"minecraft:salmon",
						"clownfish",
						"billey:pizzapiece",
						"billey:raw_catfish",
						"billey:sand_banana"
					]
				},
				"minecraft:behavior.beg": {
					"priority": 9,
					"look_distance": 3,
					"look_time": 0,
					"items": [
						"fish",
						"minecraft:salmon",
						"clownfish",
						"billey:pizzapiece",
						"billey:raw_catfish",
						"billey:sand_banana"
					]
				},
				"minecraft:behavior.nearest_attackable_target": {
					"priority": 3,
					"must_reach": true,
					"entity_types": [
						{
							"filters": {
								"all_of": [
									{
										"test": "is_family",
										"subject": "other",
										"value": "wildcod"
									},
									{
										"test": "in_water",
										"subject": "self"
									}
								]
							},
							"max_dist": 18
						}
					]
				},
				"minecraft:persistent": {},
				"minecraft:attack": {
					"damage": 8
				},
				"minecraft:is_tamed": {},
				"minecraft:tameable": {}, //for the script to be able to get the mob's owner
				"minecraft:behavior.follow_owner": {
					"priority": 2,
					"speed_multiplier": 1,
					"start_distance": 7,
					"stop_distance": 5
				},
				"minecraft:navigation.generic": {
					"is_amphibious": true,
					"can_path_over_water": false,
					"can_swim": true,
					"avoid_damage_blocks": true,
					"can_walk": true
				},
				"minecraft:interact": {
					"interactions": [
						{
							"on_interact": {
								"filters": {
									"all_of": [
										{
											"test": "has_equipment",
											"subject": "other",
											"domain": "hand",
											"value": "sugar"
										},
										{
											"test": "has_component",
											"subject": "self",
											"value": "minecraft:is_saddled"
										}
									]
								}
							},
							"admire": true,
							"use_item": true,
							"cooldown": 10,
							"interact_text": "action.interact.make_ice_cream"
						},
						{
							"play_sounds": "plop",
							"swing": true,
							"interact_text": "action.interact.get_info",
							"on_interact": {
								"filters": {
									"any_of": [
										{
											"test": "has_equipment",
											"subject": "other",
											"domain": "hand",
											"value": "feather"
										},
										{
											"test": "has_equipment",
											"subject": "other",
											"domain": "hand",
											"value": "book"
										}
									]
								},
								"event": "send_info",
								"target": "self"
							}
						},
						{
							"play_sounds": "plop",
							"swing": true,
							"interact_text": "action.interact.untame",
							"on_interact": {
								"filters": {
									"all_of": [
										{
											"test": "has_equipment",
											"subject": "other",
											"domain": "hand",
											"value": "billey:untaming_stick"
										},
										{
											"test": "is_family",
											"subject": "other",
											"value": "player"
										},
										{
											"test": "is_owner",
											"subject": "other",
											"value": true
										}
									]
								},
								"event": "untame",
								"target": "self"
							}
						},
						{
							"play_sounds": "plop",
							"swing": true,
							"interact_text": "action.interact.wander",
							"on_interact": {
								"filters": {
									"all_of": [
										{
											"test": "has_equipment",
											"subject": "other",
											"domain": "hand",
											"value": "stick"
										},
										{
											"test": "has_component",
											"subject": "self",
											"value": "minecraft:behavior.follow_owner"
										},
										{
											"test": "is_family",
											"subject": "other",
											"value": "player"
										},
										{
											"test": "is_owner",
											"subject": "other",
											"value": true
										}
									]
								},
								"event": "eventwander",
								"target": "self"
							}
						},
						{
							"play_sounds": "plop",
							"swing": true,
							"interact_text": "action.interact.follow",
							"on_interact": {
								"filters": {
									"all_of": [
										{
											"test": "has_equipment",
											"subject": "other",
											"domain": "hand",
											"value": "stick"
										},
										{
											"test": "has_component",
											"subject": "self",
											"operator": "not",
											"value": "minecraft:behavior.follow_owner"
										},
										{
											"test": "is_family",
											"subject": "other",
											"value": "player"
										},
										{
											"test": "is_owner",
											"subject": "other",
											"value": true
										}
									]
								},
								"event": "eventfollow",
								"target": "self"
							}
						},
						{
							"interact_text": "action.interact.pet",
							"on_interact": {
								"filters": {
									"all_of": [
										{
											"test": "has_equipment",
											"subject": "other",
											"domain": "hand",
											"operator": "!=",
											"value": "billey:swordfish"
										},
										{
											"test": "has_equipment",
											"subject": "other",
											"domain": "hand",
											"operator": "!=",
											"value": "billey:golden_swordfish"
										},
										{
											"test": "is_sneaking",
											"subject": "other",
											"value": true
										}
									]
								},
								"event": "bepetted",
								"target": "self"
							}
						},
						{
							"use_item": true,
							"play_sounds": "eat",
							"interact_text": "action.interact.feed",
							"on_interact": {
								"filters": {
									"all_of": [
										{
											"test": "has_equipment",
											"subject": "other",
											"domain": "hand",
											"value": "billey:sand_banana"
										},
										{
											"test": "is_family",
											"subject": "other",
											"value": "player"
										}
									]
								},
								"event": "beenfedabanana",
								"target": "self"
							}
						},
						{
							"use_item": true,
							"play_sounds": "milk",
							"interact_text": "action.interact.use",
							"transform_to_item": "glass_bottle",
							"on_interact": {
								"filters": {
									"all_of": [
										{
											"test": "has_equipment",
											"subject": "other",
											"domain": "hand",
											"value": "billey:colorful_bottle"
										},
										{
											"test": "is_family",
											"subject": "other",
											"value": "player"
										},
										{
											"test": "is_owner",
											"subject": "other",
											"value": true
										}
									]
								},
								"event": "kroma",
								"target": "self"
							}
						},
						{
							"use_item": true,
							"play_sounds": "milk",
							"interact_text": "action.interact.use",
							"transform_to_item": "glass_bottle",
							"on_interact": {
								"filters": {
									"all_of": [
										{
											"test": "has_equipment",
											"subject": "other",
											"domain": "hand",
											"value": "billey:colorless_bottle"
										},
										{
											"test": "is_family",
											"subject": "other",
											"value": "player"
										},
										{
											"test": "is_owner",
											"subject": "other",
											"value": true
										}
									]
								},
								"event": "nokroma",
								"target": "self"
							}
						},
						{
							"use_item": true,
							"play_sounds": "armor.equip_generic",
							"interact_text": "action.interact.equip",
							"on_interact": {
								"filters": {
									"all_of": [
										{
											"test": "has_equipment",
											"subject": "other",
											"domain": "hand",
											"value": "billey:pet_hat"
										},
										{
											"test": "has_component",
											"subject": "self",
											"operator": "not",
											"value": "minecraft:is_saddled"
										},
										{
											"test": "is_family",
											"subject": "other",
											"value": "player"
										},
										{
											"test": "is_owner",
											"subject": "other",
											"value": true
										}
									]
								},
								"event": "wearhat",
								"target": "self"
							}
						},
						{
							"use_item": false,
							"play_sounds": "armor.equip_generic",
							"spawn_items": {
								"table": "loot_tables/entities/billeyhat.json"
							},
							"interact_text": "action.interact.equip",
							"on_interact": {
								"filters": {
									"all_of": [
										{
											"test": "has_equipment",
											"subject": "other",
											"domain": "hand",
											"value": "billey:pet_hat"
										},
										{
											"test": "has_component",
											"subject": "self",
											"value": "minecraft:is_saddled"
										},
										{
											"test": "is_family",
											"subject": "other",
											"value": "player"
										},
										{
											"test": "is_owner",
											"subject": "other",
											"value": true
										}
									]
								},
								"event": "nohat",
								"target": "self"
							}
						}
					]
				},
				"minecraft:behavior.stay_while_sitting": {
					"priority": 1
				},
				"minecraft:sittable": {} //ϜϝΜ
			},
			"water_mode": {
				"minecraft:is_charged": {},
				"minecraft:timer": {
					"time": [
						100,
						360
					],
					"looping": false,
					"time_down_event": {
						"event": "start_land",
						"target": "self"
					}
				},
				"minecraft:navigation.generic": {
					"is_amphibious": true,
					"can_path_over_water": false,
					"can_swim": true,
					"avoid_damage_blocks": true,
					"can_breach": false,
					"can_walk": true
				},
				"minecraft:behavior.move_to_water": {
					"priority": 7,
					"search_range": 100,
					"search_height": 5
				}
			},
			"land_mode": {
				"minecraft:navigation.generic": {
					"is_amphibious": true,
					"can_path_over_water": false,
					"can_swim": true,
					"avoid_damage_blocks": true,
					"can_breach": true,
					"can_walk": true
				},
				"minecraft:is_sheared": {},
				"minecraft:timer": {
					"time": [
						100,
						360
					],
					"looping": false,
					"time_down_event": {
						"event": "start_water",
						"target": "self"
					}
				},
				"minecraft:behavior.move_to_land": {
					"priority": 0,
					"search_range": 100,
					"search_height": 40
				}
			}
		},
		"components": {
            "minecraft:interact": {
                "interactions": [
                    {
                        "play_sounds": "plop",
                        "swing": true,
                        "interact_text": "action.interact.get_info",
                        "on_interact": {
                            "filters": {
                                "any_of": [
                                    {
                                        "test": "has_equipment",
                                        "subject": "other",
                                        "domain": "hand",
                                        "value": "feather"
                                    },
                                    {
                                        "test": "has_equipment",
                                        "subject": "other",
                                        "domain": "hand",
                                        "value": "book"
                                    },
                                    {
                                        "test": "has_equipment",
                                        "subject": "other",
                                        "domain": "hand",
                                        "value": "billey:info_book"
                                    }
                                ]
                            },
                            "event": "send_info",
                            "target": "self"
                        }
                    }
                ]
            },
			"minecraft:behavior.hurt_by_target": {
				"priority": 0
			},
			"minecraft:is_hidden_when_invisible": {},
			"minecraft:damage_sensor": {
				"triggers": [
                    {
                        "on_damage": {
                            "filters": {
                                "all_of": [
                                    {
                                        "test": "is_owner",
                                        "subject": "other",
                                        "value": true
                                    },
                                    {
                                        "test": "has_tag",
                                        "subject": "other",
                                        "operator": "not",
                                        "value": "billey:can_hit_own_pet"
                                    }
                                ]
                            },
                            "event": "say_owner_hit_pet_info"
                        },
                        "cause": "all",
                        "deals_damage": false
                    },
                    {
                        "on_damage": {
                            "filters": {
                                "all_of": [
                                    {
                                        "test": "has_component",
                                        "subject": "self",
                                        "value": "minecraft:is_tamed"
                                    },
                                    {
                                        "test": "is_owner",
                                        "subject": "other",
                                        "value": false
                                    },
                                    {
                                        "test": "has_tag",
                                        "subject": "other",
                                        "value": "billey:cant_hit_other_pet"
                                    }
                                ]
                            },
                            "event": "say_other_hit_pet_info"
                        },
                        "cause": "all",
                        "deals_damage": false
                    },
					{
						"on_damage": {
							"filters": {
								"test": "has_equipment",
								"subject": "other",
								"domain": "hand",
								"value": "billey:golden_swordfish"
							}
						},
						"damage_multiplier": 2.333
					},
					{
						"on_damage": {
							"filters": {
								"test": "has_equipment",
								"subject": "other",
								"domain": "hand",
								"value": "billey:swordfish"
							}
						},
						"damage_multiplier": 2.333
					},
					{
						"cause": "all",
						"deals_damage": false,
						"on_damage_sound_event": "armor.equip_generic",
						"on_damage": {
							"event": "nohat",
							"target": "self",
							"filters": {
								"all_of": [
									{
										"test": "has_damage",
										"operator": "not",
										"value": "magic"
									},
									{
										"test": "has_component",
										"value": "minecraft:is_saddled"
									}
								]
							}
						}
					}
				]
			},
			"minecraft:type_family": {
				"family": [
					"penguin",
					"mob",
					"strider",
					"eatscod",
					"dinosaur"
				]
			},
			"minecraft:attack": {
				"damage": 5
			},
			"minecraft:behavior.melee_attack": {
				"require_complete_path": true,
				"priority": 2,
				"speed_multiplier": 1.5,
				"track_target": true
			},
			"minecraft:healable": {
				"items": [
					{
						"item": "billey:poultry_orange",
						"heal_amount": 7
					},
					{
						"item": "billey:cooked_snail",
						"heal_amount": 4,
						"effects": [
							{
								"name": "strength",
								"chance": 1.0,
								"duration": 15,
								"amplifier": 1
							}
						]
					},
					{
						"item": "billey:cooked_snail_s",
						"heal_amount": 4,
						"effects": [
							{
								"name": "speed",
								"chance": 1.0,
								"duration": 15,
								"amplifier": 1
							}
						]
					},
					{
						"item": "billey:cooked_snail_w",
						"heal_amount": 4,
						"effects": [
							{
								"name": "regeneration",
								"chance": 1.0,
								"duration": 15,
								"amplifier": 1
							}
						]
					},
					{
						"item": "fish",
						"heal_amount": 2
					},
					{
						"item": "salmon",
						"heal_amount": 3
					},
					{
						"item": "billey:pizzapiece",
						"heal_amount": 3
					},
					{
						"item": "billey:raw_catfish",
						"heal_amount": 3
					},
					{
						"item": "clownfish",
						"heal_amount": 20
					}
				]
			},
			"minecraft:nameable": {},
			"minecraft:health": {
				"value": 16,
				"max": 16
			},
			"minecraft:collision_box": {
				"width": 0.5,
				"height": 0.6
			},
			"minecraft:movement": {
				"value": 0.2
			},
			"minecraft:underwater_movement": {
				"value": 0.2
			},
			"minecraft:movement.generic": {},
			"minecraft:physics": {},
			"minecraft:navigation.generic": {
				"is_amphibious": true,
				"can_path_over_water": false,
				"can_swim": true,
				"avoid_damage_blocks": true,
				"can_breach": true,
				"can_walk": true
			},
			"minecraft:variant": {
				"value": 1
			},
			"minecraft:behavior.avoid_mob_type": {
				"priority": 5,
				"entity_types": [
					{
						"filters": {
							"test": "is_family",
							"subject": "other",
							"value": "orca"
						},
						"max_dist": 10,
						"walk_speed_multiplier": 0.8,
						"sprint_speed_multiplier": 1.33
					}
				]
			},
			"minecraft:leashable": {
				"soft_distance": 4,
				"hard_distance": 6,
				"max_distance": 10,
				"on_leash": {
					"event": "minecraft:on_leash",
					"target": "self"
				},
				"on_unleash": {
					"event": "minecraft:on_unleash",
					"target": "self"
				}
			},
			"minecraft:balloonable": {
				"mass": 0.6
			},
			"minecraft:jump.static": {},
			"minecraft:can_climb": {},
			"minecraft:behavior.panic": {
				"priority": 1,
				"speed_multiplier": 1.5
			},
			"minecraft:behavior.mount_pathing": {
				"priority": 2,
				"speed_multiplier": 1.5,
				"target_dist": 0,
				"track_target": true
			},
			"minecraft:behavior.random_stroll": {
				"priority": 6,
				"speed_multiplier": 1
			},
			"minecraft:behavior.look_at_player": {
				"probability": 0.01,
				"priority": 7,
				"look_distance": 6
			},
			"minecraft:behavior.random_look_around": {
				"priority": 8
			},
			"minecraft:pushable": {
				"is_pushable": true,
				"is_pushable_by_piston": true
			}
		},
		"events": {
            "set_follow_state": {
                "sequence": [
                    {
                        "filters": {
                            "test": "has_component",
                            "subject": "self",
                            "value": "minecraft:behavior.follow_owner"
                        },
                        "set_property": {
                            "billey:follow_owner_state": "following"
                        }
                    },
                    {
                        "filters": {
                            "test": "has_component",
                            "subject": "self",
                            "operator": "not",
                            "value": "minecraft:behavior.follow_owner"
                        },
                        "set_property": {
                            "billey:follow_owner_state": "wandering"
                        }
                    }
                ]
            },
            "set_sitting_property_false": {
                "set_property": {
                    "billey:is_sitting": false
                }
            },
            "set_sitting_property_true": {
                "set_property": {
                    "billey:is_sitting": true
                }
            },
            "say_owner_hit_pet_info": {
                "queue_command": {
                    "target": "other",
                    "command": [
                        "titleraw @s actionbar {\"rawtext\":[{\"translate\":\"chat.billey.owner_hit_pet\"}]}",
                        "tellraw @s[tag=!billey:has_hurt_own_pet] {\"rawtext\":[{\"translate\":\"chat.billeyinfo.owner_hit_pet\"}]}",
                        "tag @s add billey:has_hurt_own_pet"
                    ]
                }
            },
            "say_other_hit_pet_info": {
                "queue_command": {
                    "target": "other",
                    "command": "titleraw @s actionbar {\"rawtext\":[{\"translate\":\"chat.billey.other_hit_pet\"}]}"
                }
            },
			"stop_cooking": {
				"sequence": [
					{
						"filters": {
							"test": "has_component",
							"value": "minecraft:is_saddled"
						},
						"queue_command": {
							"command": "loot spawn ~~~ loot \"entities/billice_cream\""
						}
					},
					{
						"filters": {
							"test": "has_component",
							"value": "minecraft:is_saddled",
							"operator": "not"
						},
						"queue_command": {
							"command": "loot spawn ~~~ loot \"entities/billsugar\""
						}
					}
				]
			},
			"spawn_adelie": {
				"sequence": [
					{
						"trigger": "minecraft:entity_spawned"
					},
					{
						"trigger": "become_adelie"
					}
				]
			},
			"spawn_emperor": {
				"sequence": [
					{
						"trigger": "minecraft:entity_spawned"
					},
					{
						"trigger": "become_emperor"
					}
				]
			},
			"spawn_humboldt": {
				"sequence": [
					{
						"trigger": "minecraft:entity_spawned"
					},
					{
						"trigger": "become_humboldt"
					}
				]
			},
			"spawn_little": {
				"sequence": [
					{
						"trigger": "minecraft:entity_spawned"
					},
					{
						"trigger": "become_little"
					}
				]
			},
			"become_adelie": {
				"randomize": [
					{
						"add": {
							"component_groups": [
								"adelie"
							]
						},
						"weight": 249
					},
					{
						"add": {
							"component_groups": [
								"adelie",
								"leucistic"
							]
						},
						"weight": 1
					}
				]
			},
			"become_emperor": {
				"randomize": [
					{
						"add": {
							"component_groups": [
								"emperor"
							]
						},
						"weight": 249
					},
					{
						"add": {
							"component_groups": [
								"emperor",
								"leucistic"
							]
						},
						"weight": 1
					}
				]
			},
			"become_humboldt": {
				"randomize": [
					{
						"add": {
							"component_groups": [
								"humboldt"
							]
						},
						"weight": 249
					},
					{
						"add": {
							"component_groups": [
								"humboldt",
								"leucistic"
							]
						},
						"weight": 1
					}
				]
			},
			"become_little": {
				"randomize": [
					{
						"add": {
							"component_groups": [
								"little"
							]
						},
						"weight": 249
					},
					{
						"add": {
							"component_groups": [
								"little",
								"leucistic"
							]
						},
						"weight": 1
					}
				]
			},
			"add_sittable": {
				"add": {
					"component_groups": [
						"sittable"
					]
				}
			},
			"remove_sittable": {
				"remove": {
					"component_groups": [
						"sittable"
					]
				}
			},
			"check_if_experiments_on": {
				"queue_command": {
					"command": "tag @s add billey_exp_on_v2"
				}
			},
			"send_info": {
				"queue_command": {
					"target": "other",
					"command": [
						"tellraw @s {\"rawtext\":[{\"text\":\"\\n\"}]}",
						"tellraw @s {\"rawtext\":[{\"translate\":\"chat.billeyinfo.penguin\",\"with\":[\"\\n\"]},{\"text\": \"\\n\"},{\"text\": \"\\n\"},{\"translate\":\"chat.billeyinfo.formore\"}]}",
						"tellraw @s {\"rawtext\":[{\"text\":\"\\n\"}]}"
					]
				}
			},
			"get_electrocuted": {
				"add": {
					"component_groups": [
						"electrocuted"
					]
				}
			},
			"blackstripehat": {
				"queue_command": {
					"command": [
						"replaceitem entity @s slot.armor.head 0 minecraft:dried_kelp"
					]
				}
			},
			"add:swim": {
				"add": {
					"component_groups": [
						"billey:swimming"
					]
				}
			},
			"remove:swim": {
				"add": {
					"component_groups": [
						"billey:walking"
					]
				}
			},
            "eventwander": {
                "sequence": [
                    {
                        "remove": {
                            "component_groups": [
                                "following"
                            ]
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "tellraw @a[r=5] {\"rawtext\": [{\"translate\": \"billmobs.wander\"},{\"selector\": \"@s\"}, {\"translate\": \"billmobs.wander2\"}] }"
                            ]
                        }
                    },
                    {
                        "set_property": {
                            "billey:follow_owner_state": "wandering"
                        }
                    }
                ]
            },
            "eventfollow": {
                "sequence": [
                    {
                        "add": {
                            "component_groups": [
                                "following"
                            ]
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "tellraw @a[r=5] {\"rawtext\": [{\"translate\": \"billmobs.follow\"},{\"selector\": \"@s\"}, {\"translate\": \"billmobs.follow2\"}] }"
                            ]
                        }
                    },
                    {
                        "set_property": {
                            "billey:follow_owner_state": "following"
                        }
                    }
                ]
            },
			"beenfedabanana": {
				"sequence": [
					{
						"queue_command": {
							"command": [
								"particle billey:eatbanana ~ ~.5 ~"
							]
						}
					},
					{
						"randomize": [
							{
								"weight": 8,
								"queue_command": {
									"command": [
										"effect @s regeneration 7 1"
									]
								}
							},
							{
								"weight": 4,
								"queue_command": {
									"command": [
										"effect @s regeneration 10"
									]
								}
							},
							{
								"weight": 4,
								"queue_command": {
									"command": [
										"effect @s speed 10"
									]
								}
							},
							{
								"weight": 4,
								"queue_command": {
									"command": [
										"effect @s absorption 10"
									]
								}
							},
							{
								"weight": 4,
								"queue_command": {
									"command": [
										"effect @s resistance 10"
									]
								}
							},
							{
								"weight": 4,
								"queue_command": {
									"command": [
										"effect @s strength 10"
									]
								}
							},
							{
								"weight": 4,
								"queue_command": {
									"command": [
										"effect @s water_breathing 10"
									]
								}
							},
							{
								"weight": 4,
								"queue_command": {
									"command": [
										"effect @s fire_resistance 10"
									]
								}
							},
							{
								"weight": 1,
								"sequence": [
									{
										"queue_command": {
											"command": [
												"effect @s levitation 1 0 true"
											]
										}
									},
									{
										"queue_command": {
											"target": "other",
											"command": [
												"effect @s levitation 1 0 true"
											]
										}
									}
								]
							}
						]
					}
				]
			},
			"bepetted": {
				"sequence": [
					{
						"randomize": [
							{
								"weight": 13
							},
							{
								"weight": 1
							},
							{
								"weight": 1,
								"queue_command": {
									"command": [
										"playanimation @s animation.billcat.petted"
									]
								}
							}
						]
					},
					{
						"queue_command": {
							"target": "other",
							"command": [
								"playanimation @s animation.billeyplayer.pet"
							]
						}
					},
					{
						"randomize": [
							{
								"weight": 1
							},
							{
								"weight": 99
							},
							{
								"weight": 3,
								"queue_command": {
									"command": [
										"effect @s resistance 10 1 true"
									]
								}
							},
							{
								"weight": 3,
								"queue_command": {
									"command": [
										"effect @s fire_resistance 10 1 true"
									]
								}
							},
							{
								"weight": 3,
								"queue_command": {
									"command": [
										"effect @s strength 10 1 true"
									]
								}
							},
							{
								"weight": 3,
								"queue_command": {
									"command": [
										"effect @s water_breathing 30 0 true"
									]
								}
							},
							{
								"weight": 3,
								"queue_command": {
									"command": [
										"effect @s speed 10 1 true"
									]
								}
							},
							{
								"weight": 1,
								"queue_command": {
									"command": [
										"effect @s levitation 1 1 true",
										"effect @s regeneration 30 1 true"
									]
								}
							},
							{
								"weight": 1,
								"queue_command": {
									"command": [
										"effect @s speed 1 0"
									]
								}
							}
						]
					}
				]
			},
			"wearhat": {
				"add": {
					"component_groups": [
						"hat"
					]
				}
			},
			"nohat": {
				"remove": {
					"component_groups": [
						"hat"
					]
				},
				"queue_command": {
					"command": [
						"replaceitem entity @s slot.armor.head 0 feather"
					]
				}
			},
			"kroma": {
				"add": {
					"component_groups": [
						"kromatik"
					]
				}
			},
			"nokroma": {
				"remove": {
					"component_groups": [
						"kromatik"
					]
				},
				"queue_command": {
					"command": [
						"execute @p[r=5,tag=!billcoloradvancement] ~~~ function billcoloradvancement",
						"tag @p[r=5,tag=!billcoloradvancement] add billcoloradvancement"
					]
				}
			},
			"minecraft:entity_spawned": {
				"sequence": [
					{
						"randomize": [
							{
								"weight": 80,
								"remove": {},
								"add": {
									"component_groups": [
										"billey:penguin_adult",
										"donotgoogleporn"
									]
								}
							},
							{
								"weight": 20,
								"remove": {},
								"add": {
									"component_groups": [
										"billey:penguin_baby",
										"tameable"
									]
								}
							}
						]
					},
					{
						"randomize": [
							{
								"weight": 3,
								"remove": {},
								"add": {
									"component_groups": [
										"water_mode",
										"water_dry"
									]
								}
							},
							{
								"weight": 4,
								"remove": {},
								"add": {
									"component_groups": [
										"land_mode"
									]
								}
							}
						]
					},
					{
						"randomize": [
							{
								"weight": 1,
								"add": {
									"component_groups": [
										"kromatik"
									]
								}
							},
							{
								"weight": 299
							}
						]
					},
					{
						"randomize": [
							{
								"weight": 1,
								"trigger": "become_adelie"
							},
							{
								"weight": 1,
								"trigger": "become_emperor"
							},
							{
								"weight": 1,
								"trigger": "become_humboldt"
							},
							{
								"weight": 1,
								"trigger": "become_little"
							}
						]
					},
					{
						"filters": {
							"all_of": [
								{
									"test": "has_biome_tag",
									"value": "frozen",
									"operator": "not"
								},
								{
									"test": "has_biome_tag",
									"value": "cold",
									"operator": "not"
								},
								{
									"test": "has_biome_tag",
									"value": "beach"
								}
							]
						},
						"randomize": [
							{
								"weight": 1,
								"trigger": "become_humboldt"
							},
							{
								"weight": 1,
								"trigger": "become_little"
							}
						]
					},
					{
						"filters": {
							"any_of": [
								{
									"test": "has_biome_tag",
									"value": "frozen"
								},
								{
									"test": "has_biome_tag",
									"value": "cold"
								}
							]
						},
						"randomize": [
							{
								"weight": 1,
								"trigger": "become_adelie"
							},
							{
								"weight": 1,
								"trigger": "become_emperor"
							}
						]
					}
				]
			},
			"minecraft:entity_born": {
				"sequence": [
					{
						"add": {
							"component_groups": [
								"billey:penguin_baby",
								"dries",
								"tamed",
								"billey:penguin_age"
							]
						}
					},
					{
						"filters": {
							"test": "has_component",
							"value": "minecraft:is_illager_captain",
							"subject": "parent"
						},
						"add": {
							"component_groups": [
								"kromatik"
							]
						}
					},
					{
						"randomize": [
							{
								"weight": 199
							},
							{
								"add": {
									"component_groups": [
										"leucistic"
									]
								},
								"weight": 1
							}
						]
					}
				]
			},
			"minecraft:ageable_grow_up": {
				"remove": {
					"component_groups": [
						"billey:penguin_baby",
						"billey:penguin_age"
					]
				},
				"add": {
					"component_groups": [
						"billey:penguin_adult"
					]
				}
			},
			"minecraft:on_leash": {
				"add": {
					"component_groups": [
						"billey:penguin_leashed"
					]
				}
			},
			"minecraft:on_unleash": {
				"remove": {
					"component_groups": [
						"billey:penguin_leashed"
					]
				}
			},
			"start_water": {
				"add": {
					"component_groups": [
						"water_dry",
						"water_mode"
					]
				},
				"remove": {
					"component_groups": [
						"land_mode"
					]
				}
			},
			"start_land": {
				"add": {
					"component_groups": [
						"land_mode"
					]
				},
				"remove": {
					"component_groups": [
						"water_dry",
						"water_wet",
						"water_mode"
					]
				}
			},
			"get_dry": {
				"add": {
					"component_groups": [
						"water_dry"
					]
				},
				"remove": {
					"component_groups": [
						"water_wet"
					]
				}
			},
			"get_wet": {
				"remove": {
					"component_groups": [
						"water_dry"
					]
				},
				"add": {
					"component_groups": [
						"water_wet"
					]
				}
			},
			"untame": {
				"sequence": [
					{
						"queue_command": {
							"command": [
								"playsound random.orb @a ~~~ 1.00 0.8 0.5",
								"tellraw @a[r=5] {\"rawtext\": [{\"translate\": \"billmobs.untame\"},{\"selector\": \"@s\"}, {\"translate\": \"billmobs.untame2\"}] }"
							]
						}
					},
					{
						"remove": {
							"component_groups": [
								"tamed_component"
							]
						},
						"add": {
							"component_groups": [
								"untamed"
							]
						}
					}
				]
			},
			"get_tamed_after_untame": {
				"sequence": [
					{
						"filters": {
							"test": "has_component",
							"subject": "self",
							"value": "minecraft:is_baby"
						},
						"trigger": "get_tamed_boi"
					},
					{
						"filters": {
							"test": "has_component",
							"subject": "self",
							"value": "minecraft:is_baby",
							"operator": "not"
						},
						"trigger": "get_tamed_fucker"
					}
				]
			},
			"get_tamed_boi": {
				"add": {
					"component_groups": [
						"tamed",
						"dries",
						"billey:penguin_age"
					]
				},
				"remove": {
					"component_groups": [
						"tameable",
						"water_mode",
						"water_dry",
						"water_wet",
						"land_mode",
						"angrybaby",
						"angry",
						"untamed"
					]
				}
			},
			"get_tamed_fucker": {
				"add": {
					"component_groups": [
						"tamed",
						"dries"
					]
				},
				"remove": {
					"component_groups": [
						"donotgoogleporn",
						"water_mode",
						"water_dry",
						"water_wet",
						"land_mode",
						"angry",
						"angrybaby",
						"untamed"
					]
				}
			},
			"being_dries": {
				"add": {
					"component_groups": [
						"dries"
					]
				},
				"remove": {
					"component_groups": [
						"wets",
						"fishing",
						"sweeming"
					]
				}
			},
			"being_wets": {
				"add": {
					"component_groups": [
						"wets"
					]
				},
				"remove": {
					"component_groups": [
						"dries"
					]
				}
			},
			"fish": {
				"add": {
					"component_groups": [
						"fishing"
					]
				},
				"remove": {
					"component_groups": [
						"wets"
					]
				}
			},
			"stop": {
				"add": {
					"component_groups": [
						"wets"
					]
				},
				"remove": {
					"component_groups": [
						"fishing",
						"sweeming"
					]
				}
			},
			"start_swim": {
				"add": {
					"component_groups": [
						"sweeming"
					]
				}
			},
			"stop_swim": {
				"remove": {
					"component_groups": [
						"sweeming"
					]
				}
			},
			"angery": {
				"add": {
					"component_groups": [
						"angry"
					]
				}
			},
			"angerybaby": {
				"add": {
					"component_groups": [
						"angrybaby"
					]
				}
			},
			"calmery": {
				"remove": {
					"component_groups": [
						"angry",
						"angrybaby"
					]
				}
			}
		}
	}
}