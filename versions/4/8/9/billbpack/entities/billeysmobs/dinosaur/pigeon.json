{ //this file has a lot of unused stuff
	//and a lot of weird code left over from 2019-2020
	"format_version": "1.16.0",
	"minecraft:entity": {
		"description": {
			"identifier": "billey:pigeon",
			"runtime_identifier": "minecraft:parrot",
			"is_spawnable": true,
			"is_summonable": true,
			"is_experimental": false,
			"scripts": {
                "animate": [
                    {
                        "set_follow_state": "q.is_tamed && q.property('billey:follow_owner_state') == 'unknown'"
                    },
                    {
                        "set_sitting_property": "q.is_tamed"
                    }, "check_beta_apis",
					{
						"rainbow_effects": "q.is_illager_captain"
					},
					{
						"stand_up_when_hit": "q.is_tamed"
					},
					{
						"info": "!q.is_tamed"
					},
					"tame",
					"pigeon",
					{
						"apple": "q.is_tamed && !q.is_sitting"
					},
					"can_sleep",
					"ride",
					{
						"dont_fly_while_mating": "q.is_tamed"
					}
				]
			},
            "animations": {
                "check_beta_apis": "animation.billey.check_beta_apis",
                "set_follow_state": "animation.billey.set_follow_state",
                "set_sitting_property": "controller.animation.billey.set_sitting_property",
				"rainbow_effects": "animation.billey.rainbow_effects",
				"stand_up_when_hit": "controller.animation.billey.stand_up_when_hit",
				"info": "animation.billeyinfo.pigeon",
				"tame": "controller.animation.billeysmobs.tame",
				"pigeon": "controller.animation.billeysmobs.pigeon",
				"dont_fly_while_mating": "controller.animation.billeysmobs.dont_fly_while_mating",
				"apple": "animation.billpigeon.apple",
				"can_sleep": "controller.animation.billey.can_sleep",
				"ride": "controller.animation.billeyrat.ride"
			},
			"properties": {
				"billey:has_backpack": {
					"type": "bool",
					"default": false,
					"client_sync": true
				},
                "billey:follow_owner_state": {
                    //only used so scripts can know whether it's following or wandering
                    "type": "enum",
                    "default": "unknown",
                    "values": [
                        "unknown",
                        "following",
                        "wandering"
                    ]
                },
                "billey:is_sitting": {
                    //only used so scripts can know whether or not it's sitting
                    "type": "bool",
                    "default": false
                }
			}
		},
		"component_groups": {
			"in_mission": {
				"minecraft:is_tamed": {},
                "minecraft:tameable": {}, //for the script to be able to get the mob's owner
				"minecraft:persistent": {},
				"minecraft:damage_sensor": {
					"triggers": [
						{
							"on_damage": {
								"filters": {
									"all_of": [
										{
											"test": "is_owner",
											"subject": "other",
											"value": true
										},
										{
											"test": "has_tag",
											"subject": "other",
											"operator": "not",
											"value": "billey:can_hit_own_pet"
										}
									]
								},
								"event": "say_owner_hit_pet_info"
							},
							"cause": "all",
							"deals_damage": false
						},
						{
							"on_damage": {
								"filters": {
									"all_of": [
										{
											"test": "has_component",
											"subject": "self",
											"value": "minecraft:is_tamed"
										},
										{
											"test": "is_owner",
											"subject": "other",
											"value": false
										},
										{
											"test": "has_tag",
											"subject": "other",
											"value": "billey:cant_hit_other_pet"
										}
									]
								},
								"event": "say_other_hit_pet_info"
							},
							"cause": "all",
							"deals_damage": false
						},
						{
							"cause": "fall",
							"deals_damage": false
						}
					]
				},
				"minecraft:movement": {
					"value": 0.1
				},
				"minecraft:can_fly": {},
				"minecraft:navigation.float": {
					"can_path_over_water": true
				},
				"minecraft:behavior.float_wander": {
					"priority": 2,
					"must_reach": true //no idea what this means
				},
				"minecraft:movement.fly": {},
				"minecraft:physics": {}
			},
			"mission_phase1": {
				"minecraft:timer": {
					"time": 5,
					"looping": true,
					"time_down_event": {
						"event": "to_mission_phase2",
						"target": "self"
					}
				}
			},
			"mission_phase2": {
				"minecraft:scale": {
					"value": 0
				},
				"minecraft:timer": {
					"time": 5,
					"looping": true,
					"time_down_event": {
						"event": "to_mission_phase3",
						"target": "self"
					}
				}
			},
			"mission_phase3": {
				"minecraft:timer": {
					"time": 5,
					"looping": true,
					"time_down_event": {
						"event": "finish_mission",
						"target": "self"
					}
				}
			},
			"sittable": {
				"minecraft:sittable": {}
			},
			"ride_player": {
				"minecraft:type_family": {
					"family": [
						"pigeon",
						"dinosaur",
						"mob",
						"strider",
						"parrot_tame"
					]
				}
			},
			"not_ride_player": {
				"minecraft:type_family": {
					"family": [
						"pigeon",
						"dinosaur",
						"mob",
						"strider"
					]
				}
			},
			"tamed_component": {
				"minecraft:is_tamed": {}
			},
			"untamed": {
				"minecraft:tameable": {
					"probability": 1.0,
					"tame_event": {
						"event": "get_tamed_after_untame"
					},
					"tame_items": [
						"billey:power_banana",
						"beetroot_seeds",
						"wheat_seeds",
						"bread",
						"carrot",
						"golden_carrot",
						"pumpkin_seeds",
						"melon_seeds"
					]
				}
			},
			"electrocuted": {
				"minecraft:loot": {
					"table": "loot_tables/entities/billey_electrocuted.json"
				}
			},
			"following": {
				"minecraft:behavior.follow_owner": {
					"priority": 4,
					"speed_multiplier": 1,
					"start_distance": 7,
					"stop_distance": 5
				}
			},
			"hat": {
				"minecraft:is_charged": {}
			},
			"backpack": {
				"minecraft:inventory": {
					"additional_slots_per_strength": 1,
					"can_be_siphoned_from": true,
					"container_type": "horse",
					"inventory_size": 1,
					"private": false,
					"restrict_to_owner": true
				}
			},
			"kromatik": {
				"minecraft:is_illager_captain": {},
				"minecraft:color": {
					"value": 0
				}
			},
			"scale_component": {
				"minecraft:scale": {
					"value": 0.5
				}
			},
			"minecraft:pigeon_baby": {
				"minecraft:is_baby": {},
				"minecraft:scale": {
					"value": 0.5
				},
				"minecraft:behavior.follow_parent": {
					"priority": 5,
					"speed_multiplier": 1.1
				}
			},
			"gray": { //gray
				"minecraft:variant": {
					"value": 1
				},
				"minecraft:rideable": {
					"seat_count": 1,
					"family_types": [
						"monster"
					],
					"seats": {
						"position": [
							0,
							0.4,
							0
						]
					}
				}
			},
			"mixed": { //mixed
				"minecraft:variant": {
					"value": 2
				},
				"minecraft:rideable": {
					"seat_count": 1,
					"family_types": [
						"skeleton"
					],
					"seats": {
						"position": [
							0,
							0.4,
							0
						]
					}
				}
			},
			"blend": { //blend
				"minecraft:variant": {
					"value": 3
				},
				"minecraft:rideable": {
					"seat_count": 1,
					"family_types": [
						"skeleton"
					],
					"seats": {
						"position": [
							0,
							0.4,
							0
						]
					}
				}
			},
			"black": { //black
				"minecraft:variant": {
					"value": 4
				},
				"minecraft:rideable": {
					"seat_count": 1,
					"family_types": [
						"skeleton"
					],
					"seats": {
						"position": [
							0,
							0.4,
							0
						]
					}
				}
			},
			"agelol": {
				"minecraft:ageable": {
					"duration": 4800,
					"feed_items": [
						"bread",
						"wheat_seeds",
						"melon_seeds",
						"pumpkin_seeds",
						"beetroot_seeds",
						"carrot",
						"golden_carrot"
					],
					"grow_up": {
						"event": "minecraft:ageable_grow_up",
						"target": "self"
					}
				}
			},
			"minecraft:pigeon_adult": {
				"minecraft:experience_reward": {
					"on_bred": "Math.Random(1,7)",
					"on_death": "q.last_hit_by_player ? Math.Random(1,3) : 0"
				},
				"minecraft:loot": {
					"table": "loot_tables/entities/chicken.json"
				},
				"minecraft:breedable": {
					"require_tame": true,
					"require_full_health": true,
					"allow_sitting": true,
					"breeds_with": [
						{
							"mateType": "billey:pigeon",
							"babyType": "billey:pigeon",
							"breed_event": {
								"event": "minecraft:entity_born",
								"target": "baby"
							}
						},
						{
							"mateType": "billey:goose",
							"babyType": "billey:goose",
							"breed_event": {
								"event": "minecraft:entity_born_blue",
								"target": "baby"
							}
						},
						{
							"mate_type": "billey:orange_penguin",
							"baby_type": "billey:orange_penguin",
							"breed_event": {
								"event": "minecraft:entity_born_silver",
								"target": "baby"
							}
						},
						{
							"mateType": "billey:penguin",
							"babyType": "billey:kiwi",
							"breed_event": {
								"event": "minecraft:entity_born",
								"target": "baby"
							}
						},
						{
							"mateType": "billey:duck",
							"babyType": "billey:pigeon",
							"breed_event": {
								"event": "minecraft:entity_born_white",
								"target": "baby"
							}
						},
						{
							"mate_type": "billey:banana_duck",
							"baby_type": "billey:banana_duck",
							"breed_event": {
								"event": "minecraft:entity_born_white",
								"target": "baby"
							}
						}
					],
					"breed_items": [
						"billey:poultry_orange",
						"bread",
						"wheat_seeds",
						"melon_seeds",
						"pumpkin_seeds",
						"beetroot_seeds",
						"carrot",
						"golden_carrot"
					]
				},
				"minecraft:behavior.breed": {
					"priority": 3,
					"speed_multiplier": 1.0
				},
				"minecraft:rideable": {
					"seat_count": 1,
					"family_types": [
						"zombie"
					],
					"seats": {
						"position": [
							0.0,
							0.4,
							0.0
						]
					}
				}
			},
			"minecraft:pigeon_leashed": {
				"minecraft:behavior.move_towards_restriction": {
					"priority": 2,
					"speed_multiplier": 1.0
				}
			},
			"flying": {
				"minecraft:timer": {
					"time": [
						59.0,
						59.0
					],
					"looping": true,
					"time_down_event": {
						"event": "exdee",
						"target": "self"
					}
				},
				"minecraft:navigation.float": {
					"can_path_over_water": true
				},
				"minecraft:movement.fly": {},
				"minecraft:behavior.float": {
					"priority": 0
				},
				"minecraft:behavior.float_wander": {
					"priority": 2,
					"must_reach": true
				},
				"minecraft:can_fly": {},
				"minecraft:damage_sensor": {
					"triggers": [
						{
							"on_damage": {
								"filters": {
									"all_of": [
										{
											"test": "is_owner",
											"subject": "other",
											"value": true
										},
										{
											"test": "has_tag",
											"subject": "other",
											"operator": "not",
											"value": "billey:can_hit_own_pet"
										}
									]
								},
								"event": "say_owner_hit_pet_info"
							},
							"cause": "all",
							"deals_damage": false
						},
						{
							"on_damage": {
								"filters": {
									"all_of": [
										{
											"test": "has_component",
											"subject": "self",
											"value": "minecraft:is_tamed"
										},
										{
											"test": "is_owner",
											"subject": "other",
											"value": false
										},
										{
											"test": "has_tag",
											"subject": "other",
											"value": "billey:cant_hit_other_pet"
										}
									]
								},
								"event": "say_other_hit_pet_info"
							},
							"cause": "all",
							"deals_damage": false
						},
						{
							"cause": "all",
							"deals_damage": true,
							"on_damage": {
								"event": "exdee",
								"target": "self"
							}
						},
						{
							"cause": "fall",
							"deals_damage": false
						}
					]
				},
				"minecraft:movement": {
					"value": 0.09
				}
			},
			"eksdee": {
				"minecraft:timer": {
					"time": [
						1.0,
						1.0
					],
					"looping": true,
					"time_down_event": {
						"event": "pizzatime",
						"target": "self"
					}
				},
				"minecraft:navigation.float": {
					"can_path_over_water": true
				},
				"minecraft:navigation.fly": {
					"can_path_over_water": false
				},
				"minecraft:movement.fly": {},
				"minecraft:behavior.float": {
					"priority": 0
				},
				"minecraft:behavior.float_wander": {
					"priority": 2,
					"must_reach": true
				},
				"minecraft:can_fly": {},
				"minecraft:movement": {
					"value": 0.15
				}
			},
			"anim_1": {
				"minecraft:timer": {
					"time": [
						0.75,
						1.5
					],
					"looping": true,
					"time_down_event": {
						"event": "r_anim_1",
						"target": "self"
					}
				},
				"minecraft:damage_sensor": {
					"triggers": [
						{
							"on_damage": {
								"filters": {
									"all_of": [
										{
											"test": "is_owner",
											"subject": "other",
											"value": true
										},
										{
											"test": "has_tag",
											"subject": "other",
											"operator": "not",
											"value": "billey:can_hit_own_pet"
										}
									]
								},
								"event": "say_owner_hit_pet_info"
							},
							"cause": "all",
							"deals_damage": false
						},
						{
							"on_damage": {
								"filters": {
									"all_of": [
										{
											"test": "has_component",
											"subject": "self",
											"value": "minecraft:is_tamed"
										},
										{
											"test": "is_owner",
											"subject": "other",
											"value": false
										},
										{
											"test": "has_tag",
											"subject": "other",
											"value": "billey:cant_hit_other_pet"
										}
									]
								},
								"event": "say_other_hit_pet_info"
							},
							"cause": "all",
							"deals_damage": false
						},
						{
							"on_damage": {
								"event": "exdee",
								"target": "self"
							},
							"deals_damage": true
						},
						{
							"cause": "fall",
							"deals_damage": false
						}
					]
				}
			},
			"walking": {
				"minecraft:movement.basic": {},
				"minecraft:navigation.walk": {
					"can_float": true,
					"avoid_water": true,
					"avoid_damage_blocks": true
				},
				"minecraft:jump.static": {},
				"minecraft:can_climb": {},
				"minecraft:movement": {
					"value": 0.2
				},
				"minecraft:timer": {
					"time": [
						5.0,
						100.0
					],
					"looping": true,
					"time_down_event": {
						"event": "lol",
						"target": "self"
					}
				},
				"minecraft:damage_sensor": {
					"triggers": [
						{
							"on_damage": {
								"filters": {
									"all_of": [
										{
											"test": "is_owner",
											"subject": "other",
											"value": true
										},
										{
											"test": "has_tag",
											"subject": "other",
											"operator": "not",
											"value": "billey:can_hit_own_pet"
										}
									]
								},
								"event": "say_owner_hit_pet_info"
							},
							"cause": "all",
							"deals_damage": false
						},
						{
							"on_damage": {
								"filters": {
									"all_of": [
										{
											"test": "has_component",
											"subject": "self",
											"value": "minecraft:is_tamed"
										},
										{
											"test": "is_owner",
											"subject": "other",
											"value": false
										},
										{
											"test": "has_tag",
											"subject": "other",
											"value": "billey:cant_hit_other_pet"
										}
									]
								},
								"event": "say_other_hit_pet_info"
							},
							"cause": "all",
							"deals_damage": false
						},
						{
							"on_damage": {
								"event": "exdee",
								"target": "self"
							},
							"deals_damage": true
						},
						{
							"cause": "fall",
							"deals_damage": false
						}
					]
				},
				"minecraft:mark_variant": {
					"value": 0
				},
				"minecraft:behavior.avoid_mob_type": {
					"priority": 5,
					"entity_types": [
						{
							"filters": {
								"test": "is_family",
								"subject": "other",
								"value": "player"
							},
							"max_dist": 5,
							"walk_speed_multiplier": 1.1,
							"sprint_speed_multiplier": 1.3
						}
					]
				},
				"minecraft:behavior.float": {
					"priority": 0
				}
			},
			"tamed_walking": {
				"minecraft:movement": {
					"value": 0.2
				},
				"minecraft:behavior.random_stroll": {
					"priority": 6,
					"speed_multiplier": 1.0
				},
				"minecraft:physics": {},
				"minecraft:jump.static": {},
				"minecraft:movement.basic": {},
				"minecraft:navigation.walk": {
					"can_float": true,
					"avoid_water": true,
					"avoid_damage_blocks": true
				}
			},
			"tamed_flying": {
				"minecraft:can_fly": {},
				"minecraft:movement": {
					"value": 0.4
				},
				"minecraft:jump.static": {},
				"minecraft:physics": {},
				"minecraft:navigation.fly": {
					"can_path_over_water": true,
					"can_path_from_air": true
				},
				"minecraft:movement.generic": {}
			},
			"tamed": {
				"minecraft:timer": {
					"time": [
						5.0,
						5.0
					],
					"looping": true,
					"time_down_event": {
						"event": "switch_movement",
						"target": "self"
					}
				},
				"minecraft:persistent": {},
				"minecraft:movement.basic": {},
				"minecraft:navigation.walk": {
					"can_float": true,
					"avoid_water": true,
					"avoid_damage_blocks": true
				},
				"minecraft:damage_sensor": {
					"triggers": [
						{
							"on_damage": {
								"filters": {
									"all_of": [
										{
											"test": "is_owner",
											"subject": "other",
											"value": true
										},
										{
											"test": "has_tag",
											"subject": "other",
											"operator": "not",
											"value": "billey:can_hit_own_pet"
										}
									]
								},
								"event": "say_owner_hit_pet_info"
							},
							"cause": "all",
							"deals_damage": false
						},
						{
							"on_damage": {
								"filters": {
									"all_of": [
										{
											"test": "has_component",
											"subject": "self",
											"value": "minecraft:is_tamed"
										},
										{
											"test": "is_owner",
											"subject": "other",
											"value": false
										},
										{
											"test": "has_tag",
											"subject": "other",
											"value": "billey:cant_hit_other_pet"
										}
									]
								},
								"event": "say_other_hit_pet_info"
							},
							"cause": "all",
							"deals_damage": false
						},
						{
							"cause": "fall",
							"deals_damage": false
						},
						{
							"cause": "all",
							"deals_damage": false,
							"on_damage": {
								"target": "self",
								"filters": {
									"test": "is_riding"
								}
							}
						},
                        {
                            "cause": "all",
                            "on_damage_sound_event": "armor.equip_generic",
                            "deals_damage": false,
                            "on_damage": {
                                "event": "nohat",
                                "target": "self",
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_damage",
                                            "operator": "not",
                                            "value": "magic"
                                        },
                                        {
                                            "test": "has_component",
                                            "value": "minecraft:is_charged"
                                        }
                                    ]
                                }
                            }
                        }
					]
				},
				"minecraft:interact": {
					"interactions": [
						{
							"play_sounds": "plop",
							"swing": true,
							"interact_text": "action.interact.get_info",
							"on_interact": {
								"filters": {
									"any_of": [
										{
											"test": "has_equipment",
											"subject": "other",
											"domain": "hand",
											"value": "feather"
										},
										{
                                        "test": "has_equipment",
                                        "subject": "other",
                                        "domain": "hand",
                                        "value": "book"
                                    },
                                    {
                                        "test": "has_equipment",
                                        "subject": "other",
                                        "domain": "hand",
                                        "value": "billey:info_book"
                                    }
									]
								},
								"event": "send_info",
								"target": "self"
							}
						},
						{
							"play_sounds": "plop",
							"swing": true,
							"interact_text": "action.interact.untame",
							"on_interact": {
								"filters": {
									"all_of": [
										{
											"test": "has_equipment",
											"subject": "other",
											"domain": "hand",
											"value": "billey:untaming_stick"
										},
										{
											"test": "is_owner",
											"subject": "other",
											"value": true
										}
									]
								},
								"event": "untame",
								"target": "self"
							}
						},
						{
							"interact_text": "action.interact.pet",
							"on_interact": {
								"filters": {
									"all_of": [
										{
											"test": "has_equipment",
											"subject": "other",
											"domain": "hand",
											"operator": "!=",
											"value": "billey:swordfish"
										},
										{
											"test": "has_equipment",
											"subject": "other",
											"domain": "hand",
											"operator": "!=",
											"value": "billey:golden_swordfish"
										},
										{
											"test": "is_sneaking",
											"subject": "other",
											"value": true
										}
									]
								},
								"event": "bepetted",
								"target": "self"
							}
						},
						{
							"use_item": true,
							"play_sounds": "armor.equip_generic",
							"interact_text": "action.interact.equip",
							"on_interact": {
								"filters": {
									"all_of": [
										{
											"test": "has_equipment",
											"subject": "other",
											"domain": "hand",
											"value": "billey:pet_hat"
										},
										{
											"test": "has_component",
											"subject": "self",
											"operator": "not",
											"value": "minecraft:is_charged"
										},
										{
											"test": "is_owner",
											"subject": "other",
											"value": true
										}
									]
								},
								"event": "wearhat",
								"target": "self"
							}
						},
						{
							"use_item": false,
							"play_sounds": "armor.equip_generic",
							"spawn_items": {
								"table": "loot_tables/entities/billeyhat.json"
							},
							"interact_text": "action.interact.equip",
							"on_interact": {
								"filters": {
									"all_of": [
										{
											"test": "has_equipment",
											"subject": "other",
											"domain": "hand",
											"value": "billey:pet_hat"
										},
										{
											"test": "has_component",
											"subject": "self",
											"value": "minecraft:is_charged"
										},
										{
											"test": "is_owner",
											"subject": "other",
											"value": true
										}
									]
								},
								"event": "nohat",
								"target": "self"
							}
						},
						{
							"use_item": true,
							"play_sounds": "armor.equip_generic",
							"interact_text": "action.interact.equip",
							"on_interact": {
								"filters": {
									"all_of": [
										{
											"test": "has_equipment",
											"subject": "other",
											"domain": "hand",
											"value": "billey:pigeon_backpack"
										},
										{
											"test": "bool_property",
											"subject": "self",
											"domain": "billey:has_backpack",
											"value": false
										},
										{
											"test": "has_component",
											"subject": "self",
											"operator": "not",
											"value": "minecraft:is_baby"
										},
										{
											"test": "is_owner",
											"subject": "other",
											"value": true
										}
									]
								},
								"event": "add_backpack",
								"target": "self"
							}
						},
						{
							"use_item": false,
							"play_sounds": "armor.equip_generic",
							"spawn_items": {
								"table": "loot_tables/entities/billeypigeonbackpack.json"
							},
							"interact_text": "action.interact.equip",
							"on_interact": {
								"filters": {
									"all_of": [
										{
											"test": "has_equipment",
											"subject": "other",
											"domain": "hand",
											"value": "billey:pigeon_backpack"
										},
										{
											"test": "bool_property",
											"subject": "self",
											"domain": "billey:has_backpack",
											"value": true
										},
										{
											"test": "is_owner",
											"subject": "other",
											"value": true
										}
									]
								},
								"event": "remove_backpack",
								"target": "self"
							}
						},
						{
							"use_item": true,
							"play_sounds": "eat",
							"interact_text": "action.interact.feed",
							"on_interact": {
								"filters": {
									"all_of": [
										{
											"test": "has_equipment",
											"subject": "other",
											"domain": "hand",
											"value": "billey:sand_banana"
										},
										{
											"test": "is_family",
											"subject": "other",
											"value": "player"
										}
									]
								},
								"event": "beenfedabanana",
								"target": "self"
							}
						},
						{
							"use_item": true,
							"play_sounds": "milk",
							"interact_text": "action.interact.use",
							"transform_to_item": "glass_bottle",
							"on_interact": {
								"filters": {
									"all_of": [
										{
											"test": "has_equipment",
											"subject": "other",
											"domain": "hand",
											"value": "billey:colorful_bottle"
										},
										{
											"test": "is_owner",
											"subject": "other",
											"value": true
										}
									]
								},
								"event": "kroma",
								"target": "self"
							}
						},
						{
							"use_item": true,
							"play_sounds": "milk",
							"interact_text": "action.interact.use",
							"transform_to_item": "glass_bottle",
							"on_interact": {
								"filters": {
									"all_of": [
										{
											"test": "has_equipment",
											"subject": "other",
											"domain": "hand",
											"value": "billey:colorless_bottle"
										},
										{
											"test": "is_owner",
											"subject": "other",
											"value": true
										}
									]
								},
								"event": "nokroma",
								"target": "self"
							}
						},
						{
							"play_sounds": "plop",
							"swing": true,
							"interact_text": "action.interact.wander",
							"on_interact": {
								"filters": {
									"all_of": [
										{
											"test": "has_equipment",
											"subject": "other",
											"domain": "hand",
											"value": "stick"
										},
										{
											"test": "has_component",
											"subject": "self",
											"value": "minecraft:behavior.follow_owner"
										},
										{
											"test": "is_owner",
											"subject": "other",
											"value": true
										}
									]
								},
								"event": "eventwander",
								"target": "self"
							}
						},
						{
							"play_sounds": "plop",
							"swing": true,
							"interact_text": "action.interact.follow",
							"on_interact": {
								"filters": {
									"all_of": [
										{
											"test": "has_equipment",
											"subject": "other",
											"domain": "hand",
											"value": "stick"
										},
										{
											"test": "has_component",
											"subject": "self",
											"operator": "not",
											"value": "minecraft:behavior.follow_owner"
										},
										{
											"test": "is_owner",
											"subject": "other",
											"value": true
										}
									]
								},
								"event": "eventfollow",
								"target": "self"
							}
						}
					]
				},
				"minecraft:behavior.avoid_mob_type": {
					"priority": 0,
					"max_flee": 16,
					"entity_types": [
						{
							"filters": {
								"test": "has_component",
								"subject": "other",
								"value": "minecraft:explode"
							},
							"max_dist": 12,
							"walk_speed_multiplier": 1.4,
							"sprint_speed_multiplier": 1.4
						}
					]
				},
				"minecraft:jump.static": {},
				"minecraft:can_climb": {},
				"minecraft:type_family": {
					"family": [
						"pigeon",
						"dinosaur",
						"mob",
						"strider"
					]
				},
				"minecraft:is_tamed": {},
                "minecraft:tameable": {}, //for the script to be able to get the mob's owner
				"minecraft:movement": {
					"value": 0.2
				},
				"minecraft:sittable": {},
				"minecraft:behavior.follow_owner": {
					"priority": 4,
					"speed_multiplier": 1.2,
					"start_distance": 7,
					"stop_distance": 5
				},
				"minecraft:spawn_entity": {
					"entities": {
						"min_wait_time": 300,
						"max_wait_time": 900,
						"spawn_sound": "plop",
						"spawn_entity": "billey:poopstain",
						"spawn_event": "minecraft:entity_spawned"
					}
				},
				"minecraft:behavior.leap_at_target": {
					"priority": 3,
					"target_dist": 0.3
				},
				"minecraft:behavior.mount_pathing": {
					"priority": 1,
					"speed_multiplier": 1.25,
					"target_dist": 0,
					"track_target": true
				},
				"minecraft:behavior.stay_while_sitting": {
					"priority": 3
				},
				"minecraft:behavior.float": {
					"priority": 0
				}
			},
			"wild": {
				"minecraft:despawn": {
					"despawn_from_distance": {}
				},
				"minecraft:tameable": {
					"probability": 0.33,
					"tame_items": [
						"billey:power_banana",
						"bread",
						"wheat_seeds",
						"melon_seeds",
						"pumpkin_seeds",
						"beetroot_seeds",
						"carrot",
						"golden_carrot"
					],
					"tame_event": {
						"event": "yay",
						"target": "self"
					}
				},
				"minecraft:spawn_entity": {
					"entities": {
						"min_wait_time": 600,
						"max_wait_time": 1200,
						"spawn_sound": "plop",
						"spawn_entity": "billey:poopstain",
						"spawn_event": "minecraft:entity_spawned"
					}
				}
			},
			"white": {
				"minecraft:is_sheared": {}
			},
			"timer": {
				"minecraft:timer": {
					"time": [
						7.5,
						40
					],
					"looping": true,
					"time_down_event": {
						"event": "do_event",
						"target": "self"
					}
				},
				"minecraft:movement": {
					"value": 0.2
				}
			}
		},
		"components": {
			"minecraft:strength": {
				"max": 0,
				"value": 0
			},
			"minecraft:is_hidden_when_invisible": {},
			"minecraft:type_family": {
				"family": [
					"pigeon",
					"mob",
					"dinosaur"
				]
			},
			"minecraft:breathable": {
				"total_supply": 15,
				"suffocate_time": 0
			},
			"minecraft:color": {
				"value": 12
			},
			"minecraft:is_dyeable": {
				"interact_text": "action.interact.dye"
			},
			"minecraft:behavior.nap": {
				"priority": 0,
				"cooldown_min": 20.0,
				"cooldown_max": 45.0,
				"mob_detect_dist": 3,
				"mob_detect_height": 3,
				"can_nap_filters": {
					"all_of": [
						{
							"test": "in_water_or_rain",
							"subject": "self",
							"operator": "==",
							"value": false
						},
						{
							"test": "light_level",
							"operator": "<",
							"value": 10
						},
						{
							"test": "is_daytime",
							"operator": "==",
							"value": false
						},
						{
							"any_of": [
								{
									"test": "has_tag",
									"subject": "self",
									"value": "cantsleep",
									"operator": "not"
								},
								{
									"test": "has_component",
									"subject": "self",
									"value": "minecraft:behavior.follow_owner",
									"operator": "not"
								}
							]
						},
						{
							"test": "distance_to_nearest_player",
							"operator": ">",
							"value": 2
						},
						{
							"test": "on_ground",
							"subject": "self",
							"operator": "==",
							"value": true
						}
					]
				},
				"wake_mob_exceptions": {
					"test": "is_sneaking",
					"subject": "other",
					"operator": "==",
					"value": true
				}
			},
			"minecraft:collision_box": {
				"width": 0.4,
				"height": 0.65
			},
			"minecraft:nameable": {},
			"minecraft:health": {
				"value": 6,
				"max": 6
			},
			"minecraft:leashable": {
				"soft_distance": 4.0,
				"hard_distance": 6.0,
				"max_distance": 10.0,
				"on_leash": {
					"event": "minecraft:on_leash",
					"target": "self"
				},
				"on_unleash": {
					"event": "minecraft:on_unleash",
					"target": "self"
				}
			},
			"minecraft:balloonable": {
				"mass": 0.6
			},
			"minecraft:behavior.float": {
				"priority": 0
			},
			"minecraft:behavior.panic": {
				"priority": 1,
				"speed_multiplier": 1.5
			},
			"minecraft:behavior.mount_pathing": {
				"priority": 2,
				"speed_multiplier": 1.5,
				"target_dist": 0.0,
				"track_target": true
			},
			"minecraft:behavior.tempt": {
				"priority": 4,
				"speed_multiplier": 1.0,
				"can_get_scared": true,
				"items": [
					"bread",
					"wheat_seeds",
					"melon_seeds",
					"pumpkin_seeds",
					"beetroot_seeds",
					"carrot",
					"golden_carrot",
					"billey:sand_banana"
				]
			},
			"minecraft:behavior.beg": {
				"priority": 9,
				"look_distance": 3,
				"look_time": 0,
				"items": [
					"billey:sand_banana",
					"bread",
					"wheat_seeds",
					"melon_seeds",
					"pumpkin_seeds",
					"beetroot_seeds",
					"carrot",
					"golden_carrot"
				]
			},
			"minecraft:behavior.random_stroll": {
				"priority": 6,
				"speed_multiplier": 1.0
			},
			"minecraft:physics": {},
			"minecraft:behavior.look_at_player": {
				"probability": 0.01,
				"priority": 7,
				"look_distance": 6.0
			},
			"minecraft:healable": {
				"items": [
					{
						"item": "billey:poultry_orange",
						"heal_amount": 7
					},
					{
						"item": "billey:cooked_snail",
						"heal_amount": 4,
						"effects": [
							{
								"name": "strength",
								"chance": 1.0,
								"duration": 15,
								"amplifier": 1
							}
						]
					},
					{
						"item": "billey:cooked_snail_s",
						"heal_amount": 4,
						"effects": [
							{
								"name": "speed",
								"chance": 1.0,
								"duration": 15,
								"amplifier": 1
							}
						]
					},
					{
						"item": "billey:cooked_snail_w",
						"heal_amount": 4,
						"effects": [
							{
								"name": "regeneration",
								"chance": 1.0,
								"duration": 15,
								"amplifier": 1
							}
						]
					},
					{
						"item": "bread",
						"heal_amount": 1
					},
					{
						"item": "wheat_seeds",
						"heal_amount": 1
					},
					{
						"item": "melon_seeds",
						"heal_amount": 2
					},
					{
						"item": "pumpkin_seeds",
						"heal_amount": 2
					},
					{
						"item": "carrot",
						"heal_amount": 3
					},
					{
						"item": "golden_carrot",
						"heal_amount": 6
					},
					{
						"item": "beetroot_seeds",
						"heal_amount": 2
					}
				]
			},
			"minecraft:behavior.random_look_around": {
				"priority": 8
			},
			"minecraft:pushable": {
				"is_pushable": true,
				"is_pushable_by_piston": true
			}
		},
		"events": {
            "set_follow_state": {
                "sequence": [
                    {
                        "filters": {
                            "test": "has_component",
                            "subject": "self",
                            "value": "minecraft:behavior.follow_owner"
                        },
                        "set_property": {
                            "billey:follow_owner_state": "following"
                        }
                    },
                    {
                        "filters": {
                            "test": "has_component",
                            "subject": "self",
                            "operator": "not",
                            "value": "minecraft:behavior.follow_owner"
                        },
                        "set_property": {
                            "billey:follow_owner_state": "wandering"
                        }
                    }
                ]
            },
            "set_sitting_property_false": {
                "set_property": {
                    "billey:is_sitting": false
                }
            },
            "set_sitting_property_true": {
                "set_property": {
                    "billey:is_sitting": true
                }
            },
            "say_owner_hit_pet_info": {
                "queue_command": {
                    "target": "other",
                    "command": [
                        "titleraw @s actionbar {\"rawtext\":[{\"translate\":\"chat.billey.owner_hit_pet\"}]}",
                        "tellraw @s[tag=!billey:has_hurt_own_pet] {\"rawtext\":[{\"translate\":\"chat.billeyinfo.owner_hit_pet\"}]}",
                        "tag @s add billey:has_hurt_own_pet"
                    ]
                }
            },
            "say_other_hit_pet_info": {
                "queue_command": {
                    "target": "other",
                    "command": "titleraw @s actionbar {\"rawtext\":[{\"translate\":\"chat.billey.other_hit_pet\"}]}"
                }
            },
			"start_mission": {
				"sequence": [
					{
						"remove": {
							"component_groups": [
								"tamed",
								"tamed_walking",
								"tamed_flying"
							]
						},
						"add": {
							"component_groups": [
								"in_mission",
								"mission_phase1"
							]
						}
					}
				]
			},
			"to_mission_phase2": {
				"add": {
					"component_groups": [
						"mission_phase2"
					]
				},
				"remove": {
					"component_groups": [
						"mission_phase1"
					]
				}
			},
			"to_mission_phase3": {
				"sequence": [
					{
						"add": {
							"component_groups": [
								"mission_phase3"
							]
						},
						"remove": {
							"component_groups": [
								"mission_phase2"
							]
						}
					},
					{
						"queue_command": {
							"command": [
								"scriptevent billey:pigeon_mission phase3"
							]
						}
					}
				]
			},
			"finish_mission": {
				"sequence": [
					{
						"remove": {
							"component_groups": [
								"in_mission",
								"mission_phase1",
								"mission_phase2",
								"mission_phase3"
							]
						},
						"add": {
							"component_groups": [
								"tamed",
								"tamed_walking"
							]
						}
					},
					{
						"queue_command": {
							"command": "scriptevent billey:pigeon_mission finish"
						}
					}
				]
			},
			"abort_mission": {
				"sequence": [
					{
						"remove": {
							"component_groups": [
								"in_mission",
								"mission_phase1",
								"mission_phase2",
								"mission_phase3"
							]
						},
						"add": {
							"component_groups": [
								"tamed",
								"tamed_walking"
							]
						}
					},
					{
						"queue_command": {
							"command": "scriptevent billey:pigeon_mission abort"
						}
					}
				]
			},
			"add_backpack": {
				"sequence": [
					{
						"add": {
							"component_groups": [
								"backpack"
							]
						}
					},
					{
						"set_property": {
							"billey:has_backpack": true
						}
					},
					{
						"queue_command": {
							"target": "other",
							"command": "tag @s add pigeonowner"
						}
					},
					{
						"queue_command": {
							"command": "scriptevent billey:set_owner_name @p[tag=pigeonowner]"
						}
					},
					{
						"queue_command": {
							"target": "other",
							"command": "tag @s remove pigeonowner"
						}
					}
				]
			},
			"remove_backpack": {
				"sequence": [
					{
						"remove": {
							"component_groups": [
								"backpack"
							]
						}
					},
					{
						"set_property": {
							"billey:has_backpack": false
						}
					}
				]
			},
			"add_sittable": {
				"add": {
					"component_groups": [
						"sittable"
					]
				}
			},
			"remove_sittable": {
				"remove": {
					"component_groups": [
						"sittable"
					]
				}
			},
			"send_info": {
				"queue_command": {
					"target": "other",
					"command": [
						"tellraw @s {\"rawtext\":[{\"text\":\"\\n\"}]}",
						"tellraw @s {\"rawtext\":[{\"translate\":\"chat.billeyinfo.pigeon\",\"with\":[\"\\n\"]}]}",
						"tellraw @s {\"rawtext\":[{\"text\":\"\\n\"}]}",
						"tellraw @s {\"rawtext\":[{\"translate\":\"chat.billeyinfo.tip3\"}]}",
						"tellraw @s {\"rawtext\":[{\"text\":\"\\n\"}]}"
					]
				}
			},
			"switch_movement": {
				"sequence": [
					{ //to walk
						"filters": {
							"any_of": [
								{
									"test": "has_component",
									"subject": "self",
									"value": "minecraft:can_fly"
								},
								{
									"test": "on_ground",
									"subject": "self",
									"value": true
								},
								{
									"test": "has_tag",
									"subject": "self",
									"value": "in_love"
								}
							]
						},
						"remove": {
							"component_groups": [
								"tamed_flying"
							]
						},
						"add": {
							"component_groups": [
								"tamed_walking"
							]
						}
					},
					{ //to fly
						"randomize": [
							{
								"weight": 1,
								"filters": {
									"all_of": [
										{
											"test": "has_component",
											"subject": "self",
											"operator": "not",
											"value": "minecraft:can_fly"
										},
										{
											"test": "has_tag",
											"subject": "self",
											"operator": "not",
											"value": "in_love"
										}
									]
								},
								"add": {
									"component_groups": [
										"tamed_flying"
									]
								},
								"remove": {
									"component_groups": [
										"tamed_walking"
									]
								}
							},
							{
								"weight": 9,
								"filters": {
									"all_of": [
										{
											"test": "on_ground",
											"subject": "self",
											"value": false
										},
										{
											"test": "has_tag",
											"subject": "self",
											"operator": "not",
											"value": "in_love"
										}
									]
								},
								"add": {
									"component_groups": [
										"tamed_flying"
									]
								},
								"remove": {
									"component_groups": [
										"tamed_walking"
									]
								}
							}
						]
					}
				]
			},
			"get_electrocuted": {
				"add": {
					"component_groups": [
						"electrocuted"
					]
				}
			},
            "eventwander": {
                "sequence": [
                    {
                        "remove": {
                            "component_groups": [
                                "following"
                            ]
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "tellraw @a[r=5] {\"rawtext\": [{\"translate\": \"billmobs.wander\"},{\"selector\": \"@s\"}, {\"translate\": \"billmobs.wander2\"}] }"
                            ]
                        }
                    },
                    {
                        "set_property": {
                            "billey:follow_owner_state": "wandering"
                        }
                    }
                ]
            },
            "eventfollow": {
                "sequence": [
                    {
                        "add": {
                            "component_groups": [
                                "following"
                            ]
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "tellraw @a[r=5] {\"rawtext\": [{\"translate\": \"billmobs.follow\"},{\"selector\": \"@s\"}, {\"translate\": \"billmobs.follow2\"}] }"
                            ]
                        }
                    },
                    {
                        "set_property": {
                            "billey:follow_owner_state": "following"
                        }
                    }
                ]
            },
			"beenfedabanana": {
				"sequence": [
					{
						"queue_command": {
							"command": [
								"particle billey:eatbanana ~ ~.5 ~"
							]
						}
					},
					{
						"randomize": [
							{
								"weight": 8,
								"queue_command": {
									"command": [
										"effect @s regeneration 7 1"
									]
								}
							},
							{
								"weight": 4,
								"queue_command": {
									"command": [
										"effect @s regeneration 10"
									]
								}
							},
							{
								"weight": 4,
								"queue_command": {
									"command": [
										"effect @s speed 10"
									]
								}
							},
							{
								"weight": 4,
								"queue_command": {
									"command": [
										"effect @s absorption 10"
									]
								}
							},
							{
								"weight": 4,
								"queue_command": {
									"command": [
										"effect @s resistance 10"
									]
								}
							},
							{
								"weight": 4,
								"queue_command": {
									"command": [
										"effect @s strength 10"
									]
								}
							},
							{
								"weight": 4,
								"queue_command": {
									"command": [
										"effect @s water_breathing 10"
									]
								}
							},
							{
								"weight": 4,
								"queue_command": {
									"command": [
										"effect @s fire_resistance 10"
									]
								}
							},
							{
								"weight": 1,
								"sequence": [
									{
										"queue_command": {
											"command": [
												"effect @s levitation 1 0 true"
											]
										}
									},
									{
										"queue_command": {
											"target": "other",
											"command": [
												"effect @s levitation 1 0 true"
											]
										}
									}
								]
							}
						]
					}
				]
			},
			"rode_player": {
				"add": {
					"component_groups": [
						"not_ride_player"
					]
				},
				"remove": {
					"component_groups": [
						"ride_player"
					]
				}
			},
			"bepetted": {
				"sequence": [
					{
						"filters": {
							"test": "has_component",
							"value": "minecraft:is_tamed",
							"target": "self"
						},
						"add": {
							"component_groups": [
								"ride_player"
							]
						},
						"remove": {
							"component_groups": [
								"not_ride_player"
							]
						}
					},
					{
						"randomize": [
							{
								"weight": 13
							},
							{
								"weight": 1
							},
							{
								"weight": 1,
								"queue_command": {
									"command": [
										"playanimation @s animation.billcat.petted"
									]
								}
							}
						]
					},
					{
						"queue_command": {
							"target": "other",
							"command": [
								"playanimation @s animation.billeyplayer.pet"
							]
						}
					},
					{
						"randomize": [
							{
								"weight": 1
							},
							{
								"weight": 99
							},
							{
								"weight": 3,
								"queue_command": {
									"command": [
										"effect @s resistance 10 1 true"
									]
								}
							},
							{
								"weight": 3,
								"queue_command": {
									"command": [
										"effect @s fire_resistance 10 1 true"
									]
								}
							},
							{
								"weight": 3,
								"queue_command": {
									"command": [
										"effect @s strength 10 1 true"
									]
								}
							},
							{
								"weight": 3,
								"queue_command": {
									"command": [
										"effect @s water_breathing 30 0 true"
									]
								}
							},
							{
								"weight": 3,
								"queue_command": {
									"command": [
										"effect @s speed 10 1 true"
									]
								}
							},
							{
								"weight": 1,
								"queue_command": {
									"command": [
										"effect @s levitation 1 1 true",
										"effect @s regeneration 30 1 true"
									]
								}
							},
							{
								"weight": 1,
								"queue_command": {
									"command": [
										"effect @s speed 1 0"
									]
								}
							}
						]
					}
				]
			},
			"untame": {
				"remove": {
					"component_groups": [
						"tamed_component"
					]
				},
				"add": {
					"component_groups": [
						"untamed"
					]
				}
			},
			"kroma": {
				"add": {
					"component_groups": [
						"kromatik"
					]
				}
			},
			"nokroma": {
				"remove": {
					"component_groups": [
						"kromatik"
					]
				}
			},
			"wearhat": {
				"add": {
					"component_groups": [
						"hat"
					]
				}
			},
			"nohat": {
				"remove": {
					"component_groups": [
						"hat"
					]
				},
				"queue_command": {
					"command": [
						"replaceitem entity @s slot.armor.head 0 feather"
					]
				}
			},
			"from_egg": {
				"add": {
					"component_groups": [
						"minecraft:pigeon_baby"
					]
				}
			},
			"minecraft:entity_spawned": {
				"sequence": [
					{
						"randomize": [
							{
								"weight": 2
							},
							{
								"weight": 1,
								"remove": {},
								"add": {
									"component_groups": [
										"mixed"
									]
								}
							},
							{
								"weight": 1,
								"remove": {},
								"add": {
									"component_groups": [
										"gray"
									]
								}
							},
							{
								"weight": 1,
								"remove": {},
								"add": {
									"component_groups": [
										"blend"
									]
								}
							},
							{
								"weight": 1,
								"remove": {},
								"add": {
									"component_groups": [
										"black"
									]
								}
							}
						]
					},
					{
						"randomize": [
							{
								"weight": 9,
								"remove": {},
								"add": {
									"component_groups": [
										"minecraft:pigeon_adult",
										"walking",
										"wild"
									]
								}
							},
							{
								"weight": 1,
								"remove": {},
								"add": {
									"component_groups": [
										"minecraft:pigeon_baby",
										"walking",
										"wild"
									]
								}
							}
						]
					},
					{
						"randomize": [
							{
								"weight": 9
							},
							{
								"weight": 1,
								"add": {
									"component_groups": [
										"white"
									]
								}
							}
						]
					}
				]
			},
			"tr_anim_1": {
				"remove": {
					"component_groups": [
						"tanim_1"
					]
				},
				"add": {
					"component_groups": [
						"timer",
						"tamewalk"
					]
				}
			},
			"r_anim_1": {
				"remove": {
					"component_groups": [
						"anim_1"
					]
				},
				"add": {
					"component_groups": [
						"walking"
					]
				}
			},
			"lol": {
				"randomize": [
					{
						"filters": {
							"test": "is_sleeping",
							"value": false
						},
						"weight": 1,
						"remove": {
							"component_groups": [
								"walking",
								"eksdee"
							]
						},
						"add": {
							"component_groups": [
								"flying"
							]
						}
					},
					{
						"filters": {
							"test": "is_sleeping",
							"value": false
						},
						"weight": 11,
						"add": {
							"component_groups": [
								"anim_1"
							]
						},
						"remove": {
							"component_groups": [
								"walking"
							]
						}
					}
				]
			},
			"do_event": {
				"randomize": [
					{
						"weight": 9,
						"remove": {
							"component_groups": [
								"tamewalk",
								"timer",
								"tamefly"
							]
						},
						"add": {
							"component_groups": [
								"tanim_1"
							]
						}
					},
					{
						"weight": 1,
						"add": {
							"component_groups": [
								"tamewalk"
							]
						},
						"remove": {
							"component_groups": [
								"tamefly"
							]
						}
					},
					{
						"weight": 1,
						"remove": {
							"component_groups": [
								"tamewalk"
							]
						},
						"add": {
							"component_groups": [
								"tamefly"
							]
						}
					}
				]
			},
			"xd": {
				"remove": {
					"component_groups": [
						"flying",
						"eksdee",
						"anim_1"
					]
				},
				"add": {
					"component_groups": [
						"walking"
					]
				}
			},
			"exdee": {
				"remove": {
					"component_groups": [
						"flying",
						"walking",
						"anim_1"
					]
				},
				"add": {
					"component_groups": [
						"eksdee"
					]
				}
			},
			"pizzatime": {
				"remove": {
					"component_groups": [
						"eksdee"
					]
				},
				"add": {
					"component_groups": [
						"walking"
					]
				}
			},
			"yay": {
				"sequence": [
					{
						"queue_command": {
							"command": [
								"execute @p[tag=!billducktameadv,r=5.2] ~~~ function billducktameadv",
								"tag @p[tag=!billducktameadv,r=5.2] add billducktameadv"
							]
						}
					},
					{
						"queue_command": {
							"command": [
								"tellraw @s {\"rawtext\":[{\"text\":\"\\n\"}]}",
								"tellraw @a[r=6,tag=!billeyinfotip3v_2] {\"rawtext\":[{\"translate\":\"chat.billeyinfo.tip3\"}]}",
								"tellraw @s {\"rawtext\":[{\"text\":\"\\n\"}]}",
								"tag @a[r=6,tag=!billeyinfotip3v_2] add billeyinfotip3v_2"
							]
						}
					},
					{
						"remove": {
							"component_groups": [
								"flying",
								"walking",
								"wild",
								"eksdee",
								"anim_1"
							]
						},
						"add": {
							"component_groups": [
								"tamed"
							]
						}
					},
					{
						"filters": {
							"test": "has_component",
							"value": "minecraft:is_baby"
						},
						"add": {
							"component_groups": [
								"agelol"
							]
						},
						"remove": {
							"component_groups": [
								"scale_component"
							]
						}
					}
				]
			},
			"minecraft:entity_born": {
				"sequence": [
					{
						"randomize": [
							{
								"weight": 1,
								"remove": {},
								"add": {
									"component_groups": [
										"minecraft:pigeon_baby",
										"tamed",
										"white",
										"agelol"
									]
								}
							},
							{
								"weight": 99,
								"remove": {},
								"add": {
									"component_groups": [
										"minecraft:pigeon_baby",
										"tamed",
										"agelol"
									]
								}
							}
						]
					},
					{
						"filters": {
							"any_of": [
								{
									"test": "has_component",
									"value": "minecraft:is_sheared",
									"subject": "parent"
								},
								{
									"test": "has_component",
									"value": "minecraft:is_sheared",
									"subject": "other"
								}
							]
						},
						"randomize": [
							{
								"weight": 1
							},
							{
								"weight": 1,
								"add": {
									"component_groups": [
										"white"
									]
								}
							}
						]
					},
					{
						"filters": {
							"test": "has_component",
							"value": "minecraft:is_illager_captain",
							"subject": "parent"
						},
						"add": {
							"component_groups": [
								"kromatik"
							]
						}
					}
				]
			},
			"minecraft:entity_born_white": {
				"sequence": [
					{
						"remove": {},
						"add": {
							"component_groups": [
								"minecraft:pigeon_baby",
								"tamed",
								"white",
								"agelol"
							]
						}
					},
					{
						"filters": {
							"test": "has_component",
							"value": "minecraft:is_illager_captain",
							"subject": "parent"
						},
						"add": {
							"component_groups": [
								"kromatik"
							]
						}
					}
				]
			},
			"minecraft:ageable_grow_up": {
				"remove": {
					"component_groups": [
						"minecraft:pigeon_baby",
						"agelol"
					]
				},
				"add": {
					"component_groups": [
						"minecraft:pigeon_adult"
					]
				}
			},
			"minecraft:on_leash": {
				"add": {
					"component_groups": [
						"minecraft:pigeon_leashed"
					]
				}
			},
			"minecraft:on_unleash": {
				"remove": {
					"component_groups": [
						"minecraft:pigeon_leashed"
					]
				}
			},
			"switch_down": {
				"remove": {
					"component_groups": [
						"white"
					]
				}
			},
			"switch_up": {
				"add": {
					"component_groups": [
						"white"
					]
				}
			},
			"fix": {
				"sequence": [
					{
						"filters": {
							"test": "has_component",
							"subject": "other",
							"value": "minecraft:is_saddled"
						},
						"add": {
							"component_groups": [
								"timer",
								"tamewalk"
							]
						}
					}
				]
			}
		}
	}
}