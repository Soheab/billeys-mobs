{
	"format_version": "1.8.0",
	"minecraft:entity": {
		"description": {
			"identifier": "billey:pygmy_dunkleosteus",
			"runtime_identifier": "minecraft:cod",
			"is_spawnable": true,
			"is_summonable": true,
			"is_experimental": false,
			"scripts": {
				"animate": [
					{
						"rainbow_effects": "q.is_illager_captain"
					},
					{
						"info": "!q.is_tamed"
					},
					"tame"
				]
			},
			"animations": {
				"rainbow_effects": "animation.billeys_mobs.rainbow_effects",
				"stand_up_when_hit": "controller.animation.billeys_mobs.stand_up_when_hit",
				"info": "animation.billeys_mobs.info.pygmy_dunkleosteus",
				"tame": "controller.animation.billeys_mobs.tame"
			},
			
            "properties": {
                "billey:mark_variant": {
                    "client_sync": true,
                    "type": "int",
                    "range": [
                        0,
                        56
                    ],
                    "default": 56
                },
                "billey:is_billey_mob": {
                    "client_sync": true,
                    "type": "bool",
                    "default": true
                },
                "billey:head_equipment_color": {
                    "client_sync": true,
                    "type": "int",
                    "range": [
                        0,
                        15
                    ],
                    "default": 0
                },
                //pets' leg slot is used for bowties
                "billey:legs_equipment_color": {
                    "client_sync": true,
                    "type": "int",
                    "range": [
                        0,
                        15
                    ],
                    "default": 0
                },
                "billey:chest_equipment_color": {
                    "client_sync": true,
                    "type": "int",
                    "range": [
                        0,
                        15
                    ],
                    "default": 0
                },
                "billey:feet_equipment_color": {
                    "client_sync": true,
                    "type": "int",
                    "range": [
                        0,
                        15
                    ],
                    "default": 0
                },
                "billey:body_equipment_color": {
                    "client_sync": true,
                    "type": "int",
                    "range": [
                        0,
                        15
                    ],
                    "default": 0
                },
				"billey:xp": {
					"type": "float",
					"range": [
						0.0,
						1000000.0
					],
					"default": 0.0
				},
				"billey:level": {
					"type": "int",
					"range": [
						1,
						10
					],
					"default": 1
				},
				"billey:big_tail": {
					"client_sync": true,
					"type": "bool",
					"default": false
				}
			}
		},
		"component_groups": {
			"level1": {
				//this component group isn't used unless the mob is brought back to level 1
				//through commands or the creative item
				"minecraft:health": {
					"max": 16,
					"value": 16
				},
				"minecraft:attack": {
					"damage": 7
				},
				"minecraft:behavior.melee_attack": {
					"require_complete_path": true,
					"track_target": true,
					"priority": 2,
					"speed_multiplier": 2,
					"reach_multiplier": 1,
					"on_attack": {
						"event": "on_attack",
						"target": "self"
					},
					"on_kill": {
						"event": "on_kill",
						"target": "self"
					}
				}
			},
			"level2": {
				"minecraft:health": {
					"max": 32,
					"value": 32
				},
				"minecraft:attack": {
					"damage": 12
				},
				"minecraft:behavior.melee_attack": {
					"require_complete_path": true,
					"track_target": true,
					"priority": 2,
					"speed_multiplier": 2.2,
					"reach_multiplier": 1.1,
					"on_attack": {
						"event": "on_attack",
						"target": "self"
					},
					"on_kill": {
						"event": "on_kill",
						"target": "self"
					}
				}
			},
			"level3": {
				"minecraft:health": {
					"max": 48,
					"value": 48
				},
				"minecraft:attack": {
					"damage": 16
				},
				"minecraft:behavior.melee_attack": {
					"require_complete_path": true,
					"track_target": true,
					"priority": 2,
					"speed_multiplier": 2.4,
					"reach_multiplier": 1.2,
					"on_attack": {
						"event": "on_attack",
						"target": "self"
					},
					"on_kill": {
						"event": "on_kill",
						"target": "self"
					}
				}
			},
			"level4": {
				"minecraft:health": {
					"max": 64,
					"value": 64
				},
				"minecraft:attack": {
					"damage": 21
				},
				"minecraft:behavior.melee_attack": {
					"require_complete_path": true,
					"track_target": true,
					"priority": 2,
					"speed_multiplier": 2.6,
					"reach_multiplier": 1.3,
					"on_attack": {
						"event": "on_attack",
						"target": "self"
					},
					"on_kill": {
						"event": "on_kill",
						"target": "self"
					}
				}
			},
			"level5": {
				"minecraft:health": {
					"max": 80,
					"value": 80
				},
				"minecraft:attack": {
					"damage": 25
				},
				"minecraft:behavior.melee_attack": {
					"require_complete_path": true,
					"track_target": true,
					"priority": 2,
					"speed_multiplier": 2.8,
					"reach_multiplier": 1.4,
					"on_attack": {
						"event": "on_attack",
						"target": "self"
					},
					"on_kill": {
						"event": "on_kill",
						"target": "self"
					}
				}
			},
			"level6": {
				"minecraft:health": {
					"max": 96,
					"value": 96
				},
				"minecraft:attack": {
					"damage": 30
				},
				"minecraft:behavior.melee_attack": {
					"require_complete_path": true,
					"track_target": true,
					"priority": 2,
					"speed_multiplier": 3.0,
					"reach_multiplier": 1.5,
					"on_attack": {
						"event": "on_attack",
						"target": "self"
					},
					"on_kill": {
						"event": "on_kill",
						"target": "self"
					}
				}
			},
			"level7": {
				"minecraft:health": {
					"max": 112,
					"value": 112
				},
				"minecraft:attack": {
					"damage": 34
				},
				"minecraft:behavior.melee_attack": {
					"require_complete_path": true,
					"track_target": true,
					"priority": 2,
					"speed_multiplier": 3.2,
					"reach_multiplier": 1.6,
					"on_attack": {
						"event": "on_attack",
						"target": "self"
					},
					"on_kill": {
						"event": "on_kill",
						"target": "self"
					}
				}
			},
			"level8": {
				"minecraft:health": {
					"max": 128,
					"value": 128
				},
				"minecraft:attack": {
					"damage": 39
				},
				"minecraft:behavior.melee_attack": {
					"require_complete_path": true,
					"track_target": true,
					"priority": 2,
					"speed_multiplier": 3.4,
					"reach_multiplier": 1.7,
					"on_attack": {
						"event": "on_attack",
						"target": "self"
					},
					"on_kill": {
						"event": "on_kill",
						"target": "self"
					}
				}
			},
			"level9": {
				"minecraft:health": {
					"max": 144,
					"value": 144
				},
				"minecraft:attack": {
					"damage": 43
				},
				"minecraft:behavior.melee_attack": {
					"require_complete_path": true,
					"track_target": true,
					"priority": 2,
					"speed_multiplier": 3.7,
					"reach_multiplier": 1.85,
					"on_attack": {
						"event": "on_attack",
						"target": "self"
					},
					"on_kill": {
						"event": "on_kill",
						"target": "self"
					}
				}
			},
			"level10": {
				"minecraft:health": {
					"max": 160,
					"value": 160
				},
				"minecraft:attack": {
					"damage": 48
				},
				"minecraft:behavior.melee_attack": {
					"require_complete_path": true,
					"track_target": true,
					"priority": 2,
					"speed_multiplier": 4.0,
					"reach_multiplier": 2.0,
					"on_attack": {
						"event": "on_attack",
						"target": "self"
					},
					"on_kill": {
						"event": "on_kill",
						"target": "self"
					}
				}
			},
			"baby": {
				"minecraft:is_baby": {},
				"minecraft:scale_by_age": {
					"end_scale": 0.8,
					"start_scale": 0.33
				},
				"minecraft:ageable": {
					"duration": 1200,
					"feed_items": [
						"billey:poultry_orange",
						"billey:pizzapiece",
						"fish",
						"salmon",
						"billey:raw_catfish",
						"cooked_fish",
						"cooked_salmon",
						"billey:cooked_catfish"
					],
					"grow_up": {
						"event": "minecraft:ageable_grow_up",
						"target": "self"
					}
				}
			},
			"adult": {
				"minecraft:breedable": {
					"require_tame": true,
					"require_full_health": true,
					"extra_baby_chance": 0.125,
					"breed_cooldown": 30,
					"breeds_with": [
						{
							"mate_type": "billey:pygmy_dunkleosteus",
							"baby_type": "billey:pygmy_dunkleosteus",
							"breed_event": {
								"event": "minecraft:entity_born",
								"target": "baby"
							}
						}
					],
					"breed_items": [
						"billey:poultry_orange",
						"billey:pizzapiece",
						"fish",
						"salmon",
						"billey:raw_catfish",
						"cooked_fish",
						"cooked_salmon",
						"billey:cooked_catfish"
					]
				},
				"minecraft:behavior.breed": {
					"priority": 0,
					"speed_multiplier": 1.2
				}
			},
			"tamed_component": {
				"minecraft:is_tamed": {}
			},
			"untamed": { /*This is just for ones untamed by the untaming stick.
The real tame items of this mob are in the wild component group*/
				"minecraft:tameable": {
					"probability": 1.0,
					"tame_event": {
						"event": "tamed_yay"
					},
					"tame_items": [
						"billey:power_banana",
						"billey:raw_catfish",
						"billey:bettafish",
						"billey:pizzapiece",
						"salmon",
						"fish",
						"rotten_flesh",
						"wheat_seeds",
						"melon_seeds",
						"carrot",
						"beetroot_seeds",
						"pumpkin_seeds",
						"chicken",
						"billey:raw_hamster",
						"billey:poultry_orange",
						"billey:raw_snail",
						"billey:raw_snail_s",
						"billey:raw_snail_w",
						"billey:raw_piranha",
						"bread",
						"apple",
						"fermented_spider_eye",
						"spider_eye",
						"string"
					]
				}
			},
			"electrocuted": {
				"minecraft:loot": {
					"table": "loot_tables/entities/billey_electrocuted.json"
				}
			},
			"following": {
				"minecraft:behavior.follow_owner": {
					"can_teleport": false,
					"priority": 0,
					"speed_multiplier": 1.25,
					"start_distance": 7,
					"stop_distance": 5
				}
			},
			"kromatik": {
				"minecraft:is_illager_captain": {}
			},
			"alive": {
				"minecraft:experience_reward": {
					"on_bred": "Math.Random(1,7)",
					"on_death": "q.last_hit_by_player ? Math.Random(1,3) : 0"
				},
				"minecraft:scale": {
					"value": 1
				},
				"minecraft:interact": [
					{
						"play_sounds": "plop",
						"hurt_item": 16,
						"spawn_items": {
							"table": "loot_tables/entities/billpygmydunkscutes.json"
						},
						"swing": true,
						"interact_text": "action.interact.brush",
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "brush"
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									}
								]
							}
						},
						"cooldown": 5
					},
					{
						"play_sounds": "plop",
						"swing": true,
						"interact_text": "action.interact.get_info",
						"on_interact": {
							"filters": {
								"any_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "feather"
									},
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "book"
									},
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "billey:info_book"
									}
								]
							},
							"event": "send_info",
							"target": "self"
						}
					},
					{
						"play_sounds": "plop",
						"swing": true,
						"interact_text": "action.interact.untame",
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "billey:untaming_stick"
									},
									{
										"test": "is_family",
										"subject": "other",
										"value": "player"
									},
									{
										"test": "is_owner",
										"subject": "other",
										"value": true
									}
								]
							},
							"event": "untame",
							"target": "self"
						}
					},
					{
						"interact_text": "action.interact.pet",
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"operator": "!=",
										"value": "billey:swordfish"
									},
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"operator": "!=",
										"value": "billey:golden_swordfish"
									},
									{
										"test": "is_family",
										"subject": "other",
										"value": "player"
									},
									{
										"test": "is_sleeping",
										"subject": "self",
										"value": false
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": true
									}
								]
							},
							"event": "bepetted",
							"target": "self"
						}
					},
					{
						"use_item": true,
						"play_sounds": "eat",
						"interact_text": "action.interact.feed",
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "billey:sand_banana"
									},
									{
										"test": "is_family",
										"subject": "other",
										"value": "player"
									}
								]
							},
							"event": "beenfedabanana",
							"target": "self"
						}
					},
					{
						"use_item": true,
						"play_sounds": "milk",
						"interact_text": "action.interact.use",
						"transform_to_item": "glass_bottle",
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "billey:colorful_bottle"
									},
									{
										"test": "is_family",
										"subject": "other",
										"value": "player"
									},
									{
										"test": "is_owner",
										"subject": "other",
										"value": true
									}
								]
							},
							"event": "kroma",
							"target": "self"
						}
					},
					{
						"use_item": true,
						"play_sounds": "milk",
						"interact_text": "action.interact.use",
						"transform_to_item": "glass_bottle",
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "billey:colorless_bottle"
									},
									{
										"test": "is_family",
										"subject": "other",
										"value": "player"
									},
									{
										"test": "is_owner",
										"subject": "other",
										"value": true
									}
								]
							},
							"event": "nokroma",
							"target": "self"
						}
					},
					{
						"play_sounds": "plop",
						"swing": true,
						"interact_text": "action.interact.wander",
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "stick"
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:behavior.follow_owner"
									},
									{
										"test": "is_family",
										"subject": "other",
										"value": "player"
									},
									{
										"test": "is_owner",
										"subject": "other",
										"value": true
									}
								]
							},
							"event": "eventwander",
							"target": "self"
						}
					},
					{
						"play_sounds": "plop",
						"swing": true,
						"interact_text": "action.interact.follow",
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "stick"
									},
									{
										"test": "has_component",
										"subject": "self",
										"operator": "not",
										"value": "minecraft:behavior.follow_owner"
									},
									{
										"test": "is_family",
										"subject": "other",
										"value": "player"
									},
									{
										"test": "is_owner",
										"subject": "other",
										"value": true
									}
								]
							},
							"event": "eventfollow",
							"target": "self"
						}
					}
				],
				"minecraft:health": {
					"value": 16,
					"max": 16
				},
				"minecraft:damage_sensor": [
					{
						"on_damage": {
							"filters": {
								"all_of": [
									{
										"test": "is_owner",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_tag",
										"subject": "other",
										"operator": "not",
										"value": "billey:can_hit_own_pet"
									}
								]
							},
							"event": "say_owner_hit_pet_info"
						},
						"cause": "all",
						"deals_damage": false
					},
					{
						"on_damage": {
							"filters": {
								"all_of": [
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "is_owner",
										"subject": "other",
										"value": false
									},
									{
										"test": "has_tag",
										"subject": "other",
										"value": "billey:cant_hit_other_pet"
									}
								]
							},
							"event": "say_other_hit_pet_info"
						},
						"cause": "all",
						"deals_damage": false
					},
					{
						"on_damage": {
							"filters": {
								"test": "has_equipment",
								"subject": "other",
								"domain": "hand",
								"value": "billey:swordfish"
							}
						},
						"damage_multiplier": 2.333
					},
					{
						"on_damage": {
							"filters": {
								"test": "has_equipment",
								"subject": "other",
								"domain": "hand",
								"value": "billey:golden_swordfish"
							}
						},
						"damage_multiplier": 2.333
					},
					{
						"cause": "all",
						"deals_damage": false,
						"on_damage_sound_event": "armor.equip_generic",
						"on_damage": {
							"event": "destroy_head_equipment",
							"target": "self",
							"filters": {
								"all_of": [
									{
										"test": "has_damage",
										"value": "fatal"
									},
									{
										"test": "has_equipment",
										"value": "billey:pet_hat",
										"domain": "head"
									}
								]
							}
						}
					}
				]
			},
			"eaten1": {
				"minecraft:scale": {
					"value": 0.9
				},
				"minecraft:health": {
					"value": 23,
					"max": 23
				},
				"minecraft:timer": {
					"time": [
						0.05,
						0.05
					],
					"looping": false,
					"time_down_event": {
						"event": "minecraft:die2",
						"target": "self"
					}
				},
				"minecraft:loot": {
					"table": "loot_tables/empty.json"
				}
			},
			"eaten2": {
				"minecraft:scale": {
					"value": 0.8
				},
				"minecraft:health": {
					"value": 23,
					"max": 23
				},
				"minecraft:timer": {
					"time": [
						0.05,
						0.05
					],
					"looping": false,
					"time_down_event": {
						"event": "minecraft:die3",
						"target": "self"
					}
				},
				"minecraft:loot": {
					"table": "loot_tables/empty.json"
				}
			},
			"eaten3": {
				"minecraft:scale": {
					"value": 0.7
				},
				"minecraft:health": {
					"value": 23,
					"max": 23
				},
				"minecraft:timer": {
					"time": [
						0.05,
						0.05
					],
					"looping": false,
					"time_down_event": {
						"event": "minecraft:die4",
						"target": "self"
					}
				},
				"minecraft:loot": {
					"table": "loot_tables/empty.json"
				}
			},
			"eaten4": {
				"minecraft:scale": {
					"value": 0.5
				},
				"minecraft:health": {
					"value": 23,
					"max": 23
				},
				"minecraft:timer": {
					"time": [
						0.05,
						0.05
					],
					"looping": false,
					"time_down_event": {
						"event": "minecraft:die5",
						"target": "self"
					}
				},
				"minecraft:loot": {
					"table": "loot_tables/empty.json"
				}
			},
			"eaten5": {
				"minecraft:scale": {
					"value": 0.3
				},
				"minecraft:health": {
					"value": 23,
					"max": 23
				},
				"minecraft:timer": {
					"time": [
						0.05,
						0.05
					],
					"looping": false,
					"time_down_event": {
						"event": "minecraft:die6",
						"target": "self"
					}
				},
				"minecraft:loot": {
					"table": "loot_tables/empty.json"
				}
			},
			"eaten6": {
				"minecraft:scale": {
					"value": 0.1
				},
				"minecraft:health": {
					"value": 23,
					"max": 23
				},
				"minecraft:timer": {
					"time": [
						0.05,
						0.05
					],
					"looping": false,
					"time_down_event": {
						"event": "minecraft:die7",
						"target": "self"
					}
				},
				"minecraft:loot": {
					"table": "loot_tables/empty.json"
				}
			},
			"die": {
				"minecraft:scale": {
					"value": 0
				},
				"minecraft:health": {
					"value": 1,
					"max": 1
				},
				"minecraft:loot": {
					"table": "loot_tables/empty.json"
				},
				"minecraft:transformation": {
					"into": "billey:despawn",
					"delay": 0.01
				}
			},
			"variant0": {
				"minecraft:variant": {
					"value": 0
				}
			},
			"variant1": {
				"minecraft:variant": {
					"value": 1
				}
			},
			"variant2": {
				"minecraft:variant": {
					"value": 2
				}
			},
			"variant3": {
				"minecraft:variant": {
					"value": 3
				}
			},
			"variant4": {
				"minecraft:variant": {
					"value": 4
				}
			},
			"variant5": {
				"minecraft:variant": {
					"value": 5
				}
			},
			"variant6": {
				"minecraft:variant": {
					"value": 6
				}
			},
			"variant7": {
				"minecraft:variant": {
					"value": 7
				}
			},
			"wild": {
				"minecraft:shareables": {
					"all_items": false,
					"all_items_max_amount": 1,
					"items": [
						{
							"item": "minecraft:chicken",
							"priority": 0,
							"max_amount": 1
						},
						{
							"item": "minecraft:clownfish",
							"priority": 0,
							"max_amount": 1
						},
						{
							"item": "minecraft:fish",
							"priority": 0,
							"max_amount": 1
						},
						{
							"item": "minecraft:rotten_flesh",
							"priority": 0,
							"max_amount": 1
						},
						{
							"item": "minecraft:salmon",
							"priority": 0,
							"max_amount": 1
						},
						{
							"item": "billey:swordmeat",
							"priority": 0,
							"max_amount": 1
						},
						{
							"item": "billey:swordcooked",
							"priority": 0,
							"max_amount": 1
						},
						{
							"item": "minecraft:bone",
							"priority": 1,
							"max_amount": 1
						},
						{
							"item": "minecraft:feather",
							"priority": 1,
							"max_amount": 1
						},
						{
							"item": "minecraft:dye", //ink sac
							"priority": 1,
							"max_amount": 1
						},
						{
							"item": "billey:shark_tooth",
							"priority": 1,
							"max_amount": 1
						},
						{
							"item": "billey:shark_scales",
							"priority": 1,
							"max_amount": 1
						},
						{
							"item": "billey:swordfin",
							"priority": 1,
							"max_amount": 1
						},
						{
							"item": "billey:swordtail",
							"priority": 1,
							"max_amount": 1
						},
						{
							"item": "billey:swordstick",
							"priority": 1,
							"max_amount": 1
						},
						{
							"item": "billey:anglerlight",
							"priority": 1,
							"max_amount": 1
						},
						{
							"item": "billey:betta_fish",
							"priority": 0,
							"max_amount": 1
						},
						{
							"item": "billey:raw_catfish",
							"priority": 0,
							"max_amount": 1
						},
						{
							"item": "billey:pizzapiece",
							"priority": 0,
							"max_amount": 1
						},
						{
							"item": "billey:raw_piranha",
							"priority": 0,
							"max_amount": 1
						},
						{
							"item": "minecraft:glow_ink_sac",
							"priority": 0,
							"max_amount": 1
						}
					]
				},
				"minecraft:behavior.eat_carried_item": {
					"priority": 4,
					"delay_before_eating": 0
				},
				"minecraft:behavior.pickup_items": {
					"priority": 0,
					"max_dist": 10,
					"goal_radius": 2,
					"speed_multiplier": 1.1
				},
				"minecraft:behavior.equip_item": {
					"priority": 2
				},
				"minecraft:despawn": {
					"despawn_from_distance": {}
				},
				"minecraft:tameable": {
					/*
					They're not tamed by hand-feeding but rather
					by letting them kill a tamed pizzafish of yours.
					See scripts/billeys_mobs/pygmyDunkleosteus.js
					*/
					"probability": 1,
					"tame_items": [
						"billey:power_banana"
					],
					"tame_event": {
						"event": "tamed_yay",
						"target": "self"
					}
				},
				"minecraft:behavior.nearest_attackable_target": {
					"priority": 1,
					"reselect_targets": true,
					"entity_types": [
						{
							"filters": {
								"any_of": [
									{
										"test": "is_family",
										"subject": "other",
										"value": "wildcod"
									},
									{
										"test": "is_family",
										"subject": "other",
										"value": "squid"
									}
								]
							},
							"max_dist": 5
						},
						{
							"filters": {
								"test": "is_family",
								"subject": "other",
								"value": "pizzafish"
							},
							"max_dist": 10
						},
						{
							"filters": {
								"test": "is_family",
								"subject": "other",
								"value": "player"
							},
							"max_dist": 2
						}
					]
				},
				"minecraft:type_family": {
					"family": [
						"pygmy_dunk",
						"eatscod",
						"mob"
					]
				}
			},
			"tamed": {
				"minecraft:persistent": {},
				"minecraft:leashable": {
					"soft_distance": 6.0,
					"hard_distance": 8.0,
					"max_distance": 12.0
				},
				"minecraft:healable": {
					"items": [
						{
							"item": "billey:poultry_orange",
							"heal_amount": 7
						},
						{
							"item": "billey:cooked_snail",
							"heal_amount": 4,
							"effects": [
								{
									"name": "strength",
									"chance": 1.0,
									"duration": 15,
									"amplifier": 1
								}
							]
						},
						{
							"item": "billey:cooked_snail_s",
							"heal_amount": 4,
							"effects": [
								{
									"name": "speed",
									"chance": 1.0,
									"duration": 15,
									"amplifier": 1
								}
							]
						},
						{
							"item": "billey:cooked_snail_w",
							"heal_amount": 4,
							"effects": [
								{
									"name": "regeneration",
									"chance": 1.0,
									"duration": 15,
									"amplifier": 1
								}
							]
						},
						{
							"item": "billey:pizzapiece",
							"heal_amount": 4
						}
					]
				},
				"minecraft:behavior.owner_hurt_by_target": {
					"priority": 2,
					"entity_types": {
						//not sure if this is needed
						"filters": {
							"test": "in_water",
							"subject": "other"
						}
					}
				},
				"minecraft:behavior.owner_hurt_target": {
					"priority": 2,
					"entity_types": {
						//not sure if this is needed
						"filters": {
							"test": "in_water",
							"subject": "other"
						}
					}
				},
				"minecraft:behavior.tempt": {
					"can_tempt_vertically": true,
					"speed_multiplier": 1.0,
					"items": [
						"billey:poultry_orange",
						"billey:pizzapiece",
						"fish",
						"salmon",
						"billey:raw_catfish",
						"cooked_fish",
						"cooked_salmon",
						"billey:cooked_catfish"
					],
					"within_radius": 16,
					"priority": 2
				},
				"minecraft:behavior.avoid_mob_type": {
					"priority": 0,
					"max_flee": 16,
					"entity_types": [
						{
							"filters": {
								"test": "has_component",
								"subject": "other",
								"value": "minecraft:explode"
							},
							"max_dist": 12,
							"walk_speed_multiplier": 1.4,
							"sprint_speed_multiplier": 1.4
						}
					]
				},
				"minecraft:is_tamed": {},
				"minecraft:tameable": {}, //for the script to be able to get the mob's owner
				"minecraft:type_family": {
					"family": [
						"pygmy_dunk",
						"eatscod"
					]
				},
				"minecraft:behavior.nearest_attackable_target": {
					"priority": 1,
					"attack_interval": 60,
					"entity_types": [
						{
							"filters": {
								"test": "is_family",
								"subject": "other",
								"value": "wildcod"
							},
							"max_dist": 6
						}
					]
				}
			}
		},
		"components": {
			"minecraft:is_hidden_when_invisible": {},
			"minecraft:type_family": {
				"family": [
					"pygmy_dunk",
					"pygmy_dunk",
					"eatscod",
					"mob"
				]
			},
			"minecraft:collision_box": {
				"width": 0.7,
				"height": 0.5
			},
			"minecraft:breathable": {
				"total_supply": 15,
				"suffocate_time": 0,
				"breathes_air": false,
				"breathes_water": true
			},
			"minecraft:underwater_movement": {
				"value": 0.1
			},
			"minecraft:movement": {
				"value": 0.15
			},
			"minecraft:physics": {
				"has_gravity": false
			},
			"minecraft:pushable": {
				"is_pushable": true,
				"is_pushable_by_piston": true
			},
			"minecraft:navigation.generic": {
				"is_amphibious": false,
				"can_path_over_water": false,
				"can_swim": true,
				"can_walk": false,
				"can_breach": false,
				"can_sink": false
			},
			"minecraft:movement.sway": {
				"sway_amplitude": 0.0
			},
			"minecraft:behavior.swim_idle": {
				"priority": 5
			},
			"minecraft:behavior.swim_wander": {
				"priority": 4,
				"speed_multiplier": 0.014,
				"interval": 60
			},
			"minecraft:behavior.random_swim": {
				"speed_multiplier": 1.0,
				"priority": 3,
				"xz_dist": 16,
				"y_dist": 4,
				"interval": 0
			},
			"minecraft:behavior.hurt_by_target": {
				"priority": 2
			},
			"minecraft:attack": {
				"damage": 7
			},
			"minecraft:target_nearby_sensor": {
				"must_see": true,
				"on_inside_range": {
					"event": "attack_animation",
					"target": "self"
				},
				"inside_range": 0.9,
				"outside_range": 1.0
			},
			"minecraft:nameable": {},
			"minecraft:behavior.melee_attack": {
				"priority": 1,
				"speed_multiplier": 2.0,
				"track_target": true,
				"on_attack": {
					"event": "on_attack",
					"target": "self"
				},
				"on_kill": {
					"event": "on_kill",
					"target": "self"
				}
			},
			//for the script to always be able to get and set them:
			"minecraft:mark_variant": {
				"value": 56
				/*
				Mark variant value 0 would make the pygmy dunk half orange
				for a split second before the script gave it its actual mark variant.
				Mark variant value 56 instead looks invisible
				*/
			},
			"minecraft:variant": {
				"value": 0
			},
			"minecraft:on_target_acquired": {
				"event": "billey:pet_target_acquired",
				"target": "self"
			},
			"minecraft:on_target_escape": {
				"event": "billey:pet_target_escape",
				"target": "self"
			}
		},
		"events": {
            "reset_target": {
                "reset_target": {}
            },
			"billey:pet_target_acquired": {},
			"billey:pet_target_escape": {},
			"destroy_head_equipment": {
				"queue_command": {
					"command": "scriptevent billey:destroy_pet_head_equipment"
				}
			},
			"say_owner_hit_pet_info": {
				"queue_command": {
					"target": "other",
					"command": [
						"titleraw @s actionbar {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.owner_hit_pet\"}]}",
						"tellraw @s[tag=!billey:has_hurt_own_pet] {\"rawtext\":[{\"translate\":\"ui.billeys_mobs.info.owner_hit_pet\"}]}",
						"tag @s add billey:has_hurt_own_pet"
					]
				}
			},
			"say_other_hit_pet_info": {
				"queue_command": {
					"target": "other",
					"command": "titleraw @s actionbar {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.other_hit_pet\"}]}"
				}
			},
			"on_attack": {},
			"on_kill": {},
			"check_level": {
				"filters": {
					"all_of": [
						{
							"test": "has_component",
							"value": "minecraft:is_tamed"
						},
						{
							"test": "has_component",
							"operator": "not",
							"value": "minecraft:is_baby"
						}
					]
				},
				"sequence": [
					{
						"filters": {
							"all_of": [
								{
									"test": "int_property",
									"domain": "billey:level",
									"operator": "<",
									"value": 2
								},
								{
									"test": "float_property",
									"domain": "billey:xp",
									"operator": ">=",
									"value": 30.0 //xp_level_2
								}
							]
						},
						"trigger": "to_level2"
					},
					{
						"filters": {
							"all_of": [
								{
									"test": "int_property",
									"domain": "billey:level",
									"operator": "<",
									"value": 3
								},
								{
									"test": "float_property",
									"domain": "billey:xp",
									"operator": ">=",
									"value": 90.0 //xp_level_3
								}
							]
						},
						"trigger": "to_level3"
					},
					{
						"filters": {
							"all_of": [
								{
									"test": "int_property",
									"domain": "billey:level",
									"operator": "<",
									"value": 4
								},
								{
									"test": "float_property",
									"domain": "billey:xp",
									"operator": ">=",
									"value": 180.0 //xp_level_4
								}
							]
						},
						"trigger": "to_level4"
					},
					{
						"filters": {
							"all_of": [
								{
									"test": "int_property",
									"domain": "billey:level",
									"operator": "<",
									"value": 5
								},
								{
									"test": "float_property",
									"domain": "billey:xp",
									"operator": ">=",
									"value": 310.0 //xp_level_5
								}
							]
						},
						"trigger": "to_level5"
					},
					{
						"filters": {
							"all_of": [
								{
									"test": "int_property",
									"domain": "billey:level",
									"operator": "<",
									"value": 6
								},
								{
									"test": "float_property",
									"domain": "billey:xp",
									"operator": ">=",
									"value": 520.0 //xp_level_6
								}
							]
						},
						"trigger": "to_level6"
					},
					{
						"filters": {
							"all_of": [
								{
									"test": "int_property",
									"domain": "billey:level",
									"operator": "<",
									"value": 7
								},
								{
									"test": "float_property",
									"domain": "billey:xp",
									"operator": ">=",
									"value": 890.0 //xp_level_7
								}
							]
						},
						"trigger": "to_level7"
					},
					{
						"filters": {
							"all_of": [
								{
									"test": "int_property",
									"domain": "billey:level",
									"operator": "<",
									"value": 8
								},
								{
									"test": "float_property",
									"domain": "billey:xp",
									"operator": ">=",
									"value": 1650.0 //xp_level_8
								}
							]
						},
						"trigger": "to_level8"
					},
					{
						"filters": {
							"all_of": [
								{
									"test": "int_property",
									"domain": "billey:level",
									"operator": "<",
									"value": 9
								},
								{
									"test": "float_property",
									"domain": "billey:xp",
									"operator": ">=",
									"value": 3310.0 //xp_level_9
								}
							]
						},
						"trigger": "to_level9"
					},
					{
						"filters": {
							"all_of": [
								{
									"test": "int_property",
									"domain": "billey:level",
									"operator": "<",
									"value": 10
								},
								{
									"test": "float_property",
									"domain": "billey:xp",
									"operator": ">=",
									"value": 7150.0 //xp_level_10
								}
							]
						},
						"trigger": "to_level10"
					}
				]
			},
			"to_level1": {
				"sequence": [
					{
						"add": {
							"component_groups": [
								"level1"
							]
						},
						"set_property": {
							"billey:level": "1",
							"billey:xp": "0"
						}
					},
					{
						"queue_command": {
							"command": [
								"tellraw @a[r=30] {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup.reset\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
								"playsound billey.level_up @a[r=30] ~~~ 1.0 1.1 0.5"
							]
						}
					}
				]
			},
			"to_level2": {
				"sequence": [
					{
						"add": {
							"component_groups": [
								"level2"
							]
						},
						"set_property": {
							"billey:level": "2",
							"billey:xp": "30" //xp_level_2
						}
					},
					{
						"queue_command": {
							"command": [
								"tellraw @p {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"2\"}]}}]}",
								"tellraw @p {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup.info\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
								"tag @p add got_lvl_msg",
								"tellraw @a[r=30,tag=!got_lvl_msg] {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"2\"}]}}]}",
								"tellraw @a[r=30,tag=!got_lvl_msg] {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup.info\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
								"tag @a remove got_lvl_msg",
								"effect @s instant_health 1 255 true",
								"playsound billey.level_up @a[r=30] ~~~ 1.0 1.1 0.5"
							]
						}
					}
				]
			},
			"to_level3": {
				"sequence": [
					{
						"add": {
							"component_groups": [
								"level3"
							]
						},
						"set_property": {
							"billey:level": "3",
							"billey:xp": "90" //xp_level_3
						}
					},
					{
						"queue_command": {
							"command": [
								"tellraw @p {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"3\"}]}}]}",
								"tellraw @p {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup.info\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
								"tag @p add got_lvl_msg",
								"tellraw @a[r=30,tag=!got_lvl_msg] {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"3\"}]}}]}",
								"tellraw @a[r=30,tag=!got_lvl_msg] {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup.info\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
								"tag @a remove got_lvl_msg",
								"effect @s instant_health 1 255 true",
								"playsound billey.level_up @a[r=30] ~~~ 1.0 1.1 0.5"
							]
						}
					}
				]
			},
			"to_level4": {
				"sequence": [
					{
						"add": {
							"component_groups": [
								"level4"
							]
						},
						"set_property": {
							"billey:level": "4",
							"billey:xp": "180" //xp_level_4
						}
					},
					{
						"queue_command": {
							"command": [
								"tellraw @p {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"4\"}]}}]}",
								"tellraw @p {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup.info\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
								"tag @p add got_lvl_msg",
								"tellraw @a[r=30,tag=!got_lvl_msg] {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"4\"}]}}]}",
								"tellraw @a[r=30,tag=!got_lvl_msg] {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup.info\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
								"tag @a remove got_lvl_msg",
								"effect @s instant_health 1 255 true",
								"playsound billey.level_up @a[r=30] ~~~ 1.0 1.1 0.5",
								"tellraw @a[r=30] {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup.oneshot\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}"
							]
						}
					}
				]
			},
			"to_level5": {
				"sequence": [
					{
						"add": {
							"component_groups": [
								"level5"
							]
						},
						"set_property": {
							"billey:level": "5",
							"billey:xp": "310" //xp_level_5
						}
					},
					{
						"queue_command": {
							"command": [
								"tellraw @p {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"5\"}]}}]}",
								"tellraw @p {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup.info\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
								"tag @p add got_lvl_msg",
								"tellraw @a[r=30,tag=!got_lvl_msg] {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"5\"}]}}]}",
								"tellraw @a[r=30,tag=!got_lvl_msg] {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup.info\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
								"tag @a remove got_lvl_msg",
								"effect @s instant_health 1 255 true",
								"playsound billey.level_up @a[r=30] ~~~ 1.0 1.1 0.5"
							]
						}
					}
				]
			},
			"to_level6": {
				"sequence": [
					{
						"add": {
							"component_groups": [
								"level6"
							]
						},
						"set_property": {
							"billey:level": "6",
							"billey:xp": "520" //xp_level_6
						}
					},
					{
						"queue_command": {
							"command": [
								"tellraw @p {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"6\"}]}}]}",
								"tellraw @p {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup.info\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
								"tag @p add got_lvl_msg",
								"tellraw @a[r=30,tag=!got_lvl_msg] {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"6\"}]}}]}",
								"tellraw @a[r=30,tag=!got_lvl_msg] {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup.info\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
								"tag @a remove got_lvl_msg",
								"effect @s instant_health 1 255 true",
								"playsound billey.level_up @a[r=30] ~~~ 1.0 1.1 0.5"
							]
						}
					}
				]
			},
			"to_level7": {
				"sequence": [
					{
						"add": {
							"component_groups": [
								"level7"
							]
						},
						"set_property": {
							"billey:level": "7",
							"billey:xp": "890" //xp_level_7
						}
					},
					{
						"queue_command": {
							"command": [
								"tellraw @p {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"7\"}]}}]}",
								"tellraw @p {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup.info\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
								"tag @p add got_lvl_msg",
								"tellraw @a[r=30,tag=!got_lvl_msg] {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"7\"}]}}]}",
								"tellraw @a[r=30,tag=!got_lvl_msg] {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup.info\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
								"tag @a remove got_lvl_msg",
								"effect @s instant_health 1 255 true",
								"playsound billey.level_up @a[r=30] ~~~ 1.0 1.1 0.5"
							]
						}
					}
				]
			},
			"to_level8": {
				"sequence": [
					{
						"add": {
							"component_groups": [
								"level8"
							]
						},
						"set_property": {
							"billey:level": "8",
							"billey:xp": "1650" //xp_level_8
						}
					},
					{
						"queue_command": {
							"command": [
								"tellraw @p {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"8\"}]}}]}",
								"tellraw @p {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup.info\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
								"tag @p add got_lvl_msg",
								"tellraw @a[r=30,tag=!got_lvl_msg] {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"8\"}]}}]}",
								"tellraw @a[r=30,tag=!got_lvl_msg] {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup.info\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
								"tag @a remove got_lvl_msg",
								"effect @s instant_health 1 255 true",
								"playsound billey.level_up @a[r=30] ~~~ 1.0 1.1 0.5"
							]
						}
					}
				]
			},
			"to_level9": {
				"sequence": [
					{
						"add": {
							"component_groups": [
								"level9"
							]
						},
						"set_property": {
							"billey:level": "9",
							"billey:xp": "3310" //xp_level_9
						}
					},
					{
						"queue_command": {
							"command": [
								"tellraw @p {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"9\"}]}}]}",
								"tellraw @p {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup.info\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
								"tag @p add got_lvl_msg",
								"tellraw @a[r=30,tag=!got_lvl_msg] {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"9\"}]}}]}",
								"tellraw @a[r=30,tag=!got_lvl_msg] {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup.info\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
								"tag @a remove got_lvl_msg",
								"effect @s instant_health 1 255 true",
								"playsound billey.level_up @a[r=30] ~~~ 1.0 1.1 0.5"
							]
						}
					}
				]
			},
			"to_level10": {
				"sequence": [
					{
						"add": {
							"component_groups": [
								"level10"
							]
						},
						"set_property": {
							"billey:level": "10",
							"billey:xp": "7150" //xp_level_10
						}
					},
					{
						"queue_command": {
							"command": [
								"tellraw @p {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"10\"}]}}]}",
								"tellraw @p {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup.info\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
								"tag @p add got_lvl_msg",
								"tellraw @a[r=30,tag=!got_lvl_msg] {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"10\"}]}}]}",
								"tellraw @a[r=30,tag=!got_lvl_msg] {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup.info\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
								"tag @a remove got_lvl_msg",
								"effect @s instant_health 1 255 true",
								"playsound billey.level_up @a[r=30] ~~~ 1.0 1.1 0.5"
							]
						}
					}
				]
			},
			"minecraft:ageable_grow_up": {
				"remove": {
					"component_groups": [
						"baby"
					]
				},
				"add": {
					"component_groups": [
						"adult"
					]
				}
			},
			"minecraft:entity_born": {
				"sequence": [
					{
						"add": {
							"component_groups": [
								"alive",
								"dry",
								"tamed",
								"baby"
							]
						}
					},
					{
						"filters": {
							"test": "has_component",
							"value": "minecraft:is_illager_captain",
							"subject": "parent"
						},
						"add": {
							"component_groups": [
								"kromatik"
							]
						}
					},
					//this ensures that the crossbred pygmy dunk will look like a mix of its parents
					//and not identical to one of them as happened 50% of the time before this
					{
						"queue_command": {
							"target": "parent",
							"command": [
								"scriptevent billey:handle_rat_crossbreed parent",
								//change the mark variant of the parents so that
								//next time you breed them you breed them
								//you get another combination,
								//but if the parent itself has a pattern then it won't change
								"scriptevent billey:pygmy_dunk_set_mark_variant"
							]
						}
					},
					{
						"queue_command": {
							"target": "other", //other in this context means the other parent
							"command": [
								"scriptevent billey:handle_rat_crossbreed other",
								//change the mark variant of the parents so that
								//next time you breed them you breed them
								//you get another combination,
								//but if the parent itself has a pattern then it won't change
								"scriptevent billey:pygmy_dunk_set_mark_variant"
							]
						}
					},
					{
						"queue_command": {
							"target": "self",
							"command": "scriptevent billey:handle_rat_crossbreed baby"
						}
					},
					{
						"randomize": [
							/*
							Randomly choose a parent to inherit tail size from.
							The default of billey:big_tail is false so only need
							to check for if it's true.
							*/
							{
								"weight": 1,
								"filters": {
									"test": "bool_property",
									"subject": "parent",
									"domain": "billey:big_tail",
									"value": true
								},
								"set_property": {
									"billey:big_tail": true
								}
							},
							{
								"weight": 1,
								"filters": {
									"test": "bool_property",
									"subject": "other",
									"domain": "billey:big_tail",
									"value": true
								},
								"set_property": {
									"billey:big_tail": true
								}
							}
						]
					}
				]
			},
			"add_sittable": {
				"add": {
					"component_groups": [
						"sittable"
					]
				}
			},
			"remove_sittable": {
				"remove": {
					"component_groups": [
						"sittable"
					]
				}
			},
			"attack_animation": {
				"queue_command": {
					"command": [
						"playanimation @s animation.billeys_mobs.pygmy_dunkleosteus.attack",
						"playsound random.eat"
					]
				}
			},
			"send_info": {
				"queue_command": {
					"target": "other",
					"command": [
						"tellraw @s {\"rawtext\":[{\"text\":\"\\n\"}]}",
						"tellraw @s {\"rawtext\":[{\"translate\":\"ui.billeys_mobs.info.pygmy_dunkleosteus\",\"with\":[\"\\n\"]},{\"text\": \"\\n\"},{\"text\": \"\\n\"},{\"translate\":\"ui.billeys_mobs.info.formore\"}]}",
						"tellraw @s {\"rawtext\":[{\"text\":\"\\n\"}]}"
					]
				}
			},
			"untame": {
				"sequence": [
					{
						"queue_command": {
							"command": [
								"playsound random.orb @a ~~~ 1.00 0.8 0.5",
								"tellraw @a[r=5] {\"rawtext\": [{\"translate\": \"billmobs.untame\"},{\"selector\": \"@s\"}, {\"translate\": \"billmobs.untame2\"}] }"
							]
						}
					},
					{
						"remove": {
							"component_groups": [
								"tamed_component"
							]
						},
						"add": {
							"component_groups": [
								"untamed"
							]
						}
					}
				]
			},
			"get_electrocuted": {
				"add": {
					"component_groups": [
						"electrocuted"
					]
				}
			},
			"eventwander": {
				"sequence": [
					{
						"remove": {
							"component_groups": [
								"following"
							]
						}
					},
					{
						"queue_command": {
							"command": [
								"tellraw @a[r=5] {\"rawtext\": [{\"translate\": \"billmobs.wander\"},{\"selector\": \"@s\"}, {\"translate\": \"billmobs.wander2\"}] }"
							]
						}
					}
				]
			},
			"eventfollow": {
				"sequence": [
					{
						"add": {
							"component_groups": [
								"following"
							]
						}
					},
					{
						"queue_command": {
							"command": [
								"tellraw @a[r=5] {\"rawtext\": [{\"translate\": \"billmobs.follow\"},{\"selector\": \"@s\"}, {\"translate\": \"billmobs.follow2\"}] }"
							]
						}
					}
				]
			},
			"beenfedabanana": {
				"sequence": [
					{
						"queue_command": {
							"command": [
								"particle billey:eatbanana ~ ~.5 ~"
							]
						}
					},
					{
						"randomize": [
							{
								"weight": 8,
								"queue_command": {
									"command": [
										"effect @s regeneration 7 1"
									]
								}
							},
							{
								"weight": 4,
								"queue_command": {
									"command": [
										"effect @s regeneration 10"
									]
								}
							},
							{
								"weight": 4,
								"queue_command": {
									"command": [
										"effect @s speed 10"
									]
								}
							},
							{
								"weight": 4,
								"queue_command": {
									"command": [
										"effect @s absorption 10"
									]
								}
							},
							{
								"weight": 4,
								"queue_command": {
									"command": [
										"effect @s resistance 10"
									]
								}
							},
							{
								"weight": 4,
								"queue_command": {
									"command": [
										"effect @s strength 10"
									]
								}
							},
							{
								"weight": 4,
								"queue_command": {
									"command": [
										"effect @s water_breathing 10"
									]
								}
							},
							{
								"weight": 4,
								"queue_command": {
									"command": [
										"effect @s fire_resistance 10"
									]
								}
							},
							{
								"weight": 1,
								"sequence": [
									{
										"queue_command": {
											"command": [
												"effect @s levitation 1 0 true"
											]
										}
									},
									{
										"queue_command": {
											"target": "other",
											"command": [
												"effect @s levitation 1 0 true"
											]
										}
									}
								]
							}
						]
					}
				]
			},
			"bepetted": {
				"sequence": [
					{
						"randomize": [
							{
								"weight": 13
							},
							{
								"weight": 1
							},
							{
								"weight": 1,
								"queue_command": {
									"command": [
										"playanimation @s animation.billeys_mobs.cat.petted"
									]
								}
							}
						]
					},
					{
						"queue_command": {
							"target": "other",
							"command": [
								"playanimation @s animation.billeys_mobsplayer.pet"
							]
						}
					},
					{
						"randomize": [
							{
								"weight": 1
							},
							{
								"weight": 99
							},
							{
								"weight": 3,
								"queue_command": {
									"command": [
										"effect @s resistance 10 1 true"
									]
								}
							},
							{
								"weight": 3,
								"queue_command": {
									"command": [
										"effect @s fire_resistance 10 1 true"
									]
								}
							},
							{
								"weight": 3,
								"queue_command": {
									"command": [
										"effect @s strength 10 1 true"
									]
								}
							},
							{
								"weight": 3,
								"queue_command": {
									"command": [
										"effect @s water_breathing 30 0 true"
									]
								}
							},
							{
								"weight": 3,
								"queue_command": {
									"command": [
										"effect @s speed 10 1 true"
									]
								}
							},
							{
								"weight": 1,
								"queue_command": {
									"command": [
										"effect @s levitation 1 1 true",
										"effect @s regeneration 30 1 true"
									]
								}
							},
							{
								"weight": 1,
								"queue_command": {
									"command": [
										"effect @s speed 1 0"
									]
								}
							}
						]
					}
				]
			},
			"kroma": {
				"add": {
					"component_groups": [
						"kromatik"
					]
				}
			},
			"nokroma": {
				"remove": {
					"component_groups": [
						"kromatik"
					]
				}
			},
			"spawn_blue": {
				"add": {
					"component_groups": [
						"alive",
						"dry",
						"wild",
						"variant7"
					]
				}
			},
			"minecraft:entity_spawned": {
				"sequence": [
					{
						"add": {
							"component_groups": [
								"alive",
								"dry",
								"wild",
								"adult"
							]
						}
					},
					{
						"randomize": [
							{
								"weight": 20,
								"add": {
									"component_groups": [
										"variant0"
									]
								}
							},
							{
								"weight": 20,
								"add": {
									"component_groups": [
										"variant1"
									]
								}
							},
							{
								"weight": 5,
								"add": {
									"component_groups": [
										"variant2"
									]
								}
							},
							{
								"weight": 20,
								"add": {
									"component_groups": [
										"variant3"
									]
								}
							},
							{
								"weight": 20,
								"add": {
									"component_groups": [
										"variant4"
									]
								}
							},
							{
								"weight": 20,
								"add": {
									"component_groups": [
										"variant5"
									]
								}
							},
							{
								"weight": 20,
								"add": {
									"component_groups": [
										"variant6"
									]
								}
							},
							{
								"weight": 2,
								"add": {
									"component_groups": [
										"variant7"
									]
								}
							}
						]
					},
					{
						"randomize": [
							{
								"weight": 1
								//do nothing since the default is false
							},
							{
								"weight": 1,
								"set_property": {
									"billey:big_tail": true
								}
							}
						]
					},
					{
						"queue_command": {
							"command": "scriptevent billey:pygmy_dunk_set_mark_variant"
						}
					}
				]
			},
			"become_wet": {
				"add": {
					"component_groups": [
						"wet"
					]
				},
				"remove": {
					"component_groups": [
						"dry"
					]
				}
			},
			"become_dry": {
				"add": {
					"component_groups": [
						"dry"
					]
				},
				"remove": {
					"component_groups": [
						"wet"
					]
				}
			},
			"minecraft:die1": {
				"add": {
					"component_groups": [
						"eaten1"
					]
				},
				"remove": {
					"component_groups": [
						"alive"
					]
				}
			},
			"minecraft:die2": {
				"add": {
					"component_groups": [
						"eaten2"
					]
				},
				"remove": {
					"component_groups": [
						"eaten1"
					]
				}
			},
			"dotheboom": {
				"add": {
					"component_groups": [
						"theboom"
					]
				}
			},
			"minecraft:die3": {
				"add": {
					"component_groups": [
						"eaten3"
					]
				},
				"remove": {
					"component_groups": [
						"eaten2"
					]
				}
			},
			"minecraft:die4": {
				"add": {
					"component_groups": [
						"eaten4"
					]
				},
				"remove": {
					"component_groups": [
						"eaten3"
					]
				}
			},
			"minecraft:die5": {
				"add": {
					"component_groups": [
						"eaten5"
					]
				},
				"remove": {
					"component_groups": [
						"eaten4"
					]
				}
			},
			"minecraft:die6": {
				"add": {
					"component_groups": [
						"eaten6"
					]
				},
				"remove": {
					"component_groups": [
						"eaten5"
					]
				}
			},
			"minecraft:die7": {
				"add": {
					"component_groups": [
						"die"
					]
				},
				"remove": {
					"component_groups": [
						"eaten6"
					]
				}
			},
			"tamed_yay": {
				"add": {
					"component_groups": [
						"tamed"
					]
				},
				"remove": {
					"component_groups": [
						"wild"
					]
				}
			},
			"minecraft:start_exploding": {
				"sequence": [
					{
						"filters": {
							"test": "has_component",
							"operator": "!=",
							"value": "minecraft:is_charged"
						},
						"add": {
							"component_groups": [
								"minecraft:exploding"
							]
						}
					},
					{
						"filters": {
							"test": "has_component",
							"value": "minecraft:is_charged"
						},
						"add": {
							"component_groups": [
								"minecraft:charged_exploding"
							]
						}
					}
				]
			},
			"minecraft:stop_exploding": {
				"remove": {
					"component_groups": [
						"minecraft:exploding"
					]
				}
			}
		}
	}
}