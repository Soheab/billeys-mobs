//swim mode and walk mode dont do anything, they used to be part of the old
//(before 3.3, which means before early January 2021)
//buggy duck movement system where they'd randomly go to water and then back
//to land, and now im afraid that removing them might break the ducks
{
    "format_version": "1.16.0",
    "minecraft:entity": {
        "description": {
            "identifier": "billey:duck",
            "runtime_identifier": "minecraft:cat", //for sleeping with owner animation
            "is_spawnable": true,
            "is_summonable": true,
            "is_experimental": false,
            "scripts": {
                "animate": [
                    {
                        "fix": "query.variant == 2 && !query.is_baby"
                    },
                    "gold",
                    "tame",
                    "slowfall"
                ]
            },
            "animations": {
                "fix": "controller.animation.billsnail.fix",
                "gold": "controller.animation.billduck.gold",
                "slowfall": "animation.billduck.slowfall",
                "tame": "controller.animation.billeysmobs.tame"
            },
            "properties": {
                "property:centipedehat": {
                    "values": [
                        0,
                        1
                    ],
                    "default": 0,
                    "client_sync": true
                }
            }
        },
        "component_groups": {
            //you can remove components that are in the components object instead of
            //some component group by making a component group that has the component you wanted to remove
            //even if you never added that component group
            "panicxd": {
                "minecraft:behavior.panic": {}
            },
            "despawned": {
                "minecraft:instant_despawn": {}
            },
            "attackmonster": {
                //unlike its name which suggests all it does is make ducks attack monsters,
                //this component group contains all the behaviors of thrown ducks
                "minecraft:behavior.beg": {},
                "minecraft:behavior.follow_owner": {
                    "priority": 4,
                    "speed_multiplier": 1.0,
                    "start_distance": 64,
                    "stop_distance": 10
                },
                "minecraft:damage_sensor": {
                    "triggers": [
                        {
                            "on_damage": {
                                "event": "add_damaged_tag"
                            },
                            "cause": "any"
                        }
                    ]
                },
                "minecraft:behavior.avoid_mob_type": {
                    "priority": -2,
                    "max_flee": 16,
                    "entity_types": [
                        {
                            "filters": {
                                "test": "has_component",
                                "subject": "other",
                                "value": "minecraft:explode"
                            },
                            "max_dist": 12,
                            "walk_speed_multiplier": 1.4,
                            "sprint_speed_multiplier": 1.4
                        }
                    ]
                },
                "minecraft:behavior.tempt": {
                    "priority": 4,
                    "speed_multiplier": 1,
                    "items": [
                        "bread",
                        "wheat_seeds",
                        "melon_seeds",
                        "pumpkin_seeds",
                        "beetroot_seeds",
                        "carrot",
                        "golden_carrot",
                        "melon",
                        "billey:sand_banana"
                    ]
                },
                "minecraft:interact": {
                    "interactions": {
                        "interact_text": "action.interact.pick_up",
                        "play_sounds": "plop",
                        "on_interact": {
                            "event": "get_picked_up",
                            "target": "self",
                            "filters": {
                                "any_of": [
                                    {
                                        "test": "is_owner",
                                        "subject": "other",
                                        "value": true
                                    },
                                    {
                                        "test": "has_tag",
                                        "subject": "self",
                                        "operator": "not",
                                        "value": "tamed"
                                    }
                                ]
                            }
                        }
                    }
                },
                "minecraft:is_tamed": {},
                "minecraft:health": {
                    "value": 8,
                    "max": 8
                },
                "minecraft:movement": {
                    "value": 0.3
                },
                "minecraft:behavior.nearest_attackable_target": {
                    "priority": 3,
                    "entity_types": [
                        {
                            "filters": {
                                "none_of": [
                                    { //inanimate means armor stands, boats, paintings, etc
                                        "test": "is_family",
                                        "subject": "other",
                                        "value": "inanimate"
                                    },
                                    {
                                        "test": "is_family",
                                        "subject": "other",
                                        "value": "duck"
                                    },
                                    {
                                        "test": "is_family",
                                        "subject": "other",
                                        "value": "duck_centipede"
                                    },
                                    {
                                        "test": "is_family",
                                        "subject": "other",
                                        "value": "creeper"
                                    },
                                    {
                                        "test": "has_component",
                                        "subject": "other",
                                        "value": "minecraft:is_tamed"
                                    },
                                    {
                                        "test": "is_owner",
                                        "subject": "other"
                                    }
                                ]
                            },
                            "max_dist": 10
                        }
                    ]
                }
            },
            "dyeblack": {
                "minecraft:color": {
                    "value": 15
                }
            },
            "fromcentipede": {
                "minecraft:persistent": {},
                "minecraft:color": {
                    "value": 15
                },
                "minecraft:tameable": {
                    "probability": 1.0,
                    "tame_items": [
                        "bread",
                        "wheat_seeds",
                        "melon_seeds",
                        "pumpkin_seeds",
                        "beetroot_seeds",
                        "carrot",
                        "golden_carrot",
                        "melon",
                        "billey:sand_banana",
                        "billey:raw_snail",
                        "billey:raw_snail_s",
                        "billey:raw_snail_w",
                        "billey:cooked_snail",
                        "billey:cooked_snail_s",
                        "billey:cooked_snail_w"
                    ],
                    "tame_event": {
                        "event": "yay",
                        "target": "self"
                    }
                },
                "minecraft:behavior.float": {
                    "priority": 0
                },
                "minecraft:behavior.nearest_attackable_target": {
                    "priority": 4,
                    "entity_types": [
                        {
                            "filters": {
                                "any_of": [
                                    {
                                        "test": "is_family",
                                        "subject": "other",
                                        "value": "monster"
                                    }
                                ]
                            },
                            "max_dist": 10
                        }
                    ]
                },
                "minecraft:health": {
                    "value": 20,
                    "max": 20
                },
                "minecraft:fire_immune": {},
                "minecraft:shooter": {
                    "def": "billey:end_rod_projectile"
                },
                "minecraft:behavior.ranged_attack": {
                    "priority": 4,
                    "attack_interval_min": 0,
                    "attack_interval_max": 2,
                    "attack_radius_min": 5,
                    "attack_radius": 20.0
                },
                "minecraft:attack": {
                    "damage": 7,
                    "effect_duration": 10,
                    "effect_name": "wither"
                }
            },
            "cock": {
                "minecraft:is_shaking": {},
                "minecraft:transformation": {
                    "delay": 7,
                    "keep_owner": true,
                    "drop_inventory": true,
                    "into": "billey:banana_duck"
                }
            },
            "kromatik": {
                "minecraft:color": {
                    "value": 0
                },
                "minecraft:is_illager_captain": {}
            },
            "chest": {
                "minecraft:item_hopper": {},
                "minecraft:inventory": {
                    "inventory_size": 63,
                    "can_be_siphoned_from": true,
                    "container_type": "horse"
                },
                "minecraft:is_chested": {}
            },
            "hat": {
                "minecraft:is_saddled": {},
                "minecraft:color": {
                    "value": 12
                }
            },
            "minecraft:duck_baby": {
                "minecraft:is_baby": {},
                "minecraft:behavior.follow_parent": {
                    "priority": 5,
                    "speed_multiplier": 1.1
                }
            },
            "no_armor": {
                "minecraft:damage_sensor": {
                    "triggers": [
                        {
                            "cause": "all",
                            "on_damage": {
                                "filters": {
                                    "test": "has_component",
                                    "operator": "not",
                                    "value": "minecraft:is_saddled"
                                }
                            },
                            "damage_multiplier": 1.0
                        },
                        {
                            "cause": "fall",
                            "deals_damage": false
                        },
                        {
                            "cause": "all",
                            "deals_damage": false,
                            "on_damage_sound_event": "armor.equip_generic",
                            "on_damage": {
                                "event": "nohat",
                                "target": "self",
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_damage",
                                            "operator": "not",
                                            "value": "magic"
                                        },
                                        {
                                            "test": "has_component",
                                            "value": "minecraft:is_saddled"
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "on_damage": {
                                "filters": {
                                    "test": "is_family",
                                    "subject": "other",
                                    "value": "endrodprojectilexd"
                                }
                            },
                            "deals_damage": false
                        }
                    ]
                },
                "minecraft:interact": {
                    "interactions": [
                        {
                            "play_sounds": "plop",
                            "swing": true,
                            "interact_text": "action.interact.wander",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "stick"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "value": "minecraft:behavior.follow_owner"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "eventwander",
                                "target": "self"
                            }
                        },
                        {
                            "play_sounds": "plop",
                            "swing": true,
                            "interact_text": "action.interact.follow",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "stick"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "operator": "not",
                                            "value": "minecraft:behavior.follow_owner"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "eventfollow",
                                "target": "self"
                            }
                        },
                        {
                            "interact_text": "action.interact.pet",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "operator": "!=",
                                            "value": "billey:swordfish"
                                        },
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "operator": "!=",
                                            "value": "billey:golden_swordfish"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_sneaking",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "bepetted",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "eat",
                            "interact_text": "action.interact.feed",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:sand_banana"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_sleeping",
                                            "subject": "self",
                                            "value": false
                                        }
                                    ]
                                },
                                "event": "beenfedabanana",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "armor.equip_generic",
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:leather_pet_armor"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "beleather",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "armor.equip_generic",
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:pet_hat"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "operator": "not",
                                            "value": "minecraft:is_saddled"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "wearhat",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "armor.equip_generic",
                            "interact_text": "action.interact.use",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "minecraft:dried_kelp"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "value": "minecraft:is_saddled"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "blackstripehat",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": false,
                            "play_sounds": "armor.equip_generic",
                            "spawn_items": {
                                "table": "loot_tables/entities/billeyhat.json"
                            },
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:pet_hat"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "value": "minecraft:is_saddled"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "nohat",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "armor.equip_generic",
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "chest"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "operator": "not",
                                            "value": "minecraft:is_chested"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "wearchest",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": false,
                            "play_sounds": "armor.equip_generic",
                            "spawn_items": {
                                "table": "loot_tables/entities/billeychest.json"
                            },
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "chest"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "value": "minecraft:is_chested"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "nochest",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "armor.equip_generic",
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:golden_pet_armor"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "begolden",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "armor.equip_generic",
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:chain_pet_armor"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "bechain",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "armor.equip_generic",
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:iron_pet_armor"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "beiron",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "armor.equip_generic",
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:diamond_pet_armor"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "bediamond",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "armor.equip_generic",
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:netherite_pet_armor"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "benetherite",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "armor.equip_generic",
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:endrod_pet_armor"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "value": "minecraft:shooter",
                                            "operator": "not"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "beendrod",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "milk",
                            "interact_text": "action.interact.use",
                            "transform_to_item": "glass_bottle",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:colorful_bottle"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "kroma",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "milk",
                            "interact_text": "action.interact.use",
                            "transform_to_item": "glass_bottle",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:colorless_bottle"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "nokroma",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "milk",
                            "interact_text": "action.interact.use",
                            "transform_to_item": "glass_bottle",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:wcat_bottle"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "bebananaduck",
                                "target": "self"
                            }
                        }
                    ]
                },
                "minecraft:mark_variant": {
                    "value": 0
                }
            },
            "leather_armor": {
                "minecraft:color": {
                    "value": 12
                },
                "minecraft:damage_sensor": {
                    "triggers": [
                        {
                            "cause": "all",
                            "on_damage": {
                                "filters": {
                                    "test": "has_component",
                                    "operator": "not",
                                    "value": "minecraft:is_saddled"
                                }
                            },
                            "damage_multiplier": 0.9
                        },
                        {
                            "cause": "fall",
                            "deals_damage": false
                        },
                        {
                            "cause": "all",
                            "deals_damage": false,
                            "on_damage_sound_event": "armor.equip_generic",
                            "on_damage": {
                                "event": "nohat",
                                "target": "self",
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_damage",
                                            "operator": "not",
                                            "value": "magic"
                                        },
                                        {
                                            "test": "has_component",
                                            "value": "minecraft:is_saddled"
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "on_damage": {
                                "filters": {
                                    "test": "is_family",
                                    "subject": "other",
                                    "value": "endrodprojectilexd"
                                }
                            },
                            "deals_damage": false
                        }
                    ]
                },
                "minecraft:interact": {
                    "interactions": [
                        {
                            "play_sounds": "plop",
                            "swing": true,
                            "interact_text": "action.interact.wander",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "stick"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "value": "minecraft:behavior.follow_owner"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "eventwander",
                                "target": "self"
                            }
                        },
                        {
                            "play_sounds": "plop",
                            "swing": true,
                            "interact_text": "action.interact.follow",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "stick"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "operator": "not",
                                            "value": "minecraft:behavior.follow_owner"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "eventfollow",
                                "target": "self"
                            }
                        },
                        {
                            "interact_text": "action.interact.pet",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "operator": "!=",
                                            "value": "billey:swordfish"
                                        },
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "operator": "!=",
                                            "value": "billey:golden_swordfish"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_sneaking",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "bepetted",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "eat",
                            "interact_text": "action.interact.feed",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:sand_banana"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_sleeping",
                                            "subject": "self",
                                            "value": false
                                        }
                                    ]
                                },
                                "event": "beenfedabanana",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "armor.equip_generic",
                            "interact_text": "action.interact.equip",
                            "transform_to_item": "billey:leather_pet_armor",
                            "spawn_items": {
                                "table": "loot_tables/entities/billeydirt.json"
                            },
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "dirt"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "beno",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "armor.equip_generic",
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:pet_hat"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "operator": "not",
                                            "value": "minecraft:is_saddled"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "wearhat",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "armor.equip_generic",
                            "interact_text": "action.interact.use",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "minecraft:dried_kelp"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "value": "minecraft:is_saddled"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "blackstripehat",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": false,
                            "play_sounds": "armor.equip_generic",
                            "spawn_items": {
                                "table": "loot_tables/entities/billeyhat.json"
                            },
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:pet_hat"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "value": "minecraft:is_saddled"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "nohat",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "armor.equip_generic",
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "chest"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "operator": "not",
                                            "value": "minecraft:is_chested"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "wearchest",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": false,
                            "play_sounds": "armor.equip_generic",
                            "spawn_items": {
                                "table": "loot_tables/entities/billeychest.json"
                            },
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "chest"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "value": "minecraft:is_chested"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "nochest",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "milk",
                            "interact_text": "action.interact.use",
                            "transform_to_item": "glass_bottle",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:colorful_bottle"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "kroma",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "milk",
                            "interact_text": "action.interact.use",
                            "transform_to_item": "glass_bottle",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:colorless_bottle"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "nokroma",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "milk",
                            "interact_text": "action.interact.use",
                            "transform_to_item": "glass_bottle",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:wcat_bottle"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "bebananaduck",
                                "target": "self"
                            }
                        }
                    ]
                },
                "minecraft:mark_variant": {
                    "value": 1
                }
            },
            "golden_armor": {
                "minecraft:fire_immune": {},
                "minecraft:damage_sensor": {
                    "triggers": [
                        {
                            "cause": "all",
                            "on_damage": {
                                "filters": {
                                    "test": "has_component",
                                    "operator": "not",
                                    "value": "minecraft:is_saddled"
                                }
                            },
                            "damage_multiplier": 0.8
                        },
                        {
                            "cause": "all",
                            "deals_damage": false,
                            "on_damage_sound_event": "armor.equip_generic",
                            "on_damage": {
                                "event": "nohat",
                                "target": "self",
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_damage",
                                            "operator": "not",
                                            "value": "magic"
                                        },
                                        {
                                            "test": "has_component",
                                            "value": "minecraft:is_saddled"
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "cause": "fall",
                            "deals_damage": false
                        },
                        {
                            "on_damage": {
                                "filters": {
                                    "test": "is_family",
                                    "subject": "other",
                                    "value": "endrodprojectilexd"
                                }
                            },
                            "deals_damage": false
                        }
                    ]
                },
                "minecraft:mark_variant": {
                    "value": 2
                },
                "minecraft:interact": {
                    "interactions": [
                        {
                            "play_sounds": "plop",
                            "swing": true,
                            "interact_text": "action.interact.wander",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "stick"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "value": "minecraft:behavior.follow_owner"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "eventwander",
                                "target": "self"
                            }
                        },
                        {
                            "play_sounds": "plop",
                            "swing": true,
                            "interact_text": "action.interact.follow",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "stick"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "operator": "not",
                                            "value": "minecraft:behavior.follow_owner"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "eventfollow",
                                "target": "self"
                            }
                        },
                        {
                            "interact_text": "action.interact.pet",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "operator": "!=",
                                            "value": "billey:swordfish"
                                        },
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "operator": "!=",
                                            "value": "billey:golden_swordfish"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_sneaking",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "bepetted",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "eat",
                            "interact_text": "action.interact.feed",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:sand_banana"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_sleeping",
                                            "subject": "self",
                                            "value": false
                                        }
                                    ]
                                },
                                "event": "beenfedabanana",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "armor.equip_generic",
                            "interact_text": "action.interact.equip",
                            "transform_to_item": "billey:golden_pet_armor",
                            "spawn_items": {
                                "table": "loot_tables/entities/billeydirt.json"
                            },
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "dirt"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "beno",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "armor.equip_generic",
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:pet_hat"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "operator": "not",
                                            "value": "minecraft:is_saddled"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "wearhat",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "armor.equip_generic",
                            "interact_text": "action.interact.use",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "minecraft:dried_kelp"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "value": "minecraft:is_saddled"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "blackstripehat",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": false,
                            "play_sounds": "armor.equip_generic",
                            "spawn_items": {
                                "table": "loot_tables/entities/billeyhat.json"
                            },
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:pet_hat"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "value": "minecraft:is_saddled"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "nohat",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "armor.equip_generic",
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "chest"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "operator": "not",
                                            "value": "minecraft:is_chested"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "wearchest",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": false,
                            "play_sounds": "armor.equip_generic",
                            "spawn_items": {
                                "table": "loot_tables/entities/billeychest.json"
                            },
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "chest"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "value": "minecraft:is_chested"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "nochest",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "milk",
                            "interact_text": "action.interact.use",
                            "transform_to_item": "glass_bottle",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:colorful_bottle"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "kroma",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "milk",
                            "interact_text": "action.interact.use",
                            "transform_to_item": "glass_bottle",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:colorless_bottle"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "nokroma",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "milk",
                            "interact_text": "action.interact.use",
                            "transform_to_item": "glass_bottle",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:wcat_bottle"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "bebananaduck",
                                "target": "self"
                            }
                        }
                    ]
                }
            },
            "chain_armor": {
                "minecraft:damage_sensor": {
                    "triggers": [
                        {
                            "cause": "all",
                            "on_damage": {
                                "filters": {
                                    "test": "has_component",
                                    "operator": "not",
                                    "value": "minecraft:is_saddled"
                                }
                            },
                            "damage_multiplier": 0.75
                        },
                        {
                            "cause": "fall",
                            "deals_damage": false
                        },
                        {
                            "cause": "all",
                            "deals_damage": false,
                            "on_damage_sound_event": "armor.equip_generic",
                            "on_damage": {
                                "event": "nohat",
                                "target": "self",
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_damage",
                                            "operator": "not",
                                            "value": "magic"
                                        },
                                        {
                                            "test": "has_component",
                                            "value": "minecraft:is_saddled"
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "on_damage": {
                                "filters": {
                                    "test": "is_family",
                                    "subject": "other",
                                    "value": "endrodprojectilexd"
                                }
                            },
                            "deals_damage": false
                        }
                    ]
                },
                "minecraft:mark_variant": {
                    "value": 3
                },
                "minecraft:interact": {
                    "interactions": [
                        {
                            "play_sounds": "plop",
                            "swing": true,
                            "interact_text": "action.interact.wander",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "stick"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "value": "minecraft:behavior.follow_owner"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "eventwander",
                                "target": "self"
                            }
                        },
                        {
                            "play_sounds": "plop",
                            "swing": true,
                            "interact_text": "action.interact.follow",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "stick"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "operator": "not",
                                            "value": "minecraft:behavior.follow_owner"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "eventfollow",
                                "target": "self"
                            }
                        },
                        {
                            "interact_text": "action.interact.pet",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "operator": "!=",
                                            "value": "billey:swordfish"
                                        },
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "operator": "!=",
                                            "value": "billey:golden_swordfish"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_sneaking",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "bepetted",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "eat",
                            "interact_text": "action.interact.feed",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:sand_banana"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_sleeping",
                                            "subject": "self",
                                            "value": false
                                        }
                                    ]
                                },
                                "event": "beenfedabanana",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "armor.equip_generic",
                            "interact_text": "action.interact.equip",
                            "transform_to_item": "billey:chain_pet_armor",
                            "spawn_items": {
                                "table": "loot_tables/entities/billeydirt.json"
                            },
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "dirt"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "beno",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "milk",
                            "interact_text": "action.interact.use",
                            "transform_to_item": "glass_bottle",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:colorful_bottle"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "kroma",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "armor.equip_generic",
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:pet_hat"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "operator": "not",
                                            "value": "minecraft:is_saddled"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "wearhat",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "armor.equip_generic",
                            "interact_text": "action.interact.use",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "minecraft:dried_kelp"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "value": "minecraft:is_saddled"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "blackstripehat",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": false,
                            "play_sounds": "armor.equip_generic",
                            "spawn_items": {
                                "table": "loot_tables/entities/billeyhat.json"
                            },
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:pet_hat"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "value": "minecraft:is_saddled"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "nohat",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "armor.equip_generic",
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "chest"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "operator": "not",
                                            "value": "minecraft:is_chested"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "wearchest",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": false,
                            "play_sounds": "armor.equip_generic",
                            "spawn_items": {
                                "table": "loot_tables/entities/billeychest.json"
                            },
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "chest"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "value": "minecraft:is_chested"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "nochest",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "milk",
                            "interact_text": "action.interact.use",
                            "transform_to_item": "glass_bottle",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:colorless_bottle"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "nokroma",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "milk",
                            "interact_text": "action.interact.use",
                            "transform_to_item": "glass_bottle",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:wcat_bottle"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "bebananaduck",
                                "target": "self"
                            }
                        }
                    ]
                }
            },
            "iron_armor": {
                "minecraft:damage_sensor": {
                    "triggers": [
                        {
                            "cause": "all",
                            "on_damage": {
                                "filters": {
                                    "test": "has_component",
                                    "operator": "not",
                                    "value": "minecraft:is_saddled"
                                }
                            },
                            "damage_multiplier": 0.7
                        },
                        {
                            "cause": "fall",
                            "deals_damage": false
                        },
                        {
                            "cause": "all",
                            "deals_damage": false,
                            "on_damage_sound_event": "armor.equip_generic",
                            "on_damage": {
                                "event": "nohat",
                                "target": "self",
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_damage",
                                            "operator": "not",
                                            "value": "magic"
                                        },
                                        {
                                            "test": "has_component",
                                            "value": "minecraft:is_saddled"
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "on_damage": {
                                "filters": {
                                    "test": "is_family",
                                    "subject": "other",
                                    "value": "endrodprojectilexd"
                                }
                            },
                            "deals_damage": false
                        }
                    ]
                },
                "minecraft:mark_variant": {
                    "value": 4
                },
                "minecraft:interact": {
                    "interactions": [
                        {
                            "play_sounds": "plop",
                            "swing": true,
                            "interact_text": "action.interact.wander",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "stick"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "value": "minecraft:behavior.follow_owner"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "eventwander",
                                "target": "self"
                            }
                        },
                        {
                            "play_sounds": "plop",
                            "swing": true,
                            "interact_text": "action.interact.follow",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "stick"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "operator": "not",
                                            "value": "minecraft:behavior.follow_owner"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "eventfollow",
                                "target": "self"
                            }
                        },
                        {
                            "interact_text": "action.interact.pet",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "operator": "!=",
                                            "value": "billey:swordfish"
                                        },
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "operator": "!=",
                                            "value": "billey:golden_swordfish"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_sneaking",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "bepetted",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "eat",
                            "interact_text": "action.interact.feed",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:sand_banana"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_sleeping",
                                            "subject": "self",
                                            "value": false
                                        }
                                    ]
                                },
                                "event": "beenfedabanana",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "armor.equip_generic",
                            "interact_text": "action.interact.equip",
                            "transform_to_item": "billey:iron_pet_armor",
                            "spawn_items": {
                                "table": "loot_tables/entities/billeydirt.json"
                            },
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "dirt"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "beno",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "armor.equip_generic",
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:pet_hat"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "operator": "not",
                                            "value": "minecraft:is_saddled"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "wearhat",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "armor.equip_generic",
                            "interact_text": "action.interact.use",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "minecraft:dried_kelp"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "value": "minecraft:is_saddled"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "blackstripehat",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": false,
                            "play_sounds": "armor.equip_generic",
                            "spawn_items": {
                                "table": "loot_tables/entities/billeyhat.json"
                            },
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:pet_hat"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "value": "minecraft:is_saddled"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "nohat",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "armor.equip_generic",
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "chest"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "operator": "not",
                                            "value": "minecraft:is_chested"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "wearchest",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": false,
                            "play_sounds": "armor.equip_generic",
                            "spawn_items": {
                                "table": "loot_tables/entities/billeychest.json"
                            },
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "chest"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "value": "minecraft:is_chested"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "nochest",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "milk",
                            "interact_text": "action.interact.use",
                            "transform_to_item": "glass_bottle",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:colorful_bottle"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "kroma",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "milk",
                            "interact_text": "action.interact.use",
                            "transform_to_item": "glass_bottle",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:colorless_bottle"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "nokroma",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "milk",
                            "interact_text": "action.interact.use",
                            "transform_to_item": "glass_bottle",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:wcat_bottle"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "bebananaduck",
                                "target": "self"
                            }
                        }
                    ]
                }
            },
            "diamond_armor": {
                "minecraft:damage_sensor": {
                    "triggers": [
                        {
                            "cause": "all",
                            "on_damage": {
                                "filters": {
                                    "test": "has_component",
                                    "operator": "not",
                                    "value": "minecraft:is_saddled"
                                }
                            },
                            "damage_multiplier": 0.6
                        },
                        {
                            "cause": "fall",
                            "deals_damage": false
                        },
                        {
                            "cause": "all",
                            "deals_damage": false,
                            "on_damage_sound_event": "armor.equip_generic",
                            "on_damage": {
                                "event": "nohat",
                                "target": "self",
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_damage",
                                            "operator": "not",
                                            "value": "magic"
                                        },
                                        {
                                            "test": "has_component",
                                            "value": "minecraft:is_saddled"
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "on_damage": {
                                "filters": {
                                    "test": "is_family",
                                    "subject": "other",
                                    "value": "endrodprojectilexd"
                                }
                            },
                            "deals_damage": false
                        }
                    ]
                },
                "minecraft:mark_variant": {
                    "value": 5
                },
                "minecraft:interact": {
                    "interactions": [
                        {
                            "play_sounds": "plop",
                            "swing": true,
                            "interact_text": "action.interact.wander",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "stick"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "value": "minecraft:behavior.follow_owner"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "eventwander",
                                "target": "self"
                            }
                        },
                        {
                            "play_sounds": "plop",
                            "swing": true,
                            "interact_text": "action.interact.follow",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "stick"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "operator": "not",
                                            "value": "minecraft:behavior.follow_owner"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "eventfollow",
                                "target": "self"
                            }
                        },
                        {
                            "interact_text": "action.interact.pet",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "operator": "!=",
                                            "value": "billey:swordfish"
                                        },
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "operator": "!=",
                                            "value": "billey:golden_swordfish"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_sneaking",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "bepetted",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "eat",
                            "interact_text": "action.interact.feed",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:sand_banana"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_sleeping",
                                            "subject": "self",
                                            "value": false
                                        }
                                    ]
                                },
                                "event": "beenfedabanana",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "armor.equip_generic",
                            "interact_text": "action.interact.equip",
                            "transform_to_item": "billey:diamond_pet_armor",
                            "spawn_items": {
                                "table": "loot_tables/entities/billeydirt.json"
                            },
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "dirt"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "beno",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "armor.equip_generic",
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:pet_hat"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "operator": "not",
                                            "value": "minecraft:is_saddled"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "wearhat",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "armor.equip_generic",
                            "interact_text": "action.interact.use",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "minecraft:dried_kelp"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "value": "minecraft:is_saddled"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "blackstripehat",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": false,
                            "play_sounds": "armor.equip_generic",
                            "spawn_items": {
                                "table": "loot_tables/entities/billeyhat.json"
                            },
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:pet_hat"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "value": "minecraft:is_saddled"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "nohat",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "armor.equip_generic",
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "chest"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "operator": "not",
                                            "value": "minecraft:is_chested"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "wearchest",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": false,
                            "play_sounds": "armor.equip_generic",
                            "spawn_items": {
                                "table": "loot_tables/entities/billeychest.json"
                            },
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "chest"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "value": "minecraft:is_chested"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "nochest",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "milk",
                            "interact_text": "action.interact.use",
                            "transform_to_item": "glass_bottle",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:colorful_bottle"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "kroma",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "milk",
                            "interact_text": "action.interact.use",
                            "transform_to_item": "glass_bottle",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:colorless_bottle"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "nokroma",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "milk",
                            "interact_text": "action.interact.use",
                            "transform_to_item": "glass_bottle",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:wcat_bottle"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "bebananaduck",
                                "target": "self"
                            }
                        }
                    ]
                }
            },
            "netherite_armor": {
                "minecraft:damage_sensor": {
                    "triggers": [
                        {
                            "cause": "all",
                            "on_damage": {
                                "filters": {
                                    "test": "has_component",
                                    "operator": "not",
                                    "value": "minecraft:is_saddled"
                                }
                            },
                            "damage_multiplier": 0.5
                        },
                        {
                            "cause": "fall",
                            "deals_damage": false
                        },
                        {
                            "cause": "all",
                            "deals_damage": false,
                            "on_damage_sound_event": "armor.equip_generic",
                            "on_damage": {
                                "event": "nohat",
                                "target": "self",
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_damage",
                                            "operator": "not",
                                            "value": "magic"
                                        },
                                        {
                                            "test": "has_component",
                                            "value": "minecraft:is_saddled"
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "on_damage": {
                                "filters": {
                                    "test": "is_family",
                                    "subject": "other",
                                    "value": "endrodprojectilexd"
                                }
                            },
                            "deals_damage": false
                        }
                    ]
                },
                "minecraft:mark_variant": {
                    "value": 6
                },
                "minecraft:knockback_resistance": {
                    "value": 0.5
                },
                "minecraft:interact": {
                    "interactions": [
                        {
                            "play_sounds": "plop",
                            "swing": true,
                            "interact_text": "action.interact.wander",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "stick"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "value": "minecraft:behavior.follow_owner"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "eventwander",
                                "target": "self"
                            }
                        },
                        {
                            "play_sounds": "plop",
                            "swing": true,
                            "interact_text": "action.interact.follow",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "stick"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "operator": "not",
                                            "value": "minecraft:behavior.follow_owner"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "eventfollow",
                                "target": "self"
                            }
                        },
                        {
                            "interact_text": "action.interact.pet",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "operator": "!=",
                                            "value": "billey:swordfish"
                                        },
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "operator": "!=",
                                            "value": "billey:golden_swordfish"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_sneaking",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "bepetted",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "eat",
                            "interact_text": "action.interact.feed",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:sand_banana"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_sleeping",
                                            "subject": "self",
                                            "value": false
                                        }
                                    ]
                                },
                                "event": "beenfedabanana",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "armor.equip_generic",
                            "interact_text": "action.interact.equip",
                            "transform_to_item": "billey:netherite_pet_armor",
                            "spawn_items": {
                                "table": "loot_tables/entities/billeydirt.json"
                            },
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "dirt"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "beno",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "armor.equip_generic",
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:pet_hat"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "operator": "not",
                                            "value": "minecraft:is_saddled"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "wearhat",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "armor.equip_generic",
                            "interact_text": "action.interact.use",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "minecraft:dried_kelp"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "value": "minecraft:is_saddled"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "blackstripehat",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": false,
                            "play_sounds": "armor.equip_generic",
                            "spawn_items": {
                                "table": "loot_tables/entities/billeyhat.json"
                            },
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:pet_hat"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "value": "minecraft:is_saddled"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "nohat",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "armor.equip_generic",
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "chest"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "operator": "not",
                                            "value": "minecraft:is_chested"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "wearchest",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": false,
                            "play_sounds": "armor.equip_generic",
                            "spawn_items": {
                                "table": "loot_tables/entities/billeychest.json"
                            },
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "chest"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "value": "minecraft:is_chested"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "nochest",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "milk",
                            "interact_text": "action.interact.use",
                            "transform_to_item": "glass_bottle",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:colorful_bottle"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "kroma",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "milk",
                            "interact_text": "action.interact.use",
                            "transform_to_item": "glass_bottle",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:colorless_bottle"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "nokroma",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "milk",
                            "interact_text": "action.interact.use",
                            "transform_to_item": "glass_bottle",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:wcat_bottle"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "bebananaduck",
                                "target": "self"
                            }
                        }
                    ]
                }
            },
            "endrod_armor": {
                "minecraft:shooter": {
                    "def": "billey:end_rod_projectile"
                },
                "minecraft:knockback_resistance": {
                    "value": 0.25
                },
                "minecraft:behavior.ranged_attack": {
                    "priority": -1,
                    "attack_interval_min": 0.1,
                    "attack_interval_max": 2,
                    "attack_radius": 20.0
                },
                "minecraft:color": {
                    "value": 0
                },
                "minecraft:damage_sensor": {
                    "triggers": [
                        {
                            "cause": "all",
                            "on_damage": {
                                "filters": {
                                    "test": "has_component",
                                    "operator": "not",
                                    "value": "minecraft:is_saddled"
                                }
                            },
                            "damage_multiplier": 0.4
                        },
                        {
                            "cause": "fall",
                            "deals_damage": false
                        },
                        {
                            "cause": "all",
                            "deals_damage": false,
                            "on_damage_sound_event": "armor.equip_generic",
                            "on_damage": {
                                "event": "nohat",
                                "target": "self",
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_damage",
                                            "operator": "not",
                                            "value": "magic"
                                        },
                                        {
                                            "test": "has_component",
                                            "value": "minecraft:is_saddled"
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "on_damage": {
                                "filters": {
                                    "test": "is_family",
                                    "subject": "other",
                                    "value": "endrodprojectilexd"
                                }
                            },
                            "deals_damage": false
                        }
                    ]
                },
                "minecraft:mark_variant": {
                    "value": 7
                },
                "minecraft:interact": {
                    "interactions": [
                        {
                            "play_sounds": "plop",
                            "swing": true,
                            "interact_text": "action.interact.wander",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "stick"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "value": "minecraft:behavior.follow_owner"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "eventwander",
                                "target": "self"
                            }
                        },
                        {
                            "play_sounds": "plop",
                            "swing": true,
                            "interact_text": "action.interact.follow",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "stick"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "operator": "not",
                                            "value": "minecraft:behavior.follow_owner"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "eventfollow",
                                "target": "self"
                            }
                        },
                        {
                            "interact_text": "action.interact.pet",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "operator": "!=",
                                            "value": "billey:swordfish"
                                        },
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "operator": "!=",
                                            "value": "billey:golden_swordfish"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_sneaking",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "bepetted",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "eat",
                            "interact_text": "action.interact.feed",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:sand_banana"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_sleeping",
                                            "subject": "self",
                                            "value": false
                                        }
                                    ]
                                },
                                "event": "beenfedabanana",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "armor.equip_generic",
                            "interact_text": "action.interact.equip",
                            "transform_to_item": "billey:endrod_pet_armor",
                            "spawn_items": {
                                "table": "loot_tables/entities/billeydirt.json"
                            },
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "dirt"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "beno",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "armor.equip_generic",
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:pet_hat"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "operator": "not",
                                            "value": "minecraft:is_saddled"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "wearhat",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "armor.equip_generic",
                            "interact_text": "action.interact.use",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "minecraft:dried_kelp"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "value": "minecraft:is_saddled"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "blackstripehat",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": false,
                            "play_sounds": "armor.equip_generic",
                            "spawn_items": {
                                "table": "loot_tables/entities/billeyhat.json"
                            },
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:pet_hat"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "value": "minecraft:is_saddled"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "nohat",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "armor.equip_generic",
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "chest"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "operator": "not",
                                            "value": "minecraft:is_chested"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "wearchest",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": false,
                            "play_sounds": "armor.equip_generic",
                            "spawn_items": {
                                "table": "loot_tables/entities/billeychest.json"
                            },
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "chest"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "value": "minecraft:is_chested"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "nochest",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "milk",
                            "interact_text": "action.interact.use",
                            "transform_to_item": "glass_bottle",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:colorful_bottle"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "kroma",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "milk",
                            "interact_text": "action.interact.use",
                            "transform_to_item": "glass_bottle",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:colorless_bottle"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "nokroma",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "milk",
                            "interact_text": "action.interact.use",
                            "transform_to_item": "glass_bottle",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:wcat_bottle"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "bebananaduck",
                                "target": "self"
                            }
                        }
                    ]
                }
            },
            "wildbaby": {
                "minecraft:scale": {
                    "value": 0.5
                }
            },
            "agelol": {
                "minecraft:scale_by_age": {
                    "start_scale": 0.5,
                    "end_scale": 0.8
                },
                "minecraft:ageable": {
                    "duration": 4800,
                    "feedItems": [
                        "bread",
                        "wheat_seeds",
                        "melon_seeds",
                        "pumpkin_seeds",
                        "beetroot_seeds",
                        "carrot",
                        "golden_carrot",
                        "melon"
                    ],
                    "grow_up": {
                        "event": "minecraft:ageable_grow_up",
                        "target": "self"
                    }
                }
            },
            "white": { //pekin
                "minecraft:variant": {
                    "value": 0
                },
                "minecraft:rideable": {
                    "seat_count": 1,
                    "family_types": [
                        "zombie"
                    ],
                    "seats": {
                        "position": [
                            0,
                            0.4,
                            0
                        ]
                    }
                }
            },
            "brown": { //mallard
                "minecraft:variant": {
                    "value": 1
                },
                "minecraft:rideable": {
                    "seat_count": 1,
                    "family_types": [
                        "zombie"
                    ],
                    "seats": {
                        "position": [
                            0,
                            0.4,
                            0
                        ]
                    }
                }
            },
            "mandarin": { //mandarin
                "minecraft:variant": {
                    "value": 3
                },
                "minecraft:rideable": {
                    "seat_count": 1,
                    "family_types": [
                        "monster"
                    ],
                    "seats": {
                        "position": [
                            0,
                            0.4,
                            0
                        ]
                    }
                }
            },
            "blue": { //blue beak
                "minecraft:variant": {
                    "value": 4
                },
                "minecraft:rideable": {
                    "seat_count": 1,
                    "family_types": [
                        "monster"
                    ],
                    "seats": {
                        "position": [
                            0,
                            0.4,
                            0
                        ]
                    }
                }
            },
            "black": { //black patches
                "minecraft:variant": {
                    "value": 5
                },
                "minecraft:rideable": {
                    "seat_count": 1,
                    "family_types": [
                        "skeleton"
                    ],
                    "seats": {
                        "position": [
                            0,
                            0.4,
                            0
                        ]
                    }
                }
            },
            "head": { //white head
                "minecraft:variant": {
                    "value": 6
                },
                "minecraft:rideable": {
                    "seat_count": 1,
                    "family_types": [
                        "skeleton"
                    ],
                    "seats": {
                        "position": [
                            0,
                            0.4,
                            0
                        ]
                    }
                }
            },
            "whole": { //black
                "minecraft:variant": {
                    "value": 7
                },
                "minecraft:rideable": {
                    "seat_count": 1,
                    "family_types": [
                        "skeleton"
                    ],
                    "seats": {
                        "position": [
                            0,
                            0.4,
                            0
                        ]
                    }
                }
            },
            "golden": {
                "minecraft:variant": {
                    "value": 2
                }
            },
            "gold": {
                "minecraft:experience_reward": {
                    "on_bred": "Math.Random(1,7)",
                    "on_death": "query.life_time / 30"
                },
                "minecraft:behavior.mount_pathing": {
                    "priority": 1,
                    "speed_multiplier": 1.25,
                    "target_dist": 0.0,
                    "track_target": true
                },
                "minecraft:behavior.controlled_by_player": {
                    "priority": 0
                },
                "minecraft:item_controllable": {
                    "control_items": [
                        "billey:swordfish",
                        "billey:golden_swordfish"
                    ]
                },
                "minecraft:boostable": {
                    "speed_multiplier": 4.0,
                    "duration": 5.0,
                    "boost_items": [
                        {
                            "item": "billey:swordfish",
                            "damage": 1,
                            "replace_item": "billey:swordcooked"
                        },
                        {
                            "item": "billey:golden_swordfish",
                            "damage": 1,
                            "replace_item": "billey:swordcooked"
                        }
                    ]
                },
                "minecraft:rideable": {
                    "seat_count": 1,
                    "rider_can_interact": true,
                    "family_types": [
                        "player"
                    ],
                    "seats": {
                        "position": [
                            0,
                            0.4,
                            0
                        ]
                    }
                }
            },
            "minecraft:duck_adult": {
                "minecraft:experience_reward": {
                    "on_bred": "Math.Random(1,7)",
                    "on_death": "query.last_hit_by_player ? Math.Random(1,3) : 0"
                },
                "minecraft:loot": {
                    "table": "loot_tables/entities/chicken.json"
                },
                "minecraft:scale": {
                    "value": 1
                },
                "minecraft:breedable": {
                    "require_tame": true,
                    "allow_sitting": true,
                    "require_full_health": true,
                    "breeds_with": [
                        {
                            "mateType": "billey:duck",
                            "babyType": "billey:duck",
                            "breed_event": {
                                "event": "minecraft:entity_born",
                                "target": "baby"
                            }
                        },
                        {
                            "mateType": "billey:goose",
                            "babyType": "billey:goose",
                            "breed_event": {
                                "event": "minecraft:entity_born_black",
                                "target": "baby"
                            }
                        },
                        {
                            "mate_type": "billey:orange_penguin",
                            "baby_type": "billey:orange_penguin",
                            "breed_event": {
                                "event": "minecraft:entity_born_diamond",
                                "target": "baby"
                            }
                        },
                        {
                            "mateType": "billey:pigeon",
                            "babyType": "billey:pigeon",
                            "breed_event": {
                                "event": "minecraft:entity_born_white",
                                "target": "baby"
                            }
                        },
                        {
                            "mateType": "billey:penguin",
                            "babyType": "billey:duck",
                            "breed_event": {
                                "event": "minecraft:entity_born_golden",
                                "target": "baby"
                            }
                        },
                        {
                            "mateType": "billey:banana_duck",
                            "babyType": "billey:banana_duck",
                            "breed_event": {
                                "event": "minecraft:entity_born_green",
                                "target": "baby"
                            }
                        }
                    ],
                    "breed_items": [
                        "bread",
                        "wheat_seeds",
                        "melon_seeds",
                        "pumpkin_seeds",
                        "beetroot_seeds",
                        "carrot",
                        "golden_carrot",
                        "melon"
                    ]
                },
                "minecraft:behavior.breed": {
                    "priority": 3,
                    "speed_multiplier": 1
                },
                "minecraft:spawn_entity": {
                    "entities": {
                        "min_wait_time": 300,
                        "max_wait_time": 900,
                        "spawn_sound": "plop",
                        "spawn_item": "feather",
                        "filters": {
                            "test": "has_component",
                            "subject": "self",
                            "value": "minecraft:is_tamed"
                        }
                    }
                }
            },
            "minecraft:duck_leashed": {
                "minecraft:behavior.move_towards_restriction": {
                    "priority": 2,
                    "speed_multiplier": 1
                }
            },
            "following": {
                "minecraft:behavior.follow_owner": {
                    "priority": 4,
                    "speed_multiplier": 1.25,
                    "start_distance": 10,
                    "stop_distance": 2
                }
            },
            "tamed": {
                "minecraft:behavior.tempt": {
                    "priority": 4,
                    "speed_multiplier": 1,
                    "items": [
                        "bread",
                        "wheat_seeds",
                        "melon_seeds",
                        "pumpkin_seeds",
                        "beetroot_seeds",
                        "carrot",
                        "golden_carrot",
                        "melon",
                        "billey:sand_banana"
                    ]
                },
                "minecraft:behavior.beg": {
                    "priority": 9,
                    "look_distance": 3,
                    "look_time": 0,
                    "items": [
                        "bread",
                        "wheat_seeds",
                        "melon_seeds",
                        "pumpkin_seeds",
                        "beetroot_seeds",
                        "carrot",
                        "golden_carrot",
                        "melon",
                        "billey:sand_banana"
                    ]
                },
                "minecraft:is_dyeable": {
                    "interact_text": "action.interact.dye"
                },
                //pohtata
                "minecraft:behavior.avoid_mob_type": {
                    "priority": -2,
                    "max_flee": 16,
                    "entity_types": [
                        {
                            "filters": {
                                "test": "has_component",
                                "subject": "other",
                                "value": "minecraft:explode"
                            },
                            "max_dist": 12,
                            "walk_speed_multiplier": 1.4,
                            "sprint_speed_multiplier": 1.4
                        }
                    ]
                },
                "minecraft:persistent": {},
                "minecraft:behavior.pet_sleep_with_owner": {
                    "priority": 2,
                    "speed_multiplier": 1.2,
                    "search_radius": 10,
                    "search_height": 10,
                    "goal_radius": 1
                },
                "minecraft:environment_sensor": {
                    "filters": {
                        "test": "has_component",
                        "subject": "self",
                        "operator": "not",
                        "value": "minecraft:is_charged"
                    },
                    "event": "yay"
                },
                "minecraft:is_tamed": {},
                "minecraft:behavior.owner_hurt_by_target": {
                    "priority": 1,
                    "entity_types": {
                        "filters": {
                            "none_of": [
                                {
                                    "test": "is_owner",
                                    "subject": "other"
                                }
                            ]
                        }
                    }
                },
                "minecraft:behavior.owner_hurt_target": {
                    "priority": 2,
                    "entity_types": {
                        "filters": {
                            "any_of": [
                                {
                                    "test": "is_family",
                                    "subject": "other",
                                    "operator": "not",
                                    "value": "creeper"
                                },
                                {
                                    "test": "is_family",
                                    "subject": "other",
                                    "value": "mcreeper"
                                }
                            ]
                        }
                    }
                },
                "minecraft:navigation.walk": {
                    "avoid_water": false,
                    "can_path_over_water": true,
                    "avoid_damage_blocks": true
                },
                "minecraft:movement.basic": {},
                "minecraft:jump.static": {},
                "minecraft:can_climb": {},
                "minecraft:fall_damage": {
                    "value": 0
                },
                "minecraft:movement": {
                    "value": 0.2
                },
                "minecraft:sittable": {},
                "minecraft:behavior.follow_owner": {
                    "priority": 4,
                    "speed_multiplier": 1.25,
                    "start_distance": 10,
                    "stop_distance": 2
                },
                "minecraft:behavior.stay_while_sitting": {
                    "priority": 2
                },
                "minecraft:behavior.mount_pathing": {
                    "priority": 1,
                    "speed_multiplier": 1.25,
                    "target_dist": 0,
                    "track_target": true
                },
                "minecraft:interact": {
                    "interactions": [
                        {
                            "play_sounds": "plop",
                            "swing": true,
                            "interact_text": "action.interact.wander",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "stick"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "value": "minecraft:behavior.follow_owner"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "eventwander",
                                "target": "self"
                            }
                        },
                        {
                            "play_sounds": "plop",
                            "swing": true,
                            "interact_text": "action.interact.follow",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "stick"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "operator": "not",
                                            "value": "minecraft:behavior.follow_owner"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "eventfollow",
                                "target": "self"
                            }
                        },
                        {
                            "interact_text": "action.interact.pet",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "operator": "!=",
                                            "value": "billey:swordfish"
                                        },
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "operator": "!=",
                                            "value": "billey:golden_swordfish"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_sneaking",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "bepetted",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "eat",
                            "interact_text": "action.interact.feed",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:sand_banana"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_sleeping",
                                            "subject": "self",
                                            "value": false
                                        }
                                    ]
                                },
                                "event": "beenfedabanana",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "armor.equip_generic",
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:leather_pet_armor"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "beleather",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "armor.equip_generic",
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "chest"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "operator": "not",
                                            "value": "minecraft:is_chested"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "wearchest",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": false,
                            "play_sounds": "armor.equip_generic",
                            "spawn_items": {
                                "table": "loot_tables/entities/billeychest.json"
                            },
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "chest"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "value": "minecraft:is_chested"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "nochest",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "armor.equip_generic",
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:pet_hat"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "operator": "not",
                                            "value": "minecraft:is_saddled"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "wearhat",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "armor.equip_generic",
                            "interact_text": "action.interact.use",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "minecraft:dried_kelp"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "value": "minecraft:is_saddled"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "blackstripehat",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": false,
                            "play_sounds": "armor.equip_generic",
                            "spawn_items": {
                                "table": "loot_tables/entities/billeyhat.json"
                            },
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:pet_hat"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "value": "minecraft:is_saddled"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "nohat",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "armor.equip_generic",
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:golden_pet_armor"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "begolden",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "armor.equip_generic",
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:chain_pet_armor"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "bechain",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "armor.equip_generic",
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:iron_pet_armor"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "beiron",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "armor.equip_generic",
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:diamond_pet_armor"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "bediamond",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "armor.equip_generic",
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:netherite_pet_armor"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "benetherite",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "armor.equip_generic",
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:endrod_pet_armor"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "value": "minecraft:shooter",
                                            "operator": "not"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "beendrod",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "armor.equip_generic",
                            "interact_text": "action.interact.equip",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "dirt"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "beno",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "milk",
                            "interact_text": "action.interact.use",
                            "transform_to_item": "glass_bottle",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:colorful_bottle"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "kroma",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "milk",
                            "interact_text": "action.interact.use",
                            "transform_to_item": "glass_bottle",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:colorless_bottle"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "nokroma",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "milk",
                            "interact_text": "action.interact.use",
                            "transform_to_item": "glass_bottle",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:wcat_bottle"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "bebananaduck",
                                "target": "self"
                            }
                        }
                    ]
                },
                "minecraft:timer": {
                    "time": [
                        0
                    ],
                    "looping": true,
                    "time_down_event": {
                        "event": "fix1",
                        "target": "self"
                    }
                },
                "minecraft:physics": {}
            },
            "zero": {
                "minecraft:color": {
                    "value": 0
                }
            },
            "one": {
                "minecraft:color": {
                    "value": 1
                }
            },
            "two": {
                "minecraft:color": {
                    "value": 2
                }
            },
            "three": {
                "minecraft:color": {
                    "value": 3
                }
            },
            "four": {
                "minecraft:color": {
                    "value": 4
                }
            },
            "five": {
                "minecraft:color": {
                    "value": 5
                }
            },
            "six": {
                "minecraft:color": {
                    "value": 6
                }
            },
            "seven": {
                "minecraft:color": {
                    "value": 7
                }
            },
            "eight": {
                "minecraft:color": {
                    "value": 8
                }
            },
            "nine": {
                "minecraft:color": {
                    "value": 9
                }
            },
            "ten": {
                "minecraft:color": {
                    "value": 10
                }
            },
            "eleven": {
                "minecraft:color": {
                    "value": 11
                }
            },
            "tweleve": {
                "minecraft:color": {
                    "value": 12
                }
            },
            "thirteen": {
                "minecraft:color": {
                    "value": 13
                }
            },
            "fourteen": {
                "minecraft:color": {
                    "value": 14
                }
            },
            "fifteen": {
                "minecraft:color": {
                    "value": 15
                }
            },
            "sixteen": {
                "minecraft:color": {
                    "value": 16
                }
            },
            "seventeen": {
                "minecraft:color": {
                    "value": 17
                }
            },
            "eighteen": {
                "minecraft:color": {
                    "value": 18
                }
            },
            "nineteen": {
                "minecraft:color": {
                    "value": 19
                }
            },
            "wild": {
                "minecraft:despawn": {
                    "despawn_from_distance": {}
                },
                "minecraft:behavior.nearest_attackable_target": {
                    "priority": 2,
                    "reselect_targets": true,
                    "entity_types": [
                        {
                            "filters": {
                                "any_of": [
                                    {
                                        "test": "has_equipment",
                                        "subject": "other",
                                        "domain": "hand",
                                        "value": "chicken"
                                    },
                                    {
                                        "test": "has_equipment",
                                        "subject": "other",
                                        "domain": "hand",
                                        "value": "cooked_chicken"
                                    },
                                    {
                                        "test": "has_equipment",
                                        "subject": "other",
                                        "domain": "hand",
                                        "value": "feather"
                                    }
                                ]
                            },
                            "max_dist": 10
                        }
                    ]
                },
                "minecraft:tameable": {
                    "probability": 0.33,
                    "tame_items": [
                        "bread",
                        "wheat_seeds",
                        "melon_seeds",
                        "pumpkin_seeds",
                        "beetroot_seeds",
                        "carrot",
                        "golden_carrot",
                        "melon"
                    ],
                    "tame_event": {
                        "event": "yay",
                        "target": "self"
                    }
                }
            },
            "swim_mode": {},
            "water_mode": {
                "minecraft:timer": {
                    "time": [
                        0
                    ],
                    "looping": true,
                    "time_down_event": {
                        "event": "fix",
                        "target": "self"
                    }
                }
            },
            "land_mode": {
                "minecraft:timer": {
                    "time": [
                        0
                    ],
                    "looping": true,
                    "time_down_event": {
                        "event": "fix",
                        "target": "self"
                    }
                }
            },
            "walk_mode": {},
            "swim_dry": {
                "minecraft:environment_sensor": {
                    "filters": {
                        "test": "is_underwater",
                        "subject": "self",
                        "value": true
                    },
                    "event": "wateriswet"
                }
            },
            "swim_wet": {
                "minecraft:environment_sensor": {
                    "filters": {
                        "test": "is_underwater",
                        "subject": "self",
                        "value": false
                    },
                    "event": "waterisdry"
                }
            },
            "timer": {
                "minecraft:underwater_movement": {
                    "value": 0.125
                },
                "minecraft:timer": {
                    "time": [
                        3,
                        9
                    ],
                    "looping": true,
                    "time_down_event": {
                        "event": "do_event",
                        "target": "self"
                    }
                },
                "minecraft:movement": {
                    "value": 0.25
                }
            },
            "flap": {
                "minecraft:is_sheared": {},
                "minecraft:timer": {
                    "time": [
                        1.7,
                        1.2
                    ],
                    "looping": true,
                    "time_down_event": {
                        "event": "stopflap",
                        "target": "self"
                    }
                },
                "minecraft:movement": {
                    "value": 0.01
                },
                "minecraft:underwater_movement": {
                    "value": 0.05
                }
            },
            "quack": {
                "minecraft:is_charged": {},
                "minecraft:is_stunned": {},
                "minecraft:timer": {
                    "time": [
                        0.75,
                        0.75
                    ],
                    "looping": true,
                    "time_down_event": {
                        "event": "stopquack",
                        "target": "self"
                    }
                }
            },
            "timer1": {
                "minecraft:is_charged": {},
                "minecraft:underwater_movement": {
                    "value": 0.125
                },
                "minecraft:timer": {
                    "time": [
                        3,
                        9
                    ],
                    "looping": true,
                    "time_down_event": {
                        "event": "do_event1",
                        "target": "self"
                    }
                },
                "minecraft:movement": {
                    "value": 0.25
                }
            },
            "flap1": {
                "minecraft:is_charged": {},
                "minecraft:is_sheared": {},
                "minecraft:timer": {
                    "time": [
                        1.7,
                        1.2
                    ],
                    "looping": true,
                    "time_down_event": {
                        "event": "stopflap1",
                        "target": "self"
                    }
                },
                "minecraft:movement": {
                    "value": 0.01
                },
                "minecraft:underwater_movement": {
                    "value": 0.05
                }
            },
            "quack1": {
                "minecraft:is_stunned": {},
                "minecraft:timer": {
                    "time": [
                        0.75,
                        0.75
                    ],
                    "looping": true,
                    "time_down_event": {
                        "event": "stopquack1",
                        "target": "self"
                    }
                }
            },
            "angry": {
                "minecraft:angry": {
                    "duration": 30,
                    "broadcastAnger": true,
                    "broadcastRange": 20,
                    "calm_event": {
                        "event": "calmery",
                        "target": "self"
                    },
                    "broadcast_filters": {
                        "test": "is_family",
                        "value": "duck",
                        "subject": "self"
                    },
                    "broadcast_targets": [
                        "duck"
                    ]
                },
                "minecraft:follow_range": {
                    "value": 20,
                    "max": 100
                }
            },
            "floatcg": {
                "minecraft:behavior.float": {}
            }
        },
        "components": {
            "minecraft:is_hidden_when_invisible": {},
            "minecraft:type_family": {
                "family": [
                    "duck",
                    "mob",
                    "strider"
                ]
            },
            "minecraft:breathable": {
                "totalSupply": 15,
                "suffocateTime": 0,
                "breathesAir": true,
                "breathesWater": false
            },
            "minecraft:follow_range": {
                "value": 48,
                "max": 48
            },
            "minecraft:damage_sensor": {
                "triggers": [
                    {
                        "cause": "all",
                        "on_damage": {
                            "filters": {
                                "test": "has_component",
                                "operator": "not",
                                "value": "minecraft:is_saddled"
                            }
                        },
                        "damage_multiplier": 1.0
                    },
                    {
                        "cause": "fall",
                        "deals_damage": false
                    },
                    {
                        "cause": "all",
                        "deals_damage": false,
                        "on_damage_sound_event": "armor.equip_generic",
                        "on_damage": {
                            "event": "nohat",
                            "target": "self",
                            "filters": {
                                "all_of": [
                                    {
                                        "test": "has_damage",
                                        "operator": "not",
                                        "value": "magic"
                                    },
                                    {
                                        "test": "has_component",
                                        "value": "minecraft:is_saddled"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "on_damage": {
                            "filters": {
                                "test": "is_family",
                                "subject": "other",
                                "value": "endrodprojectilexd"
                            }
                        },
                        "deals_damage": false
                    }
                ]
            },
            "minecraft:collision_box": {
                "width": 0.5,
                "height": 0.5
            },
            "minecraft:navigation.walk": {
                "avoid_water": false,
                "can_path_over_water": true,
                "avoid_damage_blocks": true
            },
            "minecraft:movement.basic": {},
            "minecraft:jump.static": {},
            "minecraft:can_climb": {},
            "minecraft:fall_damage": {
                "value": 0
            },
            "minecraft:movement": {
                "value": 0.2
            },
            "minecraft:nameable": {},
            "minecraft:health": {
                "value": 5,
                "max": 5
            },
            "minecraft:behavior.rise_to_liquid_level": {
                "priority": 0,
                "liquid_y_offset": 0.0,
                "rise_delta": 0.1,
                "sink_delta": 0.1
            },
            "minecraft:leashable": {
                "soft_distance": 4,
                "hard_distance": 6,
                "max_distance": 10,
                "on_leash": {
                    "event": "minecraft:on_leash",
                    "target": "self"
                },
                "on_unleash": {
                    "event": "minecraft:on_unleash",
                    "target": "self"
                }
            },
            "minecraft:on_target_acquired": {
                "event": "angery",
                "target": "self"
            },
            "minecraft:balloonable": {
                "mass": 0.5
            },
            "minecraft:behavior.panic": {
                "priority": 0,
                "speed_multiplier": 1.5,
                "prefer_water": true
            },
            "minecraft:behavior.mount_pathing": {
                "priority": 2,
                "speed_multiplier": 1.5,
                "target_dist": 0,
                "track_target": true
            },
            "minecraft:behavior.tempt": {
                "priority": 4,
                "speed_multiplier": 1,
                "items": [
                    "bread",
                    "wheat_seeds",
                    "melon_seeds",
                    "pumpkin_seeds",
                    "beetroot_seeds",
                    "carrot",
                    "golden_carrot",
                    "melon"
                ]
            },
            "minecraft:behavior.beg": {
                "priority": 9,
                "look_distance": 3,
                "look_time": 0,
                "items": [
                    "bread",
                    "wheat_seeds",
                    "melon_seeds",
                    "pumpkin_seeds",
                    "beetroot_seeds",
                    "carrot",
                    "golden_carrot",
                    "melon"
                ]
            },
            "minecraft:behavior.random_stroll": {
                "priority": 6,
                "speed_multiplier": 1
            },
            "minecraft:behavior.look_at_player": {
                "priority": 7,
                "look_distance": 6,
                "probability": 0.02
            },
            "minecraft:healable": {
                "items": [
                    {
                        "item": "billey:cooked_snail",
                        "heal_amount": 4,
                        "effects": [
                            {
                                "name": "strength",
                                "chance": 1.0,
                                "duration": 15,
                                "amplifier": 1
                            }
                        ]
                    },
                    {
                        "item": "billey:cooked_snail_s",
                        "heal_amount": 4,
                        "effects": [
                            {
                                "name": "speed",
                                "chance": 1.0,
                                "duration": 15,
                                "amplifier": 1
                            }
                        ]
                    },
                    {
                        "item": "billey:cooked_snail_w",
                        "heal_amount": 4,
                        "effects": [
                            {
                                "name": "regeneration",
                                "chance": 1.0,
                                "duration": 15,
                                "amplifier": 1
                            }
                        ]
                    },
                    {
                        "item": "bread",
                        "heal_amount": 1
                    },
                    {
                        "item": "wheat_seeds",
                        "heal_amount": 1
                    },
                    {
                        "item": "melon_seeds",
                        "heal_amount": 2
                    },
                    {
                        "item": "pumpkin_seeds",
                        "heal_amount": 2
                    },
                    {
                        "item": "carrot",
                        "heal_amount": 3
                    },
                    {
                        "item": "melon",
                        "heal_amount": 4
                    },
                    {
                        "item": "golden_carrot",
                        "heal_amount": 6
                    },
                    {
                        "item": "beetroot_seeds",
                        "heal_amount": 2
                    }
                ]
            },
            "minecraft:pushable": {
                "is_pushable": true,
                "is_pushable_by_piston": true
            },
            "minecraft:behavior.nap": {
                "priority": 0,
                "cooldown_min": 20.0,
                "cooldown_max": 45.0,
                "mob_detect_dist": 3,
                "mob_detect_height": 3,
                "can_nap_filters": {
                    "all_of": [
                        {
                            "test": "in_water_or_rain",
                            "subject": "self",
                            "operator": "==",
                            "value": false
                        },
                        {
                            "test": "light_level",
                            "operator": "<",
                            "value": 10
                        },
                        {
                            "test": "is_daytime",
                            "operator": "==",
                            "value": false
                        },
                        {
                            "test": "is_moving",
                            "subject": "self",
                            "operator": "==",
                            "value": false
                        },
                        {
                            "test": "is_mark_variant",
                            "subject": "self",
                            "operator": "==",
                            "value": 0
                        },
                        {
                            "test": "distance_to_nearest_player",
                            "operator": ">",
                            "value": 2
                        },
                        {
                            "test": "on_ground",
                            "subject": "self",
                            "operator": "==",
                            "value": true
                        }
                    ]
                },
                "wake_mob_exceptions": {
                    "any_of": [
                        {
                            "test": "is_tamed",
                            "subject": "other",
                            "operator": "==",
                            "value": true
                        },
                        {
                            "test": "is_sneaking",
                            "subject": "other",
                            "operator": "==",
                            "value": true
                        }
                    ]
                }
            },
            "minecraft:behavior.melee_attack": {
                "require_complete_path": true,
                "priority": 4,
                "speed_multiplier": 1.3
            },
            "minecraft:attack": {
                "damage": 4
            },
            "minecraft:behavior.float": {},
            "minecraft:behavior.hurt_by_target": {
                "priority": 2,
                "entity_types": {
                    "filters": {
                        "none_of": [
                            {
                                "test": "is_owner",
                                "subject": "other"
                            }
                        ]
                    }
                }
            },
            "minecraft:behavior.random_look_around": {
                "priority": 8
            },
            "minecraft:physics": {}
        },
        "events": {
            "blackstripehat": {
                "run_command": {
                    "command": [
                        "replaceitem entity @s slot.armor.head 0 minecraft:dried_kelp"
                    ]
                }
            },
            "minecraft:entity_transformed": {
                "sequence": [
                    {
                        "filters": {
                            "test": "is_variant",
                            "subject": "other",
                            "value": 1
                        },
                        "add": {
                            "component_groups": [
                                "brown"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_variant",
                            "subject": "other",
                            "value": 2
                        },
                        "add": {
                            "component_groups": [
                                "golden"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_variant",
                            "subject": "other",
                            "value": 3
                        },
                        "add": {
                            "component_groups": [
                                "mandarin"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_variant",
                            "subject": "other",
                            "value": 4
                        },
                        "add": {
                            "component_groups": [
                                "blue"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_variant",
                            "subject": "other",
                            "value": 5
                        },
                        "add": {
                            "component_groups": [
                                "black"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_variant",
                            "subject": "other",
                            "value": 6
                        },
                        "add": {
                            "component_groups": [
                                "head"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_variant",
                            "subject": "other",
                            "value": 7
                        },
                        "add": {
                            "component_groups": [
                                "whole"
                            ]
                        }
                    },
                    {
                        "add": {
                            "component_groups": [
                                "tamed",
                                "quack1"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_mark_variant",
                            "subject": "other",
                            "value": 1
                        },
                        "add": {
                            "component_groups": [
                                "leather_armor"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_mark_variant",
                            "subject": "other",
                            "value": 2
                        },
                        "add": {
                            "component_groups": [
                                "golden_armor"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_mark_variant",
                            "subject": "other",
                            "value": 3
                        },
                        "add": {
                            "component_groups": [
                                "chain_armor"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_mark_variant",
                            "subject": "other",
                            "value": 4
                        },
                        "add": {
                            "component_groups": [
                                "iron_armor"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_mark_variant",
                            "subject": "other",
                            "value": 5
                        },
                        "add": {
                            "component_groups": [
                                "diamond_armor"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_mark_variant",
                            "subject": "other",
                            "value": 6
                        },
                        "add": {
                            "component_groups": [
                                "netherite_armor"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_mark_variant",
                            "subject": "other",
                            "value": 7
                        },
                        "add": {
                            "component_groups": [
                                "endrod_armor"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_mark_variant",
                            "subject": "other",
                            "value": 0
                        },
                        "add": {
                            "component_groups": [
                                "no_armor"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "has_component",
                            "subject": "other",
                            "value": "minecraft:is_baby",
                            "operator": "not"
                        },
                        "add": {
                            "component_groups": [
                                "minecraft:duck_adult"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "has_component",
                            "subject": "other",
                            "value": "minecraft:is_baby"
                        },
                        "add": {
                            "component_groups": [
                                "minecraft:duck_baby",
                                "agelol"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "has_component",
                            "subject": "other",
                            "value": "minecraft:is_illager_captain"
                        },
                        "add": {
                            "component_groups": [
                                "kromatik"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "has_component",
                            "subject": "other",
                            "value": "minecraft:is_charged"
                        },
                        "add": {
                            "component_groups": [
                                "hat"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_color",
                            "subject": "other",
                            "value": 0
                        },
                        "add": {
                            "component_groups": [
                                "zero"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_color",
                            "subject": "other",
                            "value": 1
                        },
                        "add": {
                            "component_groups": [
                                "one"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_color",
                            "subject": "other",
                            "value": 2
                        },
                        "add": {
                            "component_groups": [
                                "two"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_color",
                            "subject": "other",
                            "value": 3
                        },
                        "add": {
                            "component_groups": [
                                "three"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_color",
                            "subject": "other",
                            "value": 4
                        },
                        "add": {
                            "component_groups": [
                                "four"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_color",
                            "subject": "other",
                            "value": 5
                        },
                        "add": {
                            "component_groups": [
                                "five"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_color",
                            "subject": "other",
                            "value": 6
                        },
                        "add": {
                            "component_groups": [
                                "six"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_color",
                            "subject": "other",
                            "value": 7
                        },
                        "add": {
                            "component_groups": [
                                "seven"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_color",
                            "subject": "other",
                            "value": 8
                        },
                        "add": {
                            "component_groups": [
                                "eight"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_color",
                            "subject": "other",
                            "value": 9
                        },
                        "add": {
                            "component_groups": [
                                "nine"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_color",
                            "subject": "other",
                            "value": 10
                        },
                        "add": {
                            "component_groups": [
                                "ten"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_color",
                            "subject": "other",
                            "value": 12
                        },
                        "add": {
                            "component_groups": [
                                "twelve"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_color",
                            "subject": "other",
                            "value": 11
                        },
                        "add": {
                            "component_groups": [
                                "eleven"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_color",
                            "subject": "other",
                            "value": 13
                        },
                        "add": {
                            "component_groups": [
                                "thirteen"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_color",
                            "subject": "other",
                            "value": 14
                        },
                        "add": {
                            "component_groups": [
                                "fourteen"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_color",
                            "subject": "other",
                            "value": 15
                        },
                        "add": {
                            "component_groups": [
                                "fifteen"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_color",
                            "subject": "other",
                            "value": 16
                        },
                        "add": {
                            "component_groups": [
                                "sixteen"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_color",
                            "subject": "other",
                            "value": 17
                        },
                        "add": {
                            "component_groups": [
                                "seventeen"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_color",
                            "subject": "other",
                            "value": 18
                        },
                        "add": {
                            "component_groups": [
                                "eighteen"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_color",
                            "subject": "other",
                            "value": 19
                        },
                        "add": {
                            "component_groups": [
                                "nineteen"
                            ]
                        }
                    }
                ]
            },
            "bebananaduck": {
                "add": {
                    "component_groups": [
                        "cock"
                    ]
                }
            },
            "eventwander": {
                "sequence": [
                    {
                        "remove": {
                            "component_groups": [
                                "following"
                            ]
                        }
                    },
                    {
                        "run_command": {
                            "command": [
                                "tellraw @a[r=5] {\"rawtext\": [{\"translate\": \"billmobs.wander\"},{\"selector\": \"@s\"}, {\"translate\": \"billmobs.wander2\"}] }"
                            ]
                        }
                    }
                ]
            },
            "add_damaged_tag": {
                "sequence": [
                    {
                        "run_command": {
                            "command": [
                                "tag @s add damaged"
                            ]
                        }
                    }
                ]
            },
            "get_picked_up": {
                "sequence": [
                    {
                        "filters": {
                          "test": "has_tag",
                          "value": "damaged",
                          "operator": "not"
                        },
                        "run_command": {
                            "command": [
                                "loot spawn ~ ~1 ~ loot \"entities/billyeetduck\""
                            ]
                        }
                    },
                    {
                        "filters": {
                          "test": "has_tag",
                          "value": "damaged"
                        },
                        "run_command": {
                            "command": [
                                "loot spawn ~ ~1 ~ loot \"entities/billyeetduck_damaged\""
                            ]
                        }
                    },
                    {
                        "trigger": "despawn"
                    }
                ]
            },
            "eventfollow": {
                "sequence": [
                    {
                        "add": {
                            "component_groups": [
                                "following"
                            ]
                        }
                    },
                    {
                        "run_command": {
                            "command": [
                                "tellraw @a[r=5] {\"rawtext\": [{\"translate\": \"billmobs.follow\"},{\"selector\": \"@s\"}, {\"translate\": \"billmobs.follow2\"}] }"
                            ]
                        }
                    }
                ]
            },
            "despawn": {
                "add": {
                    "component_groups": [
                        "despawned"
                    ]
                }
            },
            "beenfedabanana": {
                "sequence": [
                    {
                        "run_command": {
                            "command": [
                                "particle billey:eatbanana ~ ~.5 ~"
                            ]
                        }
                    },
                    {
                        "randomize": [
                            {
                                "weight": 36,
                                "run_command": {
                                    "command": [
                                        "effect @s regeneration 7 1"
                                    ]
                                }
                            },
                            {
                                "weight": 4,
                                "run_command": {
                                    "command": [
                                        "effect @s regeneration 10"
                                    ]
                                }
                            },
                            {
                                "weight": 4,
                                "run_command": {
                                    "command": [
                                        "effect @s speed 10"
                                    ]
                                }
                            },
                            {
                                "weight": 4,
                                "run_command": {
                                    "command": [
                                        "effect @s absorption 10"
                                    ]
                                }
                            },
                            {
                                "weight": 4,
                                "run_command": {
                                    "command": [
                                        "effect @s resistance 10"
                                    ]
                                }
                            },
                            {
                                "weight": 4,
                                "run_command": {
                                    "command": [
                                        "effect @s strength 10"
                                    ]
                                }
                            },
                            {
                                "weight": 4,
                                "run_command": {
                                    "command": [
                                        "effect @s water_breathing 10"
                                    ]
                                }
                            },
                            {
                                "weight": 4,
                                "run_command": {
                                    "command": [
                                        "effect @s fire_resistance 10"
                                    ]
                                }
                            },
                            {
                                "weight": 1,
                                "sequence": [
                                    {
                                        "run_command": {
                                            "command": [
                                                "effect @s levitation 1 0 true"
                                            ]
                                        }
                                    },
                                    {
                                        "run_command": {
                                            "target": "other",
                                            "command": [
                                                "effect @s levitation 1 0 true"
                                            ]
                                        }
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "bepetted": {
                "sequence": [
                    {
                        "randomize": [
                            {
                                "weight": 13
                            },
                            {
                                "weight": 1
                            },
                            {
                                "weight": 1,
                                "run_command": {
                                    "command": [
                                        "playanimation @s animation.billcat.petted null \"1\""
                                    ]
                                }
                            }
                        ]
                    },
                    {
                        "run_command": {
                            "target": "other",
                            "command": [
                                "playanimation @s animation.billeyplayer.pet"
                            ]
                        }
                    },
                    {
                        "randomize": [
                            {
                                "weight": 370
                            },
                            {
                                "weight": 99
                            },
                            {
                                "weight": 3,
                                "run_command": {
                                    "command": [
                                        "effect @s resistance 10 1 true"
                                    ]
                                }
                            },
                            {
                                "weight": 3,
                                "run_command": {
                                    "command": [
                                        "effect @s fire_resistance 10 1 true"
                                    ]
                                }
                            },
                            {
                                "weight": 3,
                                "run_command": {
                                    "command": [
                                        "effect @s strength 10 1 true"
                                    ]
                                }
                            },
                            {
                                "weight": 3,
                                "run_command": {
                                    "command": [
                                        "effect @s water_breathing 30 0 true"
                                    ]
                                }
                            },
                            {
                                "weight": 3,
                                "run_command": {
                                    "command": [
                                        "effect @s speed 10 1 true"
                                    ]
                                }
                            },
                            {
                                "weight": 1,
                                "run_command": {
                                    "command": [
                                        "effect @s levitation 1 1 true",
                                        "effect @s regeneration 30 1 true"
                                    ]
                                }
                            },
                            {
                                "weight": 1,
                                "run_command": {
                                    "command": [
                                        "effect @s speed 1 0"
                                    ]
                                }
                            }
                        ]
                    }
                ]
            },
            "beno": {
                "add": {
                    "component_groups": [
                        "no_armor"
                    ]
                },
                "remove": {
                    "component_groups": [
                        "leather_armor",
                        "golden_armor",
                        "chain_armor",
                        "iron_armor",
                        "diamond_armor",
                        "netherite_armor",
                        "endrod_armor"
                    ]
                }
            },
            "beleather": {
                "add": {
                    "component_groups": [
                        "leather_armor"
                    ]
                }
            },
            "begolden": {
                "add": {
                    "component_groups": [
                        "golden_armor"
                    ]
                }
            },
            "bechain": {
                "add": {
                    "component_groups": [
                        "chain_armor"
                    ]
                }
            },
            "beiron": {
                "add": {
                    "component_groups": [
                        "iron_armor"
                    ]
                }
            },
            "bediamond": {
                "add": {
                    "component_groups": [
                        "diamond_armor"
                    ]
                }
            },
            "benetherite": {
                "add": {
                    "component_groups": [
                        "netherite_armor"
                    ]
                }
            },
            "beendrod": {
                "add": {
                    "component_groups": [
                        "endrod_armor"
                    ]
                }
            },
            "kroma": {
                "add": {
                    "component_groups": [
                        "kromatik"
                    ]
                },
                "run_command": {
                    "target": "other",
                    "command": [
                        "execute @s[tag=!billcoloradvancement] ~~~ function billcoloradvancement",
                        "tag @s[tag=!billcoloradvancement] add billcoloradvancement"
                    ]
                }
            },
            "angery": {
                "sequence": [
                    {
                        "add": {
                            "component_groups": [
                                "angry"
                            ]
                        },
                        "run_command": {
                            "command": [
                                "execute @p[tag=!angryduckachievement,r=8] ~~~ function angryduckachievement",
                                "tag @p[r=8,tag=!angryduckachievement] add angryduckachievement"
                            ]
                        }
                    },
                    {
                        "run_command": {
                            "command": [
                                "event entity @e[type=billey:velvet_worm,r=7] dropcentiegg"
                            ]
                        }
                    }
                ]
            },
            "calmery": {
                "remove": {
                    "component_groups": [
                        "angry"
                    ]
                }
            },
            "nokroma": {
                "remove": {
                    "component_groups": [
                        "kromatik"
                    ]
                }
            },
            "minecraft:on_sheared": {
                "add": {
                    "component_groups": [
                        "minecraft:duck_baby"
                    ]
                },
                "remove": {
                    "component_groups": [
                        "minecraft:duck_adult",
                        "gold"
                    ]
                }
            },
            "minecraft:entity_spawned": {
                "sequence": [
                    {
                        "randomize": [
                            {
                                "weight": 72,
                                "remove": {},
                                "add": {
                                    "component_groups": [
                                        "white"
                                    ]
                                }
                            },
                            {
                                "weight": 72,
                                "remove": {},
                                "add": {
                                    "component_groups": [
                                        "brown"
                                    ]
                                }
                            },
                            {
                                "weight": 10,
                                "remove": {},
                                "add": {
                                    "component_groups": [
                                        "mandarin"
                                    ]
                                }
                            },
                            {
                                "weight": 35,
                                "remove": {},
                                "add": {
                                    "component_groups": [
                                        "blue"
                                    ]
                                }
                            },
                            {
                                "weight": 35,
                                "remove": {},
                                "add": {
                                    "component_groups": [
                                        "black"
                                    ]
                                }
                            },
                            {
                                "weight": 35,
                                "remove": {},
                                "add": {
                                    "component_groups": [
                                        "head"
                                    ]
                                }
                            },
                            {
                                "weight": 35,
                                "remove": {},
                                "add": {
                                    "component_groups": [
                                        "whole"
                                    ]
                                }
                            }
                        ]
                    },
                    {
                        "randomize": [
                            {
                                "weight": 46,
                                "remove": {},
                                "add": {
                                    "component_groups": [
                                        "minecraft:duck_adult",
                                        "swim_mode",
                                        "swim_dry",
                                        "wild",
                                        "quack"
                                    ]
                                }
                            },
                            {
                                "weight": 46,
                                "remove": {},
                                "add": {
                                    "component_groups": [
                                        "minecraft:duck_adult",
                                        "walk_mode",
                                        "wild",
                                        "quack"
                                    ]
                                }
                            },
                            {
                                "weight": 10,
                                "remove": {},
                                "add": {
                                    "component_groups": [
                                        "minecraft:duck_baby",
                                        "swim_mode",
                                        "swim_dry",
                                        "wild",
                                        "quack",
                                        "wildbaby"
                                    ]
                                }
                            },
                            {
                                "weight": 10,
                                "remove": {},
                                "add": {
                                    "component_groups": [
                                        "minecraft:duck_baby",
                                        "walk_mode",
                                        "wild",
                                        "quack",
                                        "wildbaby"
                                    ]
                                }
                            }
                        ]
                    },
                    {
                        "randomize": [
                            {
                                "weight": 292,
                                "add": {
                                    "component_groups": [
                                        "no_armor"
                                    ]
                                }
                            },
                            {
                                "weight": 1,
                                "remove": {},
                                "add": {
                                    "component_groups": [
                                        "leather_armor"
                                    ]
                                }
                            },
                            {
                                "weight": 1,
                                "remove": {},
                                "add": {
                                    "component_groups": [
                                        "golden_armor"
                                    ]
                                }
                            },
                            {
                                "weight": 1,
                                "remove": {},
                                "add": {
                                    "component_groups": [
                                        "chain_armor"
                                    ]
                                }
                            },
                            {
                                "weight": 1,
                                "remove": {},
                                "add": {
                                    "component_groups": [
                                        "iron_armor"
                                    ]
                                }
                            },
                            {
                                "weight": 1,
                                "remove": {},
                                "add": {
                                    "component_groups": [
                                        "diamond_armor"
                                    ]
                                }
                            },
                            {
                                "weight": 1,
                                "remove": {},
                                "add": {
                                    "component_groups": [
                                        "netherite_armor"
                                    ]
                                }
                            },
                            {
                                "weight": 1,
                                "remove": {},
                                "add": {
                                    "component_groups": [
                                        "endrod_armor"
                                    ]
                                }
                            },
                            {
                                "weight": 1,
                                "remove": {},
                                "add": {
                                    "component_groups": [
                                        "kromatik",
                                        "no_armor"
                                    ]
                                }
                            }
                        ]
                    }
                ]
            },
            //spawns the thrown ducks, not just a white adult
            "spawnwhiteadult": {
                //spawns the thrown ducks, not just a white adult
                "run_command": {
                    "command": [
                        "tag @s add thrown_duck",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~.1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~.1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~.1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~.1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~.1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~.1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~.1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~.1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~.1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~.1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~.1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~.1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~.1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~.1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~.1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~.1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~.1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~.1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~.1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~.1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~.1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~.1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~.1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~.1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~.1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~.1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~.1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~.1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~.1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~.1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~.1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~.1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~.1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~.1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~.1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~.1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~.1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~.1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~.1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~.1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair",
                        "execute @s ~~~ detect ~ ~.1 ~ air 0 tag @s add spawnedinair",
                        "tp @s[tag=!spawnedinair] ~ ~1 ~",
                        "tag @s remove spawnedinair"
                    ]
                },
                "add": {
                    "component_groups": [
                        "minecraft:duck_adult",
                        "swim_mode",
                        "attackmonster",
                        "swim_dry",
                        "timer"
                    ]
                }
            },
            "minecraft:baby_spawned": {
                "sequence": [
                    {
                        "randomize": [
                            {
                                "weight": 10,
                                "remove": {},
                                "add": {
                                    "component_groups": [
                                        "minecraft:duck_baby",
                                        "swim_mode",
                                        "swim_dry",
                                        "wild",
                                        "quack",
                                        "wildbaby"
                                    ]
                                }
                            },
                            {
                                "weight": 10,
                                "remove": {},
                                "add": {
                                    "component_groups": [
                                        "minecraft:duck_baby",
                                        "walk_mode",
                                        "wild",
                                        "quack",
                                        "wildbaby"
                                    ]
                                }
                            }
                        ]
                    },
                    {
                        "randomize": [
                            {
                                "weight": 72,
                                "remove": {},
                                "add": {
                                    "component_groups": [
                                        "white"
                                    ]
                                }
                            },
                            {
                                "weight": 72,
                                "remove": {},
                                "add": {
                                    "component_groups": [
                                        "brown"
                                    ]
                                }
                            },
                            {
                                "weight": 35,
                                "remove": {},
                                "add": {
                                    "component_groups": [
                                        "mandarin"
                                    ]
                                }
                            },
                            {
                                "weight": 35,
                                "remove": {},
                                "add": {
                                    "component_groups": [
                                        "blue"
                                    ]
                                }
                            },
                            {
                                "weight": 35,
                                "remove": {},
                                "add": {
                                    "component_groups": [
                                        "black"
                                    ]
                                }
                            },
                            {
                                "weight": 35,
                                "remove": {},
                                "add": {
                                    "component_groups": [
                                        "head"
                                    ]
                                }
                            },
                            {
                                "weight": 35,
                                "remove": {},
                                "add": {
                                    "component_groups": [
                                        "whole"
                                    ]
                                }
                            }
                        ]
                    }
                ]
            },
            "spawngoldenbaby": {
                "sequence": [
                    {
                        "randomize": [
                            {
                                "weight": 10,
                                "remove": {},
                                "add": {
                                    "component_groups": [
                                        "minecraft:duck_baby",
                                        "swim_mode",
                                        "swim_dry",
                                        "wild",
                                        "quack",
                                        "wildbaby"
                                    ]
                                }
                            },
                            {
                                "weight": 10,
                                "remove": {},
                                "add": {
                                    "component_groups": [
                                        "minecraft:duck_baby",
                                        "walk_mode",
                                        "wild",
                                        "quack",
                                        "wildbaby"
                                    ]
                                }
                            }
                        ]
                    },
                    {
                        "randomize": [
                            {
                                "set_actor_property": {
                                    "property:centipedehat": 1
                                },
                                "weight": 72,
                                "remove": {
                                    "component_groups": [
                                        "panicxd"
                                    ]
                                },
                                "add": {
                                    "component_groups": [
                                        "black",
                                        "hat",
                                        "fromcentipede"
                                    ]
                                }
                            }
                        ]
                    }
                ]
            },
            "stopquack": {
                "remove": {
                    "component_groups": [
                        "quack"
                    ]
                },
                "add": {
                    "component_groups": [
                        "timer"
                    ]
                }
            },
            "wearhat": {
                "sequence": [
                    {
                        "add": {
                            "component_groups": [
                                "hat"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "all_of": [
                                {
                                    "test": "has_component",
                                    "value": "minecraft:fire_immune"
                                },
                                {
                                    "test": "is_variant",
                                    "value": 5
                                }
                            ]
                        },
                        "add": {
                            "component_groups": [
                                "dyeblack"
                            ]
                        }
                    }
                ]
            },
            "nohat": {
                "remove": {
                    "component_groups": [
                        "hat"
                    ]
                },
                "run_command": {
                    "command": [
                        "replaceitem entity @s slot.armor.head 0 feather"
                    ]
                }
            },
            "wearchest": {
                "add": {
                    "component_groups": [
                        "chest"
                    ]
                }
            },
            "nochest": {
                "remove": {
                    "component_groups": [
                        "chest"
                    ]
                }
            },
            "stopflap": {
                "remove": {
                    "component_groups": [
                        "flap"
                    ]
                },
                "add": {
                    "component_groups": [
                        "timer"
                    ]
                }
            },
            "fix": {
                "remove": {
                    "component_groups": [
                        "water_mode",
                        "land_mode"
                    ]
                },
                "add": {
                    "component_groups": [
                        "walk_mode",
                        "quack"
                    ]
                }
            },
            "stopquack1": {
                "remove": {
                    "component_groups": [
                        "quack1"
                    ]
                },
                "add": {
                    "component_groups": [
                        "timer1"
                    ]
                }
            },
            "standup": {
                "add": {
                    "component_groups": [
                        "flap1"
                    ]
                },
                "remove": {
                    "component_groups": [
                        "timer1"
                    ]
                }
            },
            "stopflap1": {
                "remove": {
                    "component_groups": [
                        "flap1"
                    ]
                },
                "add": {
                    "component_groups": [
                        "timer1"
                    ]
                }
            },
            "fix1": {
                "add": {
                    "component_groups": [
                        "quack1"
                    ]
                }
            },
            "yay": {
                "sequence": [
                    {
                        "remove": {
                            "component_groups": [
                                "swim_mode",
                                "walk_mode",
                                "swim_wet",
                                "swim_dry",
                                "quack",
                                "flap",
                                "timer",
                                "wild",
                                "wildbaby"
                            ]
                        }
                    },
                    {
                        "add": {
                            "component_groups": [
                                "tamed",
                                "quack1"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "has_component",
                            "value": "minecraft:is_baby"
                        },
                        "add": {
                            "component_groups": [
                                "agelol"
                            ]
                        }
                    }
                ]
            },
            "minecraft:entity_born": {
                "sequence": [
                    {
                        "remove": {},
                        "add": {
                            "component_groups": [
                                "minecraft:duck_baby",
                                "tamed",
                                "quack1",
                                "agelol",
                                "no_armor"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "has_component",
                            "value": "minecraft:is_illager_captain",
                            "subject": "parent"
                        },
                        "add": {
                            "component_groups": [
                                "kromatik"
                            ]
                        }
                    }
                ]
            },
            "minecraft:entity_born_golden": {
                "sequence": [
                    {
                        "remove": {},
                        "add": {
                            "component_groups": [
                                "minecraft:duck_baby",
                                "tamed",
                                "golden",
                                "quack1",
                                "agelol",
                                "no_armor"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "has_component",
                            "value": "minecraft:is_illager_captain",
                            "subject": "parent"
                        },
                        "add": {
                            "component_groups": [
                                "kromatik"
                            ]
                        }
                    },
                    {
                        "run_command": {
                            "command": [
                                "execute @p[tag=!golden_duck_advancement] ~~~ function mysteryduckadvancementfrombilleysmobsaddonxd",
                                "tag @p[tag=!golden_duck_advancement] add golden_duck_advancement"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_family",
                            "subject": "other",
                            "value": "orange_penguin"
                        },
                        "run_command": {
                            "command": [
                                "event entity @s lose_orange"
                            ],
                            "target": "other"
                        }
                    },
                    {
                        "filters": {
                            "test": "is_family",
                            "subject": "parent",
                            "value": "orange_penguin"
                        },
                        "run_command": {
                            "command": [
                                "event entity @s lose_orange"
                            ],
                            "target": "parent"
                        }
                    }
                ]
            },
            "minecraft:ageable_grow_up": {
                "remove": {
                    "component_groups": [
                        "minecraft:duck_baby",
                        "timer1",
                        "quack1",
                        "agelol"
                    ]
                },
                "add": {
                    "component_groups": [
                        "minecraft:duck_adult",
                        "flap1"
                    ]
                }
            },
            "minecraft:on_leash": {
                "sequence": [
                    {
                        "add": {
                            "component_groups": [
                                "minecraft:duck_leashed"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "has_component",
                            "operator": "not",
                            "value": "minecraft:is_tamed"
                        },
                        "remove": {
                            "component_groups": [
                                "swim_mode",
                                "swim_dry",
                                "swim_wet"
                            ]
                        },
                        "add": {
                            "component_groups": [
                                "walk_mode"
                            ]
                        }
                    }
                ]
            },
            "minecraft:on_unleash": {
                "remove": {
                    "component_groups": [
                        "minecraft:duck_leashed"
                    ]
                }
            },
            "do_event": {
                "randomize": [
                    {
                        "weight": 15,
                        "remove": {
                            "component_groups": [
                                "walk_mode"
                            ]
                        },
                        "add": {
                            "component_groups": [
                                "swim_mode",
                                "swim_dry"
                            ]
                        }
                    },
                    {
                        "weight": 20,
                        "remove": {
                            "component_groups": [
                                "swim_mode",
                                "swim_dry",
                                "swim_wet"
                            ]
                        },
                        "add": {
                            "component_groups": [
                                "walk_mode"
                            ]
                        }
                    },
                    {
                        "weight": 750,
                        "remove": {
                            "component_groups": [
                                "timer"
                            ]
                        },
                        "add": {
                            "component_groups": [
                                "quack"
                            ]
                        }
                    },
                    {
                        "weight": 80,
                        "remove": {
                            "component_groups": [
                                "timer"
                            ]
                        },
                        "add": {
                            "component_groups": [
                                "flap"
                            ]
                        }
                    }
                ]
            },
            "do_event1": {
                "randomize": [
                    {
                        "weight": 750,
                        "remove": {
                            "component_groups": [
                                "timer1"
                            ]
                        },
                        "add": {
                            "component_groups": [
                                "quack1"
                            ]
                        }
                    },
                    {
                        "weight": 100,
                        "remove": {
                            "component_groups": [
                                "timer1"
                            ]
                        },
                        "add": {
                            "component_groups": [
                                "flap1"
                            ]
                        }
                    }
                ]
            },
            "waterisdry": {
                "remove": {
                    "component_groups": [
                        "swim_wet"
                    ]
                },
                "add": {
                    "component_groups": [
                        "swim_dry"
                    ]
                }
            },
            "wateriswet": {
                "add": {
                    "component_groups": [
                        "swim_wet"
                    ]
                },
                "remove": {
                    "component_groups": [
                        "swim_dry"
                    ]
                }
            },
            "addgold": {
                "add": {
                    "component_groups": [
                        "gold"
                    ]
                },
                "remove": {
                    "component_groups": [
                        "floatcg"
                    ]
                }
            }
        }
    }
}