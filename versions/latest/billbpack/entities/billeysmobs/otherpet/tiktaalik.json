{
    "format_version": "1.16.0",
    "minecraft:entity": {
        "description": {
            "identifier": "billey:tiktaalik",
            "is_spawnable": true,
            "is_summonable": true,
            "scripts": {
                "animate": [
                    {
                        "set_follow_state": "q.is_tamed && q.property('billey:follow_owner_state') == 'unknown'"
                    },
                    {
                        "set_sitting_property": "q.is_tamed"
                    },
                    "check_beta_apis",
                    {
                        "rainbow_effects": "q.is_illager_captain"
                    },
                    {
                        "stand_up_when_hit": "q.is_tamed"
                    },
                    {
                        "info": "!q.is_tamed"
                    },
                    "tame",
                    "switch_movement"
                ]
            },
            "animations": {
                "check_beta_apis": "animation.billeys_mobs.check_beta_apis",
                "set_follow_state": "animation.billeys_mobs.set_follow_state",
                "set_sitting_property": "controller.animation.billeys_mobs.set_sitting_property",
                "rainbow_effects": "animation.billeys_mobs.rainbow_effects",
                "stand_up_when_hit": "controller.animation.billeys_mobs.stand_up_when_hit",
                "info": "animation.billeys_mobs.info.tiktaalik",
                "tame": "controller.animation.billeys_mobs.tame",
                "switch_movement": "controller.animation.billeys_mobs.tiktaalik_switch_movement"
            },
            "properties": {
                "billey:head_equipment_color": {
                    "client_sync": true,
                    "type": "int",
                    "range": [
                        0,
                        15
                    ],
                    "default": 0
                },
                //pets' leg slot is used for bowties
                "billey:legs_equipment_color": {
                    "client_sync": true,
                    "type": "int",
                    "range": [
                        0,
                        15
                    ],
                    "default": 0
                },
                "billey:chest_equipment_color": {
                    "client_sync": true,
                    "type": "int",
                    "range": [
                        0,
                        15
                    ],
                    "default": 0
                },
                "billey:feet_equipment_color": {
                    "client_sync": true,
                    "type": "int",
                    "range": [
                        0,
                        15
                    ],
                    "default": 0
                },
                "billey:body_equipment_color": {
                    "client_sync": true,
                    "type": "int",
                    "range": [
                        0,
                        15
                    ],
                    "default": 0
                },
                "billey:xp": {
                    "type": "float",
                    "range": [
                        0.0,
                        1000000.0
                    ],
                    "default": 0.0
                },
                "billey:level": {
                    "type": "int",
                    "range": [
                        1,
                        10
                    ],
                    "default": 1
                },
                "billey:follow_owner_state": {
                    //only used so scripts can know whether it's following or wandering
                    "type": "enum",
                    "default": "unknown",
                    "values": [
                        "unknown",
                        "following",
                        "wandering"
                    ]
                },
                "billey:is_sitting": {
                    //only used so scripts can know whether or not it's sitting
                    "type": "bool",
                    "default": false
                }
            }
        },
        "component_groups": {
            "level1": {
                //this component group isn't used unless the mob is brought back to level 1
                //through commands or the creative item
                "minecraft:health": {
                    "max": 30,
                    "value": 30
                },
                "minecraft:attack": {
                    "damage": 11
                },
                "minecraft:behavior.melee_attack": {
                    "require_complete_path": true,
                    "track_target": true,
                    "priority": 2,
                    "speed_multiplier": 1.5,
                    "reach_multiplier": 1,
                    "on_attack": {
                        "event": "on_attack",
                        "target": "self"
                    },
                    "on_kill": {
                        "event": "on_kill",
                        "target": "self"
                    }
                }
            },
            "level2": {
                "minecraft:health": {
                    "max": 50,
                    "value": 50
                },
                "minecraft:attack": {
                    "damage": 16
                },
                "minecraft:behavior.melee_attack": {
                    "require_complete_path": true,
                    "track_target": true,
                    "priority": 2,
                    "speed_multiplier": 1.55,
                    "reach_multiplier": 1.05,
                    "on_attack": {
                        "event": "on_attack",
                        "target": "self"
                    },
                    "on_kill": {
                        "event": "on_kill",
                        "target": "self"
                    }
                }
            },
            "level3": {
                "minecraft:health": {
                    "max": 70,
                    "value": 70
                },
                "minecraft:attack": {
                    "damage": 20
                },
                "minecraft:behavior.melee_attack": {
                    "require_complete_path": true,
                    "track_target": true,
                    "priority": 2,
                    "speed_multiplier": 1.6,
                    "reach_multiplier": 1.1,
                    "on_attack": {
                        "event": "on_attack",
                        "target": "self"
                    },
                    "on_kill": {
                        "event": "on_kill",
                        "target": "self"
                    }
                }
            },
            "level4": {
                "minecraft:health": {
                    "max": 90,
                    "value": 90
                },
                "minecraft:attack": {
                    "damage": 24
                },
                "minecraft:behavior.melee_attack": {
                    "require_complete_path": true,
                    "track_target": true,
                    "priority": 2,
                    "speed_multiplier": 1.7,
                    "reach_multiplier": 1.15,
                    "on_attack": {
                        "event": "on_attack",
                        "target": "self"
                    },
                    "on_kill": {
                        "event": "on_kill",
                        "target": "self"
                    }
                }
            },
            "level5": {
                "minecraft:health": {
                    "max": 110,
                    "value": 110
                },
                "minecraft:attack": {
                    "damage": 29
                },
                "minecraft:behavior.melee_attack": {
                    "require_complete_path": true,
                    "track_target": true,
                    "priority": 2,
                    "speed_multiplier": 1.8,
                    "reach_multiplier": 2.2,
                    "on_attack": {
                        "event": "on_attack",
                        "target": "self"
                    },
                    "on_kill": {
                        "event": "on_kill",
                        "target": "self"
                    }
                }
            },
            "level6": {
                "minecraft:health": {
                    "max": 130,
                    "value": 130
                },
                "minecraft:attack": {
                    "damage": 34
                },
                "minecraft:behavior.melee_attack": {
                    "require_complete_path": true,
                    "track_target": true,
                    "priority": 2,
                    "speed_multiplier": 1.85,
                    "reach_multiplier": 2.25,
                    "on_attack": {
                        "event": "on_attack",
                        "target": "self"
                    },
                    "on_kill": {
                        "event": "on_kill",
                        "target": "self"
                    }
                }
            },
            "level7": {
                "minecraft:health": {
                    "max": 150,
                    "value": 126
                },
                "minecraft:attack": {
                    "damage": 37
                },
                "minecraft:behavior.melee_attack": {
                    "require_complete_path": true,
                    "track_target": true,
                    "priority": 2,
                    "speed_multiplier": 1.9,
                    "reach_multiplier": 2.3,
                    "on_attack": {
                        "event": "on_attack",
                        "target": "self"
                    },
                    "on_kill": {
                        "event": "on_kill",
                        "target": "self"
                    }
                }
            },
            "level8": {
                "minecraft:health": {
                    "max": 170,
                    "value": 170
                },
                "minecraft:attack": {
                    "damage": 42
                },
                "minecraft:behavior.melee_attack": {
                    "require_complete_path": true,
                    "track_target": true,
                    "priority": 2,
                    "speed_multiplier": 2.0,
                    "reach_multiplier": 2.35,
                    "on_attack": {
                        "event": "on_attack",
                        "target": "self"
                    },
                    "on_kill": {
                        "event": "on_kill",
                        "target": "self"
                    }
                }
            },
            "level9": {
                "minecraft:health": {
                    "max": 190,
                    "value": 190
                },
                "minecraft:attack": {
                    "damage": 46
                },
                "minecraft:behavior.melee_attack": {
                    "require_complete_path": true,
                    "track_target": true,
                    "priority": 2,
                    "speed_multiplier": 2.05,
                    "reach_multiplier": 2.4,
                    "on_attack": {
                        "event": "on_attack",
                        "target": "self"
                    },
                    "on_kill": {
                        "event": "on_kill",
                        "target": "self"
                    }
                }
            },
            "level10": {
                "minecraft:health": {
                    "max": 210,
                    "value": 210
                },
                "minecraft:attack": {
                    "damage": 50
                },
                "minecraft:behavior.melee_attack": {
                    "require_complete_path": true,
                    "track_target": true,
                    "priority": 2,
                    "speed_multiplier": 2.1,
                    "reach_multiplier": 2.5,
                    "on_attack": {
                        "event": "on_attack",
                        "target": "self"
                    },
                    "on_kill": {
                        "event": "on_kill",
                        "target": "self"
                    }
                }
            },
            "sittable": {
                "minecraft:sittable": {}
            },
            "tamed_component": {
                "minecraft:is_tamed": {}
            },
            "untamed": {
                "minecraft:tameable": {
                    "probability": 1.0,
                    "tame_event": {
                        "event": "tamed_yay"
                    },
                    "tame_items": [
                        "billey:power_banana",
                        "billey:raw_catfish",
                        "billey:bettafish",
                        "billey:pizzapiece",
                        "salmon",
                        "fish",
                        "clownfish",
                        "sweet_berries",
                        "rotten_flesh",
                        "wheat_seeds",
                        "melon_seeds",
                        "carrot",
                        "beetroot_seeds",
                        "pumpkin_seeds",
                        "chicken",
                        "billey:raw_hamster",
                        "billey:poultry_orange",
                        "billey:raw_snail",
                        "billey:raw_snail_s",
                        "billey:raw_snail_w",
                        "billey:raw_piranha",
                        "bread",
                        "apple",
                        "fermented_spider_eye",
                        "spider_eye",
                        "string"
                    ]
                }
            },
            "electrocuted": {
                "minecraft:loot": {
                    "table": "loot_tables/entities/billey_electrocuted.json"
                }
            },
            "adult": {
                "minecraft:experience_reward": {
                    "on_death": "q.last_hit_by_player ? Math.Random(1,3) : 0",
                    "on_bred": "Math.Random(1,3)"
                },
                "minecraft:breedable": {
                    "require_tame": true,
                    "require_full_health": true,
                    "extra_baby_chance": 0.125,
                    "breeds_with": [
                        {
                            "mate_type": "billey:tiktaalik",
                            "baby_type": "billey:tiktaalik",
                            "breed_event": {
                                "event": "minecraft:entity_born",
                                "target": "baby"
                            }
                        }
                    ],
                    "breed_items": [
                        "billey:poultry_orange",
                        "billey:pizzapiece",
                        "billey:raw_piranha",
                        "billey:betta_fish",
                        "fish",
                        "salmon",
                        "billey:raw_catfish"
                    ]
                },
                "minecraft:behavior.breed": {
                    "priority": 1,
                    "speed_multiplier": 1.2
                }
            },
            "baby_tamed": {},
            "baby_wild": {
                "minecraft:behavior.follow_parent": {
                    "priority": 4,
                    "speed_multiplier": 1.1
                }
            },
            "baby": {
                "minecraft:scale_by_age": {
                    "start_scale": 0.5,
                    "end_scale": 0.66
                },
                "minecraft:ageable": {
                    "duration": 4800,
                    "feed_items": [
                        "billey:pizzapiece",
                        "billey:betta_fish",
                        "billey:raw_piranha",
                        "fish",
                        "salmon",
                        "billey:raw_catfish"
                    ],
                    "grow_up": {
                        "event": "minecraft:ageable_grow_up",
                        "target": "self"
                    }
                },
                "minecraft:is_baby": {}
            },
            "in_water": {
                "minecraft:behavior.move_to_land": {
                    "priority": 6,
                    "search_range": 15,
                    "search_height": 5,
                    "goal_radius": 0.5
                },
                "minecraft:behavior.random_swim": {
                    "priority": 5,
                    "xz_dist": 16,
                    "y_dist": 4,
                    "avoid_surface": false
                },
                "minecraft:navigation.generic": {
                    "is_amphibious": true,
                    "can_path_over_water": false,
                    "can_swim": true,
                    "can_walk": true,
                    "can_breach": true,
                    "can_sink": false
                },
                "minecraft:behavior.swim_idle": {
                    "priority": 10
                }
            },
            "out_of_water": {
                "minecraft:navigation.generic": {
                    "is_amphibious": true,
                    "can_path_over_water": false,
                    "can_swim": true,
                    "can_walk": true,
                    "can_breach": true,
                    "can_sink": true
                },
                "minecraft:jump.static": {},
                "minecraft:can_climb": {},
                "minecraft:behavior.random_stroll": {
                    "priority": 6,
                    "speed_multiplier": 1.0
                }
            },
            "kromatik": {
                "minecraft:color": {
                    "value": 0
                },
                "minecraft:is_illager_captain": {}
            },
            "alive": {
                "minecraft:health": {
                    "value": 30,
                    "max": 30
                },
                "minecraft:interact": {
                    "interactions": [
                        {
                            "play_sounds": "plop",
                            "swing": true,
                            "interact_text": "action.interact.get_info",
                            "on_interact": {
                                "filters": {
                                    "any_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "feather"
                                        },
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "book"
                                        },
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:info_book"
                                        }
                                    ]
                                },
                                "event": "send_info",
                                "target": "self"
                            }
                        },
                        {
                            "play_sounds": "plop",
                            "swing": true,
                            "interact_text": "action.interact.untame",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:untaming_stick"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "untame",
                                "target": "self"
                            }
                        },
                        {
                            "play_sounds": "plop",
                            "swing": true,
                            "interact_text": "action.interact.wander",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "stick"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "value": "minecraft:behavior.follow_owner"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "eventwander",
                                "target": "self"
                            }
                        },
                        {
                            "play_sounds": "plop",
                            "swing": true,
                            "interact_text": "action.interact.follow",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "stick"
                                        },
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "operator": "not",
                                            "value": "minecraft:behavior.follow_owner"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "eventfollow",
                                "target": "self"
                            }
                        },
                        {
                            "interact_text": "action.interact.pet",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "operator": "!=",
                                            "value": "billey:swordfish"
                                        },
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "operator": "!=",
                                            "value": "billey:golden_swordfish"
                                        },
                                        {
                                            "test": "is_sneaking",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "bepetted",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "eat",
                            "interact_text": "action.interact.feed",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:sand_banana"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "value": "player"
                                        }
                                    ]
                                },
                                "event": "beenfedabanana",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "milk",
                            "interact_text": "action.interact.use",
                            "transform_to_item": "glass_bottle",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:colorful_bottle"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "kroma",
                                "target": "self"
                            }
                        },
                        {
                            "use_item": true,
                            "play_sounds": "milk",
                            "interact_text": "action.interact.use",
                            "transform_to_item": "glass_bottle",
                            "on_interact": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_equipment",
                                            "subject": "other",
                                            "domain": "hand",
                                            "value": "billey:colorless_bottle"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        }
                                    ]
                                },
                                "event": "nokroma",
                                "target": "self"
                            }
                        }
                    ]
                },
                "minecraft:damage_sensor": {
                    "triggers": [
                        {
                            "on_damage": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": true
                                        },
                                        {
                                            "test": "has_tag",
                                            "subject": "other",
                                            "operator": "not",
                                            "value": "billey:can_hit_own_pet"
                                        }
                                    ]
                                },
                                "event": "say_owner_hit_pet_info"
                            },
                            "cause": "all",
                            "deals_damage": false
                        },
                        {
                            "on_damage": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_component",
                                            "subject": "self",
                                            "value": "minecraft:is_tamed"
                                        },
                                        {
                                            "test": "is_owner",
                                            "subject": "other",
                                            "value": false
                                        },
                                        {
                                            "test": "has_tag",
                                            "subject": "other",
                                            "value": "billey:cant_hit_other_pet"
                                        }
                                    ]
                                },
                                "event": "say_other_hit_pet_info"
                            },
                            "cause": "all",
                            "deals_damage": false
                        },
                        {
                            "on_damage": {
                                "filters": {
                                    "test": "has_equipment",
                                    "subject": "other",
                                    "domain": "hand",
                                    "value": "billey:golden_swordfish"
                                }
                            },
                            "damage_multiplier": 2.333
                        },
                        {
                            "on_damage": {
                                "filters": {
                                    "test": "has_equipment",
                                    "subject": "other",
                                    "domain": "hand",
                                    "value": "billey:swordfish"
                                }
                            },
                            "damage_multiplier": 2.333
                        },
                        {
                            "cause": "all",
                            "deals_damage": false,
                            "on_damage_sound_event": "armor.equip_generic",
                            "on_damage": {
                                "event": "destroy_head_equipment",
                                "target": "self",
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_damage",
                                            "value": "fatal"
                                        },
                                        {
                                            "test": "has_equipment",
                                            "value": "billey:pet_hat",
                                            "domain": "head"
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "on_damage": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "any_of": [
                                                {
                                                    "test": "is_family",
                                                    "subject": "other",
                                                    "value": "eatscod"
                                                },
                                                {
                                                    "test": "is_family",
                                                    "subject": "other",
                                                    "value": "piranha"
                                                }
                                            ]
                                        },
                                        {
                                            "test": "has_damage",
                                            "value": "fatal"
                                        }
                                    ]
                                },
                                "event": "minecraft:die1"
                            },
                            "deals_damage": false
                        },
                        {
                            "on_damage": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_damage",
                                            "value": "drowning"
                                        },
                                        {
                                            "test": "has_damage",
                                            "value": "fatal"
                                        }
                                    ]
                                },
                                "event": "become_skeleton"
                            },
                            "deals_damage": false
                        }
                    ]
                }
            },
            "eaten1": {
                "minecraft:scale": {
                    "value": 0.83
                },
                "minecraft:health": {
                    "value": 23,
                    "max": 23
                },
                "minecraft:timer": {
                    "time": [
                        0.05,
                        0.05
                    ],
                    "looping": false,
                    "time_down_event": {
                        "event": "minecraft:die2",
                        "target": "self"
                    }
                },
                "minecraft:loot": {
                    "table": "loot_tables/empty.json"
                }
            },
            "eaten2": {
                "minecraft:scale": {
                    "value": 0.70
                },
                "minecraft:health": {
                    "value": 23,
                    "max": 23
                },
                "minecraft:timer": {
                    "time": [
                        0.05,
                        0.05
                    ],
                    "looping": false,
                    "time_down_event": {
                        "event": "minecraft:die3",
                        "target": "self"
                    }
                },
                "minecraft:loot": {
                    "table": "loot_tables/empty.json"
                }
            },
            "eaten3": {
                "minecraft:scale": {
                    "value": 0.60
                },
                "minecraft:health": {
                    "value": 23,
                    "max": 23
                },
                "minecraft:timer": {
                    "time": [
                        0.05,
                        0.05
                    ],
                    "looping": false,
                    "time_down_event": {
                        "event": "minecraft:die4",
                        "target": "self"
                    }
                },
                "minecraft:loot": {
                    "table": "loot_tables/empty.json"
                }
            },
            "eaten4": {
                "minecraft:scale": {
                    "value": 0.35
                },
                "minecraft:health": {
                    "value": 23,
                    "max": 23
                },
                "minecraft:timer": {
                    "time": [
                        0.05,
                        0.05
                    ],
                    "looping": false,
                    "time_down_event": {
                        "event": "minecraft:die5",
                        "target": "self"
                    }
                },
                "minecraft:loot": {
                    "table": "loot_tables/empty.json"
                }
            },
            "eaten5": {
                "minecraft:scale": {
                    "value": 0.15
                },
                "minecraft:health": {
                    "value": 23,
                    "max": 23
                },
                "minecraft:timer": {
                    "time": [
                        0.05,
                        0.05
                    ],
                    "looping": false,
                    "time_down_event": {
                        "event": "minecraft:die6",
                        "target": "self"
                    }
                },
                "minecraft:loot": {
                    "table": "loot_tables/empty.json"
                }
            },
            "eaten6": {
                "minecraft:scale": {
                    "value": 0.07
                },
                "minecraft:health": {
                    "value": 23,
                    "max": 23
                },
                "minecraft:timer": {
                    "time": [
                        0.05,
                        0.05
                    ],
                    "looping": false,
                    "time_down_event": {
                        "event": "minecraft:die7",
                        "target": "self"
                    }
                },
                "minecraft:loot": {
                    "table": "loot_tables/empty.json"
                }
            },
            "die": {
                "minecraft:scale": {
                    "value": 0
                },
                "minecraft:health": {
                    "value": 1,
                    "max": 1
                },
                "minecraft:loot": {
                    "table": "loot_tables/empty.json"
                },
                "minecraft:transformation": {
                    "into": "billey:despawn",
                    "delay": 0.01
                }
            },
            "dyeable": {
                "minecraft:is_dyeable": {
                    "interact_text": "action.interact.dye"
                }
            },
            "variant0": {
                "minecraft:variant": {
                    "value": 0
                }
            },
            "variant1": {
                "minecraft:variant": {
                    "value": 1
                }
            },
            "variant2": {
                "minecraft:variant": {
                    "value": 2
                }
            },
            "variant3": {
                "minecraft:variant": {
                    "value": 3
                }
            },
            "variant4": {
                "minecraft:variant": {
                    "value": 4
                }
            },
            "variant5": {
                "minecraft:variant": {
                    "value": 5
                }
            },
            "variant6": {
                "minecraft:variant": {
                    "value": 6
                }
            },
            "variant7": {
                "minecraft:variant": {
                    "value": 7
                }
            },
            "variant8": {
                "minecraft:variant": {
                    "value": 8
                }
            },
            "variant9": {
                "minecraft:variant": {
                    "value": 9
                }
            },
            "following": {
                "minecraft:behavior.follow_owner": {
                    "priority": 3,
                    "speed_multiplier": 1.25,
                    "start_distance": 7,
                    "stop_distance": 3
                }
            },
            "wild": {
                "minecraft:shareables": {
                    "all_items": false,
                    "all_items_max_amount": 1,
                    "items": [
                        {
                            "item": "minecraft:chicken",
                            "priority": 0,
                            "max_amount": 1
                        },
                        {
                            "item": "minecraft:clownfish",
                            "priority": 0,
                            "max_amount": 1
                        },
                        {
                            "item": "minecraft:fish",
                            "priority": 0,
                            "max_amount": 1
                        },
                        {
                            "item": "minecraft:rotten_flesh",
                            "priority": 0,
                            "max_amount": 1
                        },
                        {
                            "item": "minecraft:salmon",
                            "priority": 0,
                            "max_amount": 1
                        },
                        {
                            "item": "billey:swordmeat",
                            "priority": 0,
                            "max_amount": 1
                        },
                        {
                            "item": "billey:swordcooked",
                            "priority": 0,
                            "max_amount": 1
                        },
                        {
                            "item": "minecraft:bone",
                            "priority": 1,
                            "max_amount": 1
                        },
                        {
                            "item": "minecraft:feather",
                            "priority": 1,
                            "max_amount": 1
                        },
                        {
                            "item": "minecraft:dye", //ink sac
                            "priority": 1,
                            "max_amount": 1
                        },
                        {
                            "item": "billey:shark_tooth",
                            "priority": 1,
                            "max_amount": 1
                        },
                        {
                            "item": "billey:shark_scales",
                            "priority": 1,
                            "max_amount": 1
                        },
                        {
                            "item": "billey:swordfin",
                            "priority": 1,
                            "max_amount": 1
                        },
                        {
                            "item": "billey:swordtail",
                            "priority": 1,
                            "max_amount": 1
                        },
                        {
                            "item": "billey:swordstick",
                            "priority": 1,
                            "max_amount": 1
                        },
                        {
                            "item": "billey:anglerlight",
                            "priority": 1,
                            "max_amount": 1
                        },
                        {
                            "item": "billey:betta_fish",
                            "priority": 0,
                            "max_amount": 1
                        },
                        {
                            "item": "billey:raw_catfish",
                            "priority": 0,
                            "max_amount": 1
                        },
                        {
                            "item": "billey:pizzapiece",
                            "priority": 0,
                            "max_amount": 1
                        },
                        {
                            "item": "billey:raw_piranha",
                            "priority": 0,
                            "max_amount": 1
                        }
                    ]
                },
                "minecraft:behavior.eat_carried_item": {
                    "priority": 4,
                    "delay_before_eating": 0
                },
                "minecraft:behavior.pickup_items": {
                    "priority": 0,
                    "max_dist": 10,
                    "goal_radius": 2,
                    "speed_multiplier": 1.1
                },
                "minecraft:behavior.equip_item": {
                    "priority": 2
                },
                "minecraft:type_family": {
                    "family": [
                        "tiktaalik",
                        "eatscod",
                        "mob"
                    ]
                },
                "minecraft:behavior.tempt": {
                    "priority": 3,
                    "speed_multiplier": 1.0,
                    "within_radius": 16,
                    "can_get_scared": true,
                    "items": [
                        "billey:pizzapiece",
                        "billey:raw_piranha",
                        "billey:betta_fish"
                    ]
                },
                "minecraft:despawn": {
                    "despawn_from_distance": {}
                },
                "minecraft:tameable": {
                    "probability": 0.69420666,
                    "tame_items": [
                        "billey:power_banana",
                        "billey:pizzapiece",
                        "billey:raw_piranha",
                        "billey:betta_fish"
                    ],
                    "tame_event": {
                        "event": "tamed_yay",
                        "target": "self"
                    }
                }
            },
            "angry": {
                "minecraft:follow_range": {
                    "value": 10,
                    "max": 20
                }
            },
            "tamed": {
                "minecraft:sittable": {},
                "minecraft:behavior.stay_while_sitting": {
                    "priority": 2
                },
                "minecraft:behavior.owner_hurt_target": {
                    "priority": 3
                },
                "minecraft:behavior.owner_hurt_by_target": {
                    "priority": 4
                },
                "minecraft:persistent": {},
                "minecraft:leashable": {
                    "soft_distance": 6.0,
                    "hard_distance": 8.0,
                    "max_distance": 12.0
                },
                "minecraft:behavior.tempt": {
                    "priority": 3,
                    "speed_multiplier": 1.0,
                    "within_radius": 16,
                    "items": [
                        "billey:pizzapiece",
                        "billey:sand_banana",
                        "billey:betta_fish",
                        "billey:raw_piranha",
                        "fish",
                        "salmon",
                        "billey:raw_catfish"
                    ]
                },
                "minecraft:behavior.avoid_mob_type": {
                    "priority": 0,
                    "max_flee": 16,
                    "entity_types": [
                        {
                            "filters": {
                                "test": "has_component",
                                "subject": "other",
                                "value": "minecraft:explode"
                            },
                            "max_dist": 12,
                            "walk_speed_multiplier": 1.4
                        }
                    ]
                },
                "minecraft:is_tamed": {},
                "minecraft:tameable": {}, //for the script to be able to get the mob's owner
                "minecraft:type_family": {
                    "family": [
                        "tiktaalik",
                        "eatscod",
                        "mob"
                    ]
                }
            }
        },
        "components": {
            "minecraft:is_hidden_when_invisible": {},
            "minecraft:collision_box": {
                "width": 0.9,
                "height": 0.6
            },
            "minecraft:movement.amphibious": {},
            "minecraft:loot": {
                "table": "loot_tables/entities/billmercat.json"
            },
            "minecraft:jump.static": {},
            "minecraft:can_climb": {},
            "minecraft:breathable": {
                "breathes_air": true,
                "breathes_water": true,
                "generates_bubbles": false
            },
            "minecraft:movement": {
                "value": 0.2
            },
            "minecraft:underwater_movement": {
                "value": 0.15
            },
            "minecraft:behavior.look_at_player": {
                "probability": 0.01,
                "priority": 7,
                "look_distance": 3
            },
            "minecraft:behavior.random_look_around": {
                "priority": 8
            },
            "minecraft:physics": {},
            "minecraft:behavior.hurt_by_target": {
                "priority": 1
            },
            "minecraft:pushable": {
                "is_pushable": true,
                "is_pushable_by_piston": true
            },
            "minecraft:attack": {
                "damage": 11
            },
            "minecraft:healable": {
                "items": [
                    {
                        "item": "billey:poultry_orange",
                        "heal_amount": 7
                    },
                    {
                        "item": "billey:cooked_snail",
                        "heal_amount": 4,
                        "effects": [
                            {
                                "name": "strength",
                                "chance": 1.0,
                                "duration": 15,
                                "amplifier": 1
                            }
                        ]
                    },
                    {
                        "item": "billey:cooked_snail_s",
                        "heal_amount": 4,
                        "effects": [
                            {
                                "name": "speed",
                                "chance": 1.0,
                                "duration": 15,
                                "amplifier": 1
                            }
                        ]
                    },
                    {
                        "item": "billey:cooked_snail_w",
                        "heal_amount": 4,
                        "effects": [
                            {
                                "name": "regeneration",
                                "chance": 1.0,
                                "duration": 15,
                                "amplifier": 1
                            }
                        ]
                    },
                    {
                        "item": "billey:pizzapiece",
                        "heal_amount": 6
                    },
                    {
                        "item": "billey:raw_piranha",
                        "heal_amount": 4
                    },
                    {
                        "item": "billey:betta_fish",
                        "heal_amount": 5
                    },
                    {
                        "item": "fish",
                        "heal_amount": 3
                    },
                    {
                        "item": "salmon",
                        "heal_amount": 3
                    },
                    {
                        "item": "billey:raw_catfish",
                        "heal_amount": 3
                    }
                ]
            },
            "minecraft:behavior.nearest_attackable_target": {
                "priority": 4,
                "attack_interval": 100,
                "entity_types": [
                    {
                        "filters": {
                            "any_of": [
                                {
                                    "test": "is_family",
                                    "subject": "other",
                                    "value": "wildcod"
                                }
                            ]
                        },
                        "max_dist": 13
                    },
                    {
                        "filters": {
                            "test": "is_family",
                            "subject": "other",
                            "value": "anglerfish_boost"
                        },
                        "max_dist": 127,
                        "must_see": false
                    },
                    {
                        "filters": {
                            "any_of": [
                                {
                                    "test": "is_family",
                                    "subject": "other",
                                    "value": "monster"
                                }
                            ]
                        },
                        "max_dist": 4
                    }
                ],
                "must_see": true
            },
            "minecraft:behavior.melee_attack": {
                "require_complete_path": true,
                "priority": 2,
                "speed_multiplier": 1.5,
                "reach_multiplier": 1,
                "track_target": true,
                "on_attack": {
                    "event": "on_attack",
                    "target": "self"
                },
                "on_kill": {
                    "event": "on_kill",
                    "target": "self"
                }
            },
            "minecraft:on_target_acquired": {
                "event": "billey:pet_target_acquired"
            },
            "minecraft:on_target_escape": {
                "event": "billey:pet_target_escape"
            },
            "minecraft:nameable": {}
        },
        "events": {
            "reset_target": {
                "reset_target": {}
            },
            "destroy_head_equipment": {
                "queue_command": {
                    "command": "scriptevent billey:destroy_pet_head_equipment"
                }
            },
            "set_follow_state": {
                "sequence": [
                    {
                        "filters": {
                            "test": "has_component",
                            "subject": "self",
                            "value": "minecraft:behavior.follow_owner"
                        },
                        "set_property": {
                            "billey:follow_owner_state": "following"
                        }
                    },
                    {
                        "filters": {
                            "test": "has_component",
                            "subject": "self",
                            "operator": "not",
                            "value": "minecraft:behavior.follow_owner"
                        },
                        "set_property": {
                            "billey:follow_owner_state": "wandering"
                        }
                    }
                ]
            },
            "set_sitting_property_false": {
                "set_property": {
                    "billey:is_sitting": false
                }
            },
            "set_sitting_property_true": {
                "set_property": {
                    "billey:is_sitting": true
                }
            },
            "say_owner_hit_pet_info": {
                "queue_command": {
                    "target": "other",
                    "command": [
                        "titleraw @s actionbar {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.owner_hit_pet\"}]}",
                        "tellraw @s[tag=!billey:has_hurt_own_pet] {\"rawtext\":[{\"translate\":\"ui.billeys_mobs.info.owner_hit_pet\"}]}",
                        "tag @s add billey:has_hurt_own_pet"
                    ]
                }
            },
            "say_other_hit_pet_info": {
                "queue_command": {
                    "target": "other",
                    "command": "titleraw @s actionbar {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.other_hit_pet\"}]}"
                }
            },
            "on_attack": {},
            "on_kill": {},
            "check_level": {
                "filters": {
                    "all_of": [
                        {
                            "test": "has_component",
                            "value": "minecraft:is_tamed"
                        },
                        {
                            "test": "has_component",
                            "operator": "not",
                            "value": "minecraft:is_baby"
                        }
                    ]
                },
                "sequence": [
                    {
                        "filters": {
                            "all_of": [
                                {
                                    "test": "int_property",
                                    "domain": "billey:level",
                                    "operator": "<",
                                    "value": 2
                                },
                                {
                                    "test": "float_property",
                                    "domain": "billey:xp",
                                    "operator": ">=",
                                    "value": 30.0 //xp_level_2
                                }
                            ]
                        },
                        "trigger": "to_level2"
                    },
                    {
                        "filters": {
                            "all_of": [
                                {
                                    "test": "int_property",
                                    "domain": "billey:level",
                                    "operator": "<",
                                    "value": 3
                                },
                                {
                                    "test": "float_property",
                                    "domain": "billey:xp",
                                    "operator": ">=",
                                    "value": 90.0 //xp_level_3
                                }
                            ]
                        },
                        "trigger": "to_level3"
                    },
                    {
                        "filters": {
                            "all_of": [
                                {
                                    "test": "int_property",
                                    "domain": "billey:level",
                                    "operator": "<",
                                    "value": 4
                                },
                                {
                                    "test": "float_property",
                                    "domain": "billey:xp",
                                    "operator": ">=",
                                    "value": 180.0 //xp_level_4
                                }
                            ]
                        },
                        "trigger": "to_level4"
                    },
                    {
                        "filters": {
                            "all_of": [
                                {
                                    "test": "int_property",
                                    "domain": "billey:level",
                                    "operator": "<",
                                    "value": 5
                                },
                                {
                                    "test": "float_property",
                                    "domain": "billey:xp",
                                    "operator": ">=",
                                    "value": 310.0 //xp_level_5
                                }
                            ]
                        },
                        "trigger": "to_level5"
                    },
                    {
                        "filters": {
                            "all_of": [
                                {
                                    "test": "int_property",
                                    "domain": "billey:level",
                                    "operator": "<",
                                    "value": 6
                                },
                                {
                                    "test": "float_property",
                                    "domain": "billey:xp",
                                    "operator": ">=",
                                    "value": 520.0 //xp_level_6
                                }
                            ]
                        },
                        "trigger": "to_level6"
                    },
                    {
                        "filters": {
                            "all_of": [
                                {
                                    "test": "int_property",
                                    "domain": "billey:level",
                                    "operator": "<",
                                    "value": 7
                                },
                                {
                                    "test": "float_property",
                                    "domain": "billey:xp",
                                    "operator": ">=",
                                    "value": 890.0 //xp_level_7
                                }
                            ]
                        },
                        "trigger": "to_level7"
                    },
                    {
                        "filters": {
                            "all_of": [
                                {
                                    "test": "int_property",
                                    "domain": "billey:level",
                                    "operator": "<",
                                    "value": 8
                                },
                                {
                                    "test": "float_property",
                                    "domain": "billey:xp",
                                    "operator": ">=",
                                    "value": 1650.0 //xp_level_8
                                }
                            ]
                        },
                        "trigger": "to_level8"
                    },
                    {
                        "filters": {
                            "all_of": [
                                {
                                    "test": "int_property",
                                    "domain": "billey:level",
                                    "operator": "<",
                                    "value": 9
                                },
                                {
                                    "test": "float_property",
                                    "domain": "billey:xp",
                                    "operator": ">=",
                                    "value": 3310.0 //xp_level_9
                                }
                            ]
                        },
                        "trigger": "to_level9"
                    },
                    {
                        "filters": {
                            "all_of": [
                                {
                                    "test": "int_property",
                                    "domain": "billey:level",
                                    "operator": "<",
                                    "value": 10
                                },
                                {
                                    "test": "float_property",
                                    "domain": "billey:xp",
                                    "operator": ">=",
                                    "value": 7150.0 //xp_level_10
                                }
                            ]
                        },
                        "trigger": "to_level10"
                    }
                ]
            },
            "to_level1": {
                "sequence": [
                    {
                        "add": {
                            "component_groups": [
                                "level1"
                            ]
                        },
                        "set_property": {
                            "billey:level": "1",
                            "billey:xp": "0"
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "tellraw @a[r=30] {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup.reset\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
                                "playsound billey.level_up @a[r=30] ~~~ 1.0 1.1 0.5"
                            ]
                        }
                    }
                ]
            },
            "to_level2": {
                "sequence": [
                    {
                        "add": {
                            "component_groups": [
                                "level2"
                            ]
                        },
                        "set_property": {
                            "billey:level": "2",
                            "billey:xp": "30" //xp_level_2
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "tellraw @p {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"2\"}]}}]}",
                                "tellraw @p {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup.info\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
                                "tag @p add got_lvl_msg",
                                "tellraw @a[r=30,tag=!got_lvl_msg] {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"2\"}]}}]}",
                                "tellraw @a[r=30,tag=!got_lvl_msg] {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup.info\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
                                "tag @a remove got_lvl_msg",
                                "effect @s instant_health 1 255 true",
                                "playsound billey.level_up @a[r=30] ~~~ 1.0 1.1 0.5"
                            ]
                        }
                    }
                ]
            },
            "to_level3": {
                "sequence": [
                    {
                        "add": {
                            "component_groups": [
                                "level3"
                            ]
                        },
                        "set_property": {
                            "billey:level": "3",
                            "billey:xp": "90" //xp_level_3
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "tellraw @p {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"3\"}]}}]}",
                                "tellraw @p {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup.info\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
                                "tag @p add got_lvl_msg",
                                "tellraw @a[r=30,tag=!got_lvl_msg] {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"3\"}]}}]}",
                                "tellraw @a[r=30,tag=!got_lvl_msg] {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup.info\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
                                "tag @a remove got_lvl_msg",
                                "effect @s instant_health 1 255 true",
                                "playsound billey.level_up @a[r=30] ~~~ 1.0 1.1 0.5",
                                "tellraw @a[r=30] {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup.oneshot\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}"
                            ]
                        }
                    }
                ]
            },
            "to_level4": {
                "sequence": [
                    {
                        "add": {
                            "component_groups": [
                                "level4"
                            ]
                        },
                        "set_property": {
                            "billey:level": "4",
                            "billey:xp": "180" //xp_level_4
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "tellraw @p {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"4\"}]}}]}",
                                "tellraw @p {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup.info\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
                                "tag @p add got_lvl_msg",
                                "tellraw @a[r=30,tag=!got_lvl_msg] {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"4\"}]}}]}",
                                "tellraw @a[r=30,tag=!got_lvl_msg] {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup.info\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
                                "tag @a remove got_lvl_msg",
                                "effect @s instant_health 1 255 true",
                                "playsound billey.level_up @a[r=30] ~~~ 1.0 1.1 0.5"
                            ]
                        }
                    }
                ]
            },
            "to_level5": {
                "sequence": [
                    {
                        "add": {
                            "component_groups": [
                                "level5"
                            ]
                        },
                        "set_property": {
                            "billey:level": "5",
                            "billey:xp": "310" //xp_level_5
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "tellraw @p {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"5\"}]}}]}",
                                "tellraw @p {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup.info\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
                                "tag @p add got_lvl_msg",
                                "tellraw @a[r=30,tag=!got_lvl_msg] {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"5\"}]}}]}",
                                "tellraw @a[r=30,tag=!got_lvl_msg] {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup.info\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
                                "tag @a remove got_lvl_msg",
                                "effect @s instant_health 1 255 true",
                                "playsound billey.level_up @a[r=30] ~~~ 1.0 1.1 0.5"
                            ]
                        }
                    }
                ]
            },
            "to_level6": {
                "sequence": [
                    {
                        "add": {
                            "component_groups": [
                                "level6"
                            ]
                        },
                        "set_property": {
                            "billey:level": "6",
                            "billey:xp": "520" //xp_level_6
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "tellraw @p {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"6\"}]}}]}",
                                "tellraw @p {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup.info\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
                                "tag @p add got_lvl_msg",
                                "tellraw @a[r=30,tag=!got_lvl_msg] {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"6\"}]}}]}",
                                "tellraw @a[r=30,tag=!got_lvl_msg] {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup.info\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
                                "tag @a remove got_lvl_msg",
                                "effect @s instant_health 1 255 true",
                                "playsound billey.level_up @a[r=30] ~~~ 1.0 1.1 0.5"
                            ]
                        }
                    }
                ]
            },
            "to_level7": {
                "sequence": [
                    {
                        "add": {
                            "component_groups": [
                                "level7"
                            ]
                        },
                        "set_property": {
                            "billey:level": "7",
                            "billey:xp": "890" //xp_level_7
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "tellraw @p {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"7\"}]}}]}",
                                "tellraw @p {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup.info\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
                                "tag @p add got_lvl_msg",
                                "tellraw @a[r=30,tag=!got_lvl_msg] {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"7\"}]}}]}",
                                "tellraw @a[r=30,tag=!got_lvl_msg] {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup.info\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
                                "tag @a remove got_lvl_msg",
                                "effect @s instant_health 1 255 true",
                                "playsound billey.level_up @a[r=30] ~~~ 1.0 1.1 0.5"
                            ]
                        }
                    }
                ]
            },
            "to_level8": {
                "sequence": [
                    {
                        "add": {
                            "component_groups": [
                                "level8"
                            ]
                        },
                        "set_property": {
                            "billey:level": "8",
                            "billey:xp": "1650" //xp_level_8
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "tellraw @p {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"8\"}]}}]}",
                                "tellraw @p {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup.info\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
                                "tag @p add got_lvl_msg",
                                "tellraw @a[r=30,tag=!got_lvl_msg] {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"8\"}]}}]}",
                                "tellraw @a[r=30,tag=!got_lvl_msg] {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup.info\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
                                "tag @a remove got_lvl_msg",
                                "effect @s instant_health 1 255 true",
                                "playsound billey.level_up @a[r=30] ~~~ 1.0 1.1 0.5"
                            ]
                        }
                    }
                ]
            },
            "to_level9": {
                "sequence": [
                    {
                        "add": {
                            "component_groups": [
                                "level9"
                            ]
                        },
                        "set_property": {
                            "billey:level": "9",
                            "billey:xp": "3310" //xp_level_9
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "tellraw @p {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"9\"}]}}]}",
                                "tellraw @p {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup.info\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
                                "tag @p add got_lvl_msg",
                                "tellraw @a[r=30,tag=!got_lvl_msg] {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"9\"}]}}]}",
                                "tellraw @a[r=30,tag=!got_lvl_msg] {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup.info\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
                                "tag @a remove got_lvl_msg",
                                "effect @s instant_health 1 255 true",
                                "playsound billey.level_up @a[r=30] ~~~ 1.0 1.1 0.5"
                            ]
                        }
                    }
                ]
            },
            "to_level10": {
                "sequence": [
                    {
                        "add": {
                            "component_groups": [
                                "level10"
                            ]
                        },
                        "set_property": {
                            "billey:level": "10",
                            "billey:xp": "7150" //xp_level_10
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "tellraw @p {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"10\"}]}}]}",
                                "tellraw @p {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup.info\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
                                "tag @p add got_lvl_msg",
                                "tellraw @a[r=30,tag=!got_lvl_msg] {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"},{\"text\":\"10\"}]}}]}",
                                "tellraw @a[r=30,tag=!got_lvl_msg] {\"rawtext\":[{\"translate\":\"chat.billeys_mobs.levelup.info\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}",
                                "tag @a remove got_lvl_msg",
                                "effect @s instant_health 1 255 true",
                                "playsound billey.level_up @a[r=30] ~~~ 1.0 1.1 0.5"
                            ]
                        }
                    }
                ]
            },
            "add_sittable": {
                "add": {
                    "component_groups": [
                        "sittable"
                    ]
                }
            },
            "remove_sittable": {
                "remove": {
                    "component_groups": [
                        "sittable"
                    ]
                }
            },
            "send_info": {
                "queue_command": {
                    "target": "other",
                    "command": [
                        "tellraw @s {\"rawtext\":[{\"text\":\"\\n\"}]}",
                        "tellraw @s {\"rawtext\":[{\"translate\":\"ui.billeys_mobs.info.tiktaalik\",\"with\":[\"\\n\"]}]}",
                        "tellraw @s {\"rawtext\":[{\"text\":\"\\n\"}]}",
                        "tellraw @s {\"rawtext\":[{\"translate\":\"ui.billeys_mobs.info.tip5\"}]}",
                        "tellraw @s {\"rawtext\":[{\"text\":\"\\n\"}]}"
                    ]
                }
            },
            "get_electrocuted": {
                "add": {
                    "component_groups": [
                        "electrocuted"
                    ]
                }
            },
            "billey:pet_target_acquired": {
                "add": {
                    "component_groups": [
                        "angry"
                    ]
                }
            },
            "billey:pet_target_escape": {
                "remove": {
                    "component_groups": [
                        "angry"
                    ]
                }
            },
            "minecraft:entity_born": {
                "sequence": [
                    {
                        "add": {
                            "component_groups": [
                                "alive",
                                "baby",
                                "in_water",
                                "tamed",
                                "baby_tamed",
                                "following"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "has_component",
                            "value": "minecraft:is_illager_captain",
                            "subject": "parent"
                        },
                        "add": {
                            "component_groups": [
                                "kromatik"
                            ]
                        }
                    }
                ]
            },
            "minecraft:ageable_grow_up": {
                "remove": {
                    "component_groups": [
                        "baby",
                        "baby_tamed",
                        "baby_wild"
                    ]
                },
                "add": {
                    "component_groups": [
                        "adult"
                    ]
                }
            },
            "beenfedabanana": {
                "sequence": [
                    {
                        "queue_command": {
                            "command": [
                                "particle billey:eatbanana ~ ~.5 ~"
                            ]
                        }
                    },
                    {
                        "randomize": [
                            {
                                "weight": 8,
                                "queue_command": {
                                    "command": [
                                        "effect @s regeneration 7 1"
                                    ]
                                }
                            },
                            {
                                "weight": 4,
                                "queue_command": {
                                    "command": [
                                        "effect @s regeneration 10"
                                    ]
                                }
                            },
                            {
                                "weight": 4,
                                "queue_command": {
                                    "command": [
                                        "effect @s speed 10"
                                    ]
                                }
                            },
                            {
                                "weight": 4,
                                "queue_command": {
                                    "command": [
                                        "effect @s absorption 10"
                                    ]
                                }
                            },
                            {
                                "weight": 4,
                                "queue_command": {
                                    "command": [
                                        "effect @s resistance 10"
                                    ]
                                }
                            },
                            {
                                "weight": 4,
                                "queue_command": {
                                    "command": [
                                        "effect @s strength 10"
                                    ]
                                }
                            },
                            {
                                "weight": 4,
                                "queue_command": {
                                    "command": [
                                        "effect @s water_breathing 10"
                                    ]
                                }
                            },
                            {
                                "weight": 4,
                                "queue_command": {
                                    "command": [
                                        "effect @s fire_resistance 10"
                                    ]
                                }
                            },
                            {
                                "weight": 1,
                                "sequence": [
                                    {
                                        "queue_command": {
                                            "command": [
                                                "effect @s levitation 1 0 true"
                                            ]
                                        }
                                    },
                                    {
                                        "queue_command": {
                                            "target": "other",
                                            "command": [
                                                "effect @s levitation 1 0 true"
                                            ]
                                        }
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "bepetted": {
                "sequence": [
                    {
                        "randomize": [
                            {
                                "weight": 13
                            },
                            {
                                "weight": 1
                            },
                            {
                                "weight": 1,
                                "queue_command": {
                                    "command": [
                                        "playanimation @s animation.billeys_mobs.cat.petted"
                                    ]
                                }
                            }
                        ]
                    },
                    {
                        "queue_command": {
                            "target": "other",
                            "command": [
                                "playanimation @s animation.billeys_mobsplayer.pet"
                            ]
                        }
                    },
                    {
                        "randomize": [
                            {
                                "weight": 1
                            },
                            {
                                "weight": 99,
                                "queue_command": {
                                    "command": [
                                        "playsound mob.cat.purr @a ~~~"
                                    ]
                                }
                            },
                            {
                                "weight": 3,
                                "queue_command": {
                                    "command": [
                                        "playsound mob.cat.purr @a ~~~",
                                        "effect @s resistance 10 1 true"
                                    ]
                                }
                            },
                            {
                                "weight": 3,
                                "queue_command": {
                                    "command": [
                                        "playsound mob.cat.purr @a ~~~",
                                        "effect @s fire_resistance 10 1 true"
                                    ]
                                }
                            },
                            {
                                "weight": 3,
                                "queue_command": {
                                    "command": [
                                        "playsound mob.cat.purr @a ~~~",
                                        "effect @s strength 10 1 true"
                                    ]
                                }
                            },
                            {
                                "weight": 3,
                                "queue_command": {
                                    "command": [
                                        "playsound mob.cat.purr @a ~~~",
                                        "effect @s water_breathing 30 0 true"
                                    ]
                                }
                            },
                            {
                                "weight": 3,
                                "queue_command": {
                                    "command": [
                                        "playsound mob.cat.purr @a ~~~",
                                        "effect @s speed 10 1 true"
                                    ]
                                }
                            },
                            {
                                "weight": 1,
                                "queue_command": {
                                    "command": [
                                        "playsound mob.cat.purr @a ~~~",
                                        "effect @s levitation 1 1 true",
                                        "effect @s regeneration 30 1 true"
                                    ]
                                }
                            },
                            {
                                "weight": 1,
                                "queue_command": {
                                    "command": [
                                        "playsound mob.cat.purr @a ~~~",
                                        "effect @s speed 1 0"
                                    ]
                                }
                            }
                        ]
                    }
                ]
            },
            "kroma": {
                "add": {
                    "component_groups": [
                        "kromatik"
                    ]
                }
            },
            "nokroma": {
                "remove": {
                    "component_groups": [
                        "kromatik"
                    ]
                }
            },
            "minecraft:entity_spawned": {
                "sequence": [
                    {
                        "randomize": [
                            {
                                "weight": 3,
                                "add": {
                                    "component_groups": [
                                        "alive",
                                        "in_water",
                                        "wild",
                                        "variant0"
                                    ]
                                }
                            },
                            {
                                "weight": 30,
                                "add": {
                                    "component_groups": [
                                        "alive",
                                        "in_water",
                                        "wild",
                                        "variant1"
                                    ]
                                }
                            },
                            {
                                "weight": 30,
                                "add": {
                                    "component_groups": [
                                        "alive",
                                        "in_water",
                                        "wild",
                                        "variant2"
                                    ]
                                }
                            },
                            {
                                "weight": 30,
                                "add": {
                                    "component_groups": [
                                        "alive",
                                        "in_water",
                                        "wild",
                                        "variant3"
                                    ]
                                }
                            },
                            {
                                "weight": 30,
                                "add": {
                                    "component_groups": [
                                        "alive",
                                        "in_water",
                                        "wild",
                                        "variant4"
                                    ]
                                }
                            },
                            {
                                "weight": 1,
                                "add": {
                                    "component_groups": [
                                        "alive",
                                        "in_water",
                                        "wild",
                                        "variant5"
                                    ]
                                }
                            },
                            {
                                "weight": 20,
                                "add": {
                                    "component_groups": [
                                        "alive",
                                        "in_water",
                                        "wild",
                                        "variant6"
                                    ]
                                }
                            },
                            {
                                "weight": 20,
                                "add": {
                                    "component_groups": [
                                        "alive",
                                        "in_water",
                                        "wild",
                                        "variant7"
                                    ]
                                }
                            },
                            {
                                "weight": 20,
                                "add": {
                                    "component_groups": [
                                        "alive",
                                        "in_water",
                                        "wild",
                                        "variant8"
                                    ]
                                }
                            },
                            {
                                "weight": 20,
                                "add": {
                                    "component_groups": [
                                        "alive",
                                        "in_water",
                                        "wild",
                                        "variant9"
                                    ]
                                }
                            }
                        ]
                    },
                    {
                        "randomize": [
                            {
                                "weight": 9,
                                "add": {
                                    "component_groups": [
                                        "adult"
                                    ]
                                }
                            },
                            {
                                "weight": 1,
                                "add": {
                                    "component_groups": [
                                        "baby",
                                        "baby_wild"
                                    ]
                                }
                            }
                        ]
                    },
                    {
                        "randomize": [
                            {
                                "weight": 299
                            },
                            {
                                "weight": 1,
                                "add": {
                                    "component_groups": [
                                        "kromatik"
                                    ]
                                }
                            }
                        ]
                    }
                ]
            },
            "wearhat": {
                "add": {
                    "component_groups": [
                        "hat"
                    ]
                }
            },
            "nohat": {
                "remove": {
                    "component_groups": [
                        "hat"
                    ]
                }
            },
            "enter_water": {
                "remove": {
                    "component_groups": [
                        "out_of_water"
                    ]
                },
                "add": {
                    "component_groups": [
                        "in_water"
                    ]
                }
            },
            "exit_water": {
                "remove": {
                    "component_groups": [
                        "in_water"
                    ]
                },
                "add": {
                    "component_groups": [
                        "out_of_water"
                    ]
                }
            },
            "minecraft:die1": {
                "add": {
                    "component_groups": [
                        "eaten1"
                    ]
                },
                "remove": {
                    "component_groups": [
                        "alive"
                    ]
                }
            },
            "minecraft:die2": {
                "add": {
                    "component_groups": [
                        "eaten2"
                    ]
                },
                "remove": {
                    "component_groups": [
                        "eaten1"
                    ]
                }
            },
            "eventwander": {
                "sequence": [
                    {
                        "remove": {
                            "component_groups": [
                                "following"
                            ]
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "tellraw @a[r=5] {\"rawtext\": [{\"translate\": \"billmobs.wander\"},{\"selector\": \"@s\"}, {\"translate\": \"billmobs.wander2\"}] }"
                            ]
                        }
                    },
                    {
                        "set_property": {
                            "billey:follow_owner_state": "wandering"
                        }
                    }
                ]
            },
            "eventfollow": {
                "sequence": [
                    {
                        "add": {
                            "component_groups": [
                                "following"
                            ]
                        }
                    },
                    {
                        "queue_command": {
                            "command": [
                                "tellraw @a[r=5] {\"rawtext\": [{\"translate\": \"billmobs.follow\"},{\"selector\": \"@s\"}, {\"translate\": \"billmobs.follow2\"}] }"
                            ]
                        }
                    },
                    {
                        "set_property": {
                            "billey:follow_owner_state": "following"
                        }
                    }
                ]
            },
            "minecraft:die3": {
                "add": {
                    "component_groups": [
                        "eaten3"
                    ]
                },
                "remove": {
                    "component_groups": [
                        "eaten2"
                    ]
                }
            },
            "minecraft:die4": {
                "add": {
                    "component_groups": [
                        "eaten4"
                    ]
                },
                "remove": {
                    "component_groups": [
                        "eaten3"
                    ]
                }
            },
            "minecraft:die5": {
                "add": {
                    "component_groups": [
                        "eaten5"
                    ]
                },
                "remove": {
                    "component_groups": [
                        "eaten4"
                    ]
                }
            },
            "minecraft:die6": {
                "add": {
                    "component_groups": [
                        "eaten6"
                    ]
                },
                "remove": {
                    "component_groups": [
                        "eaten5"
                    ]
                }
            },
            "minecraft:die7": {
                "add": {
                    "component_groups": [
                        "die"
                    ]
                },
                "remove": {
                    "component_groups": [
                        "eaten6"
                    ]
                }
            },
            "untame": {
                "sequence": [
                    {
                        "queue_command": {
                            "command": [
                                "playsound random.orb @a ~~~ 1.00 0.8 0.5",
                                "tellraw @a[r=5] {\"rawtext\": [{\"translate\": \"billmobs.untame\"},{\"selector\": \"@s\"}, {\"translate\": \"billmobs.untame2\"}] }"
                            ]
                        }
                    },
                    {
                        "remove": {
                            "component_groups": [
                                "tamed_component"
                            ]
                        },
                        "add": {
                            "component_groups": [
                                "untamed"
                            ]
                        }
                    }
                ]
            },
            "tamed_yay": {
                "sequence": [
                    {
                        "queue_command": {
                            "command": [
                                "tellraw @s {\"rawtext\":[{\"text\":\"\\n\"}]}",
                                "tellraw @a[r=6,tag=!billeyinfotip5_v2] {\"rawtext\":[{\"translate\":\"ui.billeys_mobs.info.tip5\"}]}",
                                "tellraw @s {\"rawtext\":[{\"text\":\"\\n\"}]}",
                                "tag @a[r=6,tag=!billeyinfotip5_v2] add billeyinfotip5_v2"
                            ]
                        }
                    },
                    {
                        "add": {
                            "component_groups": [
                                "tamed",
                                "following"
                            ]
                        },
                        "remove": {
                            "component_groups": [
                                "wild"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "has_component",
                            "value": "minecraft:is_baby"
                        },
                        "remove": {
                            "component_groups": [
                                "baby_wild"
                            ]
                        },
                        "add": {
                            "component_groups": [
                                "baby_tamed"
                            ]
                        }
                    }
                ]
            }
        }
    }
}