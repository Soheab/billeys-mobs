{
	"format_version": "1.8.0",
	"animations": {
		"animation.billduckling.look_at_target": {
			"loop": true,
			"bones": {
				"lol": {
					"rotation": ["q.target_x_rotation", "q.target_y_rotation", 0]
				}
			}
		},
		"animation.billfishy.look": {
			"loop": true,
			"bones": {
				"abody": {
					"rotation": ["q.target_x_rotation / 2", "q.target_y_rotation", 0]
				},
				"body": {
					"rotation": ["q.target_x_rotation / 2", "q.target_y_rotation", 0]
				},
				"body_front": {
					"rotation": ["q.target_x_rotation / 2", "q.target_y_rotation", 0]
				},
				"abody_front": {
					"rotation": ["q.target_x_rotation / 2", "q.target_y_rotation", 0]
				}
			}
		},
		"animation.cat.nip": {
			"loop": true,
			"bones": {
				"tongue": {
					"position": [0, 0, -1]
				},
				"tongue4": {
					"rotation": [22.5, 0, 0]
				}
			}
		},
		"animation.cat.beg": {
			"loop": "hold_on_last_frame",
			"animation_length": 0.214,
			"bones": {
				"tail3": {
					"rotation": {
						"0.0": ["(q.is_sitting&&q.is_alive&&!q.has_rider&&!q.is_avoiding_mobs&&!(q.is_moving&&q.has_target)) ? 40 : 0", 0, 0],
						"0.04": ["25 + ((q.is_sitting&&q.is_alive&&!q.has_rider&&!q.is_avoiding_mobs&&!(q.is_moving&&q.has_target)) ? 40 : 20)", 0, 0]
					},
					"position": [0, 0, "(q.is_sitting&&q.is_alive&&!q.has_rider&&!q.is_avoiding_mobs&&!(q.is_moving&&q.has_target)) ? 0 : 1"]
				},
				"tail5": {
					"rotation": {
						"0.04": [0, 0, 0],
						"0.08": [12.5, 0, 0]
					}
				},
				"tail4": {
					"rotation": {
						"0.04": [0, 0, 0],
						"0.08": [12.5, 0, 0]
					}
				},
				"tail6": {
					"rotation": {
						"0.04": [0, 0, 0],
						"0.08": [20, 0, 0]
					}
				},
				"tail1": {
					"rotation": ["(q.is_sitting&&q.is_alive&&!q.has_rider&&!q.is_avoiding_mobs&&!(q.is_moving&&q.has_target)) ? 20 : 62.5", 0, 0]
				}
			}
		},
		"animation.cat.tailsnek": {
			"loop": true,
			"bones": {
				"tail3": {
					"rotation": [0, "math.sin(q.anim_time * 150) * 10", 0]
				},
				"tail5": {
					"rotation": [0, 0, "math.sin(q.anim_time * 150 + 2 * 90) * 10"]
				},
				"tail4": {
					"rotation": [0, 0, "math.sin(q.anim_time * 150 + 90) * 10"]
				},
				"tail6": {
					"rotation": [0, 0, "math.sin(q.anim_time * 150 + 3 * 90) * 10"]
				}
			}
		},
		"animation.picklecat.fixsit": {
			"loop": true,
			"bones": {
				"tail1": {
					"position": [0, 2, 1]
				}
			}
		},
		"animation.billhmrshark.swim": {
			"loop": true,
			"bones": {
				"bone": {
					"rotation": ["q.is_in_water ? q.target_x_rotation / 2 : 0", "5 * math.sin(280 * q.life_time) + (q.is_in_water ? q.target_y_rotation / 2 : 0)", 0]
				},
				"topfin": {
					"position": [0, 0, 0]
				},
				"back": {
					"rotation": [0, "15 * math.sin(280 * q.life_time + 10)", 0]
				},
				"bone2": {
					"rotation": [0, "15 * math.sin(280 * q.life_time + 2 * 10)", 0]
				},
				"bone3": {
					"rotation": [0, "15 * math.sin(280 * q.life_time + 3 * 10)", 0]
				},
				"tail": {
					"rotation": [0, "15 * math.sin(280 * q.life_time + 4 * 15)", 0]
				},
				"head": {
					"rotation": [0, "2 * math.sin(280 * q.life_time)", 0]
				}
			}
		},
		"animation.billhmrshark.turn": {
			"loop": true,
			"bones": {
				"bone": {
					"rotation": [0, 0, "math.clamp(q.target_y_rotation/2,-15,15)"]
				}
			}
		},
		"animation.billduck.walk": {
			"loop": true,
			"anim_time_update": "q.modified_distance_moved * 600",
			"bones": {
				"leg0": {
					"rotation": ["math.sin(q.life_time * 600 + 45) * 60", 0, 0],
					"position": [0, 0, "-math.cos(q.life_time * 600 + 45)"]
				},
				"bone5": {
					"rotation": ["math.sin(q.life_time * 600-180) * 20-10", 0, 0]
				},
				"leg1": {
					"rotation": ["-math.sin(q.life_time * 600 + 45) * 60", 0, 0],
					"position": [0, 0, "math.cos(q.life_time * 600 + 45)"]
				},
				"bone4": {
					"rotation": ["math.sin(q.life_time * 600) * 20-10", 0, 0]
				},
				"bodynolegs": {
					"rotation": [0, 0, "math.sin(q.life_time * 600 + 45) * 6"]
				},
				"body": {
					"position": [0, "math.abs(math.cos(q.life_time*600+45))/2", 0]
				},
				"head": {
					"rotation": ["math.cos(q.life_time * 900 + 45) * 2", 0, 0]
				}
			}
		}
	}
}